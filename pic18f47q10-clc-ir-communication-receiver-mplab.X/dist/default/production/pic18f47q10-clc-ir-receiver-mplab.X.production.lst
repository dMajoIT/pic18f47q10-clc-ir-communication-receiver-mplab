

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 14 14:23:01 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    99                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   100                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   101                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   102  0000                     
   103                           ; Version 2.30
   104                           ; Generated 20/08/2020 GMT
   105                           ; 
   106                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution. Publication is not required when
   120                           ;        this file is used in an embedded application.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC18F47Q10 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138  0000                     
   139 ;; Function _SPI1_ExchangeBlock is unused but had its address taken
   140  0000                     
   141 ;; Function _SPI1_ReadBlock is unused but had its address taken
   142  0000                     
   143 ;; Function _SPI1_WriteByte is unused but had its address taken
   144  0000                     
   145 ;; Function _SPI1_ReadByte is unused but had its address taken
   146  0000                     
   147                           	psect	idataBANK0
   148  011FB2                     __pidataBANK0:
   149                           	callstack 0
   150                           
   151                           ;initializer for lcd_example@F52
   152  011FB2  3C                 	db	60
   153  011FB3  2A                 	db	42
   154  011FB4  20                 	db	32
   155  011FB5  20                 	db	32
   156  011FB6  20                 	db	32
   157  011FB7  57                 	db	87
   158  011FB8  4F                 	db	79
   159  011FB9  52                 	db	82
   160  011FBA  4C                 	db	76
   161  011FBB  44                 	db	68
   162  011FBC  20                 	db	32
   163  011FBD  20                 	db	32
   164  011FBE  20                 	db	32
   165  011FBF  20                 	db	32
   166  011FC0  2A                 	db	42
   167  011FC1  3E                 	db	62
   168                           
   169                           ;initializer for lcd_example@F50
   170  011FC2  3C                 	db	60
   171  011FC3  2A                 	db	42
   172  011FC4  20                 	db	32
   173  011FC5  20                 	db	32
   174  011FC6  20                 	db	32
   175  011FC7  48                 	db	72
   176  011FC8  45                 	db	69
   177  011FC9  4C                 	db	76
   178  011FCA  4C                 	db	76
   179  011FCB  4F                 	db	79
   180  011FCC  20                 	db	32
   181  011FCD  20                 	db	32
   182  011FCE  20                 	db	32
   183  011FCF  20                 	db	32
   184  011FD0  2A                 	db	42
   185  011FD1  3E                 	db	62
   186                           
   187                           	psect	mediumconst
   188  00FEF0                     __pmediumconst:
   189                           	callstack 0
   190  00FEF0  00                 	db	0
   191  00FEF1                     _spiMaster:
   192                           	callstack 0
   193  00FEF1  84                 	db	low _SPI1_Close
   194  00FEF2  21                 	db	high _SPI1_Close
   195  00FEF3  01                 	db	low (_SPI1_Close shr (0+16))
   196  00FEF4  70                 	db	low _LCD_open
   197  00FEF5  21                 	db	high _LCD_open
   198  00FEF6  01                 	db	low (_LCD_open shr (0+16))
   199  00FEF7  2A                 	db	low _SPI1_ExchangeByte
   200  00FEF8  20                 	db	high _SPI1_ExchangeByte
   201  00FEF9  01                 	db	low (_SPI1_ExchangeByte shr (0+16))
   202  00FEFA  00                 	db	0
   203  00FEFB  00                 	db	0
   204  00FEFC  00                 	db	0
   205  00FEFD  54                 	db	low _SPI1_WriteBlock
   206  00FEFE  1B                 	db	high _SPI1_WriteBlock
   207  00FEFF  01                 	db	low (_SPI1_WriteBlock shr (0+16))
   208  00FF00  00                 	db	0
   209  00FF01  00                 	db	0
   210  00FF02  00                 	db	0
   211  00FF03  00                 	db	0
   212  00FF04  00                 	db	0
   213  00FF05  00                 	db	0
   214  00FF06  00                 	db	0
   215  00FF07  00                 	db	0
   216  00FF08  00                 	db	0
   217  00FF09  00                 	db	0
   218  00FF0A  00                 	db	0
   219  00FF0B  00                 	db	0
   220  00FF0C  00                 	db	0
   221  00FF0D  00                 	db	0
   222  00FF0E  00                 	db	0
   223  00FF0F                     __end_of_spiMaster:
   224                           	callstack 0
   225  00FF0F                     _dutyCycleValArr:
   226                           	callstack 0
   227  00FF0F  19                 	db	25
   228  00FF10  32                 	db	50
   229  00FF11  4B                 	db	75
   230  00FF12  64                 	db	100
   231  00FF13  4B                 	db	75
   232  00FF14  32                 	db	50
   233  00FF15  19                 	db	25
   234  00FF16  00                 	db	0
   235  00FF17                     __end_of_dutyCycleValArr:
   236                           	callstack 0
   237  00FF17                     _spi1_configuration:
   238                           	callstack 0
   239  00FF17  0A                 	db	10
   240  00FF18  40                 	db	64
   241  00FF19  4F                 	db	79
   242  00FF1A  00                 	db	0
   243  00FF1B  0A                 	db	10
   244  00FF1C  40                 	db	64
   245  00FF1D  4F                 	db	79
   246  00FF1E  00                 	db	0
   247  00FF1F                     __end_of_spi1_configuration:
   248                           	callstack 0
   249  00FF1F                     STR_16:
   250  00FF1F  44                 	db	68	;'D'
   251  00FF20  49                 	db	73	;'I'
   252  00FF21  4D                 	db	77	;'M'
   253  00FF22  20                 	db	32
   254  00FF23  4C                 	db	76	;'L'
   255  00FF24  45                 	db	69	;'E'
   256  00FF25  44                 	db	68	;'D'
   257  00FF26  20                 	db	32
   258  00FF27  20                 	db	32
   259  00FF28  3A                 	db	58	;':'
   260  00FF29  20                 	db	32
   261  00FF2A  25                 	db	37
   262  00FF2B  33                 	db	51	;'3'
   263  00FF2C  64                 	db	100	;'d'
   264  00FF2D  20                 	db	32
   265  00FF2E  25                 	db	37
   266  00FF2F  25                 	db	37
   267  00FF30  00                 	db	0
   268  00FF31                     STR_15:
   269  00FF31  43                 	db	67	;'C'
   270  00FF32  6D                 	db	109	;'m'
   271  00FF33  64                 	db	100	;'d'
   272  00FF34  20                 	db	32
   273  00FF35  52                 	db	82	;'R'
   274  00FF36  65                 	db	101	;'e'
   275  00FF37  63                 	db	99	;'c'
   276  00FF38  65                 	db	101	;'e'
   277  00FF39  69                 	db	105	;'i'
   278  00FF3A  76                 	db	118	;'v'
   279  00FF3B  65                 	db	101	;'e'
   280  00FF3C  64                 	db	100	;'d'
   281  00FF3D  20                 	db	32
   282  00FF3E  3D                 	db	61	;'='
   283  00FF3F  25                 	db	37
   284  00FF40  32                 	db	50	;'2'
   285  00FF41  78                 	db	120	;'x'
   286  00FF42  00                 	db	0
   287  00FF43                     STR_1:
   288  00FF43  20                 	db	32
   289  00FF44  20                 	db	32
   290  00FF45  53                 	db	83	;'S'
   291  00FF46  74                 	db	116	;'t'
   292  00FF47  61                 	db	97	;'a'
   293  00FF48  72                 	db	114	;'r'
   294  00FF49  74                 	db	116	;'t'
   295  00FF4A  20                 	db	32
   296  00FF4B  20                 	db	32
   297  00FF4C  45                 	db	69	;'E'
   298  00FF4D  72                 	db	114	;'r'
   299  00FF4E  72                 	db	114	;'r'
   300  00FF4F  6F                 	db	111	;'o'
   301  00FF50  72                 	db	114	;'r'
   302  00FF51  20                 	db	32
   303  00FF52  20                 	db	32
   304  00FF53  00                 	db	0
   305  00FF54                     STR_5:
   306  00FF54  20                 	db	32
   307  00FF55  42                 	db	66	;'B'
   308  00FF56  69                 	db	105	;'i'
   309  00FF57  74                 	db	116	;'t'
   310  00FF58  20                 	db	32
   311  00FF59  54                 	db	84	;'T'
   312  00FF5A  69                 	db	105	;'i'
   313  00FF5B  6D                 	db	109	;'m'
   314  00FF5C  65                 	db	101	;'e'
   315  00FF5D  20                 	db	32
   316  00FF5E  45                 	db	69	;'E'
   317  00FF5F  72                 	db	114	;'r'
   318  00FF60  72                 	db	114	;'r'
   319  00FF61  6F                 	db	111	;'o'
   320  00FF62  72                 	db	114	;'r'
   321  00FF63  20                 	db	32
   322  00FF64  00                 	db	0
   323  00FF65                     STR_9:
   324  00FF65  20                 	db	32
   325  00FF66  44                 	db	68	;'D'
   326  00FF67  61                 	db	97	;'a'
   327  00FF68  74                 	db	116	;'t'
   328  00FF69  61                 	db	97	;'a'
   329  00FF6A  20                 	db	32
   330  00FF6B  42                 	db	66	;'B'
   331  00FF6C  69                 	db	105	;'i'
   332  00FF6D  74                 	db	116	;'t'
   333  00FF6E  20                 	db	32
   334  00FF6F  45                 	db	69	;'E'
   335  00FF70  72                 	db	114	;'r'
   336  00FF71  72                 	db	114	;'r'
   337  00FF72  6F                 	db	111	;'o'
   338  00FF73  72                 	db	114	;'r'
   339  00FF74  20                 	db	32
   340  00FF75  00                 	db	0
   341  00FF76                     STR_18:
   342  00FF76  4E                 	db	78	;'N'
   343  00FF77  6F                 	db	111	;'o'
   344  00FF78  74                 	db	116	;'t'
   345  00FF79  20                 	db	32
   346  00FF7A  49                 	db	73	;'I'
   347  00FF7B  6D                 	db	109	;'m'
   348  00FF7C  70                 	db	112	;'p'
   349  00FF7D  6C                 	db	108	;'l'
   350  00FF7E  65                 	db	101	;'e'
   351  00FF7F  6D                 	db	109	;'m'
   352  00FF80  65                 	db	101	;'e'
   353  00FF81  6E                 	db	110	;'n'
   354  00FF82  74                 	db	116	;'t'
   355  00FF83  65                 	db	101	;'e'
   356  00FF84  64                 	db	100	;'d'
   357  00FF85  21                 	db	33
   358  00FF86  00                 	db	0
   359  00FF87                     STR_2:
   360  00FF87  2D                 	db	45
   361  00FF88  2D                 	db	45
   362  00FF89  2D                 	db	45
   363  00FF8A  2D                 	db	45
   364  00FF8B  2D                 	db	45
   365  00FF8C  2D                 	db	45
   366  00FF8D  2D                 	db	45
   367  00FF8E  2D                 	db	45
   368  00FF8F  2D                 	db	45
   369  00FF90  2D                 	db	45
   370  00FF91  2D                 	db	45
   371  00FF92  2D                 	db	45
   372  00FF93  2D                 	db	45
   373  00FF94  2D                 	db	45
   374  00FF95  2D                 	db	45
   375  00FF96  2D                 	db	45
   376  00FF97  00                 	db	0
   377  00FF98                     STR_19:
   378  00FF98  20                 	db	32
   379  00FF99  57                 	db	87	;'W'
   380  00FF9A  61                 	db	97	;'a'
   381  00FF9B  69                 	db	105	;'i'
   382  00FF9C  74                 	db	116	;'t'
   383  00FF9D  69                 	db	105	;'i'
   384  00FF9E  6E                 	db	110	;'n'
   385  00FF9F  67                 	db	103	;'g'
   386  00FFA0  20                 	db	32
   387  00FFA1  66                 	db	102	;'f'
   388  00FFA2  6F                 	db	111	;'o'
   389  00FFA3  72                 	db	114	;'r'
   390  00FFA4  20                 	db	32
   391  00FFA5  43                 	db	67	;'C'
   392  00FFA6  4D                 	db	77	;'M'
   393  00FFA7  44                 	db	68	;'D'
   394  00FFA8  00                 	db	0
   395  00FFA9                     STR_17:
   396  00FFA9  52                 	db	82	;'R'
   397  00FFAA  65                 	db	101	;'e'
   398  00FFAB  63                 	db	99	;'c'
   399  00FFAC  65                 	db	101	;'e'
   400  00FFAD  69                 	db	105	;'i'
   401  00FFAE  76                 	db	118	;'v'
   402  00FFAF  65                 	db	101	;'e'
   403  00FFB0  64                 	db	100	;'d'
   404  00FFB1  20                 	db	32
   405  00FFB2  43                 	db	67	;'C'
   406  00FFB3  6F                 	db	111	;'o'
   407  00FFB4  6D                 	db	109	;'m'
   408  00FFB5  6D                 	db	109	;'m'
   409  00FFB6  61                 	db	97	;'a'
   410  00FFB7  6E                 	db	110	;'n'
   411  00FFB8  64                 	db	100	;'d'
   412  00FFB9  00                 	db	0
   413  00FFBA                     STR_13:
   414  00FFBA  52                 	db	82	;'R'
   415  00FFBB  58                 	db	88	;'X'
   416  00FFBC  20                 	db	32
   417  00FFBD  43                 	db	67	;'C'
   418  00FFBE  6F                 	db	111	;'o'
   419  00FFBF  6D                 	db	109	;'m'
   420  00FFC0  6D                 	db	109	;'m'
   421  00FFC1  61                 	db	97	;'a'
   422  00FFC2  6E                 	db	110	;'n'
   423  00FFC3  64                 	db	100	;'d'
   424  00FFC4  20                 	db	32
   425  00FFC5  45                 	db	69	;'E'
   426  00FFC6  72                 	db	114	;'r'
   427  00FFC7  72                 	db	114	;'r'
   428  00FFC8  6F                 	db	111	;'o'
   429  00FFC9  72                 	db	114	;'r'
   430  00FFCA  00                 	db	0
   431  00FFCB                     STR_11:
   432  00FFCB  52                 	db	82	;'R'
   433  00FFCC  58                 	db	88	;'X'
   434  00FFCD  20                 	db	32
   435  00FFCE  41                 	db	65	;'A'
   436  00FFCF  64                 	db	100	;'d'
   437  00FFD0  64                 	db	100	;'d'
   438  00FFD1  72                 	db	114	;'r'
   439  00FFD2  65                 	db	101	;'e'
   440  00FFD3  73                 	db	115	;'s'
   441  00FFD4  73                 	db	115	;'s'
   442  00FFD5  20                 	db	32
   443  00FFD6  45                 	db	69	;'E'
   444  00FFD7  72                 	db	114	;'r'
   445  00FFD8  72                 	db	114	;'r'
   446  00FFD9  6F                 	db	111	;'o'
   447  00FFDA  72                 	db	114	;'r'
   448  00FFDB  00                 	db	0
   449  00FFDC                     STR_3:
   450  00FFDC  53                 	db	83	;'S'
   451  00FFDD  74                 	db	116	;'t'
   452  00FFDE  61                 	db	97	;'a'
   453  00FFDF  72                 	db	114	;'r'
   454  00FFE0  74                 	db	116	;'t'
   455  00FFE1  20                 	db	32
   456  00FFE2  77                 	db	119	;'w'
   457  00FFE3  61                 	db	97	;'a'
   458  00FFE4  69                 	db	105	;'i'
   459  00FFE5  74                 	db	116	;'t'
   460  00FFE6  20                 	db	32
   461  00FFE7  45                 	db	69	;'E'
   462  00FFE8  72                 	db	114	;'r'
   463  00FFE9  72                 	db	114	;'r'
   464  00FFEA  6F                 	db	111	;'o'
   465  00FFEB  72                 	db	114	;'r'
   466  00FFEC  00                 	db	0
   467  00FFED                     STR_7:
   468  00FFED  44                 	db	68	;'D'
   469  00FFEE  61                 	db	97	;'a'
   470  00FFEF  74                 	db	116	;'t'
   471  00FFF0  61                 	db	97	;'a'
   472  00FFF1  42                 	db	66	;'B'
   473  00FFF2  69                 	db	105	;'i'
   474  00FFF3  74                 	db	116	;'t'
   475  00FFF4  20                 	db	32
   476  00FFF5  57                 	db	87	;'W'
   477  00FFF6  61                 	db	97	;'a'
   478  00FFF7  69                 	db	105	;'i'
   479  00FFF8  74                 	db	116	;'t'
   480  00FFF9  20                 	db	32
   481  00FFFA  45                 	db	69	;'E'
   482  00FFFB  72                 	db	114	;'r'
   483  00FFFC  72                 	db	114	;'r'
   484  00FFFD  00                 	db	0
   485  00FFFE  00                 	db	0	; dummy byte at the end
   486  0000                     
   487                           	psect	nvBANK0
   488  0000F4                     __pnvBANK0:
   489                           	callstack 0
   490  0000F4                     _TMR2_InterruptHandler:
   491                           	callstack 0
   492  0000F4                     	ds	3
   493  0000F7                     _CCP1_CallBack:
   494                           	callstack 0
   495  0000F7                     	ds	3
   496  0000FA                     _timer1ReloadVal:
   497                           	callstack 0
   498  0000FA                     	ds	2
   499  0000                     _CLC1CONbits	set	3623
   500  0000                     _CLC1CON	set	3623
   501  0000                     _CLC1GLS3	set	3632
   502  0000                     _CLC1GLS2	set	3631
   503  0000                     _CLC1GLS1	set	3630
   504  0000                     _CLC1GLS0	set	3629
   505  0000                     _CLC1SEL3	set	3628
   506  0000                     _CLC1SEL2	set	3627
   507  0000                     _CLC1SEL1	set	3626
   508  0000                     _CLC1SEL0	set	3625
   509  0000                     _CLC1POL	set	3624
   510  0000                     _CLC3CONbits	set	3643
   511  0000                     _CLC3CON	set	3643
   512  0000                     _CLC3GLS3	set	3652
   513  0000                     _CLC3GLS2	set	3651
   514  0000                     _CLC3GLS1	set	3650
   515  0000                     _CLC3GLS0	set	3649
   516  0000                     _CLC3SEL3	set	3648
   517  0000                     _CLC3SEL2	set	3647
   518  0000                     _CLC3SEL1	set	3646
   519  0000                     _CLC3SEL0	set	3645
   520  0000                     _CLC3POL	set	3644
   521  0000                     _RD1PPS	set	3835
   522  0000                     _RC2PPS	set	3828
   523  0000                     _CCP1PPS	set	3754
   524  0000                     _T2INPPS	set	3750
   525  0000                     _RA3PPS	set	3813
   526  0000                     _CLCIN0PPS	set	3615
   527  0000                     _RC0PPS	set	3826
   528  0000                     _PMD5	set	3809
   529  0000                     _PMD4	set	3808
   530  0000                     _PMD3	set	3807
   531  0000                     _PMD2	set	3806
   532  0000                     _PMD1	set	3805
   533  0000                     _PMD0	set	3804
   534  0000                     _OSCTUNE	set	3800
   535  0000                     _OSCFRQ	set	3801
   536  0000                     _OSCEN	set	3799
   537  0000                     _OSCCON3	set	3797
   538  0000                     _OSCCON1	set	3795
   539  0000                     _PIR6bits	set	3787
   540  0000                     _PIE6bits	set	3779
   541  0000                     _PIR4bits	set	3785
   542  0000                     _PIE4bits	set	3777
   543  0000                     _PIR3bits	set	3784
   544  0000                     _RC4PPS	set	3830
   545  0000                     _RC6PPS	set	3832
   546  0000                     _SSP1DATPPS	set	3763
   547  0000                     _SSP1CLKPPS	set	3762
   548  0000                     _INLVLE	set	3877
   549  0000                     _INLVLD	set	3869
   550  0000                     _INLVLC	set	3864
   551  0000                     _INLVLB	set	3856
   552  0000                     _INLVLA	set	3848
   553  0000                     _SLRCONE	set	3878
   554  0000                     _SLRCOND	set	3870
   555  0000                     _SLRCONC	set	3865
   556  0000                     _SLRCONB	set	3857
   557  0000                     _SLRCONA	set	3849
   558  0000                     _ODCOND	set	3871
   559  0000                     _ODCONC	set	3866
   560  0000                     _ODCONB	set	3858
   561  0000                     _ODCONA	set	3850
   562  0000                     _ODCONE	set	3879
   563  0000                     _WPUC	set	3867
   564  0000                     _WPUA	set	3851
   565  0000                     _WPUB	set	3859
   566  0000                     _WPUE	set	3880
   567  0000                     _WPUD	set	3872
   568  0000                     _ANSELA	set	3852
   569  0000                     _ANSELE	set	3881
   570  0000                     _ANSELB	set	3860
   571  0000                     _ANSELC	set	3868
   572  0000                     _ANSELD	set	3873
   573  0000                     _CCPR1	set	4009
   574  0000                     _PORTAbits	set	3980
   575  0000                     _CCP1CONbits	set	4011
   576  0000                     _PR4	set	4021
   577  0000                     _TMR4	set	4020
   578  0000                     _T4CONbits	set	4022
   579  0000                     _T4RSTbits	set	4025
   580  0000                     _T4HLTbits	set	4023
   581  0000                     _T4CON	set	4022
   582  0000                     _T4TMR	set	4020
   583  0000                     _T4PR	set	4021
   584  0000                     _T4RST	set	4025
   585  0000                     _T4HLT	set	4023
   586  0000                     _T4CLKCON	set	4024
   587  0000                     _PR2	set	4027
   588  0000                     _TMR2	set	4026
   589  0000                     _T2CONbits	set	4028
   590  0000                     _T2RSTbits	set	4031
   591  0000                     _T2HLTbits	set	4029
   592  0000                     _T2CON	set	4028
   593  0000                     _T2TMR	set	4026
   594  0000                     _T2PR	set	4027
   595  0000                     _T2RST	set	4031
   596  0000                     _T2HLT	set	4029
   597  0000                     _T2CLKCON	set	4030
   598  0000                     _CCP2CONbits	set	4007
   599  0000                     _CCPR2L	set	4005
   600  0000                     _CCPR2H	set	4006
   601  0000                     _CCP2CON	set	4007
   602  0000                     _CCPR1L	set	4009
   603  0000                     _CCPR1H	set	4010
   604  0000                     _CCP1CAP	set	4012
   605  0000                     _CCP1CON	set	4011
   606  0000                     _T1GCONbits	set	4047
   607  0000                     _T1CONbits	set	4046
   608  0000                     _T1CON	set	4046
   609  0000                     _TMR1L	set	4044
   610  0000                     _TMR1H	set	4045
   611  0000                     _T1CLK	set	4049
   612  0000                     _T1GATE	set	4048
   613  0000                     _T1GCON	set	4047
   614  0000                     _CCPTMRSbits	set	4013
   615  0000                     _PWM3DCL	set	4002
   616  0000                     _PWM3DCH	set	4003
   617  0000                     _PWM3CON	set	4004
   618  0000                     _TRISD	set	3978
   619  0000                     _TRISC	set	3977
   620  0000                     _TRISB	set	3976
   621  0000                     _TRISA	set	3975
   622  0000                     _TRISE	set	3979
   623  0000                     _LATC	set	3972
   624  0000                     _LATB	set	3971
   625  0000                     _LATA	set	3970
   626  0000                     _LATD	set	3973
   627  0000                     _LATE	set	3974
   628  0000                     _INTCONbits	set	4082
   629  0000                     _SSP1BUF	set	3985
   630  0000                     _SSP1CON2	set	3990
   631  0000                     _SSP1CON1bits	set	3989
   632  0000                     _TRISCbits	set	3977
   633  0000                     _SSP1ADD	set	3986
   634  0000                     _SSP1CON1	set	3989
   635  0000                     _SSP1STAT	set	3988
   636  0000                     _LATDbits	set	3973
   637  0000                     _LATAbits	set	3970
   638                           
   639                           ; #config settings
   640                           
   641                           	psect	cinit
   642  01194C                     __pcinit:
   643                           	callstack 0
   644  01194C                     start_initialization:
   645                           	callstack 0
   646  01194C                     __initialization:
   647                           	callstack 0
   648                           
   649                           ; Initialize objects allocated to BANK0 (32 bytes)
   650                           ; load TBLPTR registers with __pidataBANK0
   651  01194C  0EB2               	movlw	low __pidataBANK0
   652  01194E  6EF6               	movwf	tblptrl,c
   653  011950  0E1F               	movlw	high __pidataBANK0
   654  011952  6EF7               	movwf	tblptrh,c
   655  011954  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   656  011956  6EF8               	movwf	tblptru,c
   657  011958  EE00  F0D4         	lfsr	0,__pdataBANK0
   658  01195C  EE10 F020          	lfsr	1,32
   659  011960                     copy_data0:
   660  011960  0009               	tblrd		*+
   661  011962  CFF5 FFEE          	movff	tablat,postinc0
   662  011966  50E5               	movf	postdec1,w,c
   663  011968  50E1               	movf	fsr1l,w,c
   664  01196A  E1FA               	bnz	copy_data0
   665                           
   666                           ; Clear objects allocated to BANK1 (64 bytes)
   667  01196C  EE01  F000         	lfsr	0,__pbssBANK1
   668  011970  0E40               	movlw	64
   669  011972                     clear_0:
   670  011972  6AEE               	clrf	postinc0,c
   671  011974  06E8               	decf	wreg,f,c
   672  011976  E1FD               	bnz	clear_0
   673                           
   674                           ; Clear objects allocated to BANK0 (45 bytes)
   675  011978  EE00  F0A7         	lfsr	0,__pbssBANK0
   676  01197C  0E2D               	movlw	45
   677  01197E                     clear_1:
   678  01197E  6AEE               	clrf	postinc0,c
   679  011980  06E8               	decf	wreg,f,c
   680  011982  E1FD               	bnz	clear_1
   681                           
   682                           ; Clear objects allocated to COMRAM (5 bytes)
   683  011984  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   684  011986  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   685  011988  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   686  01198A  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   687  01198C  6A53               	clrf	__pbssCOMRAM& (0+255),c
   688  01198E                     end_of_initialization:
   689                           	callstack 0
   690  01198E                     __end_of__initialization:
   691                           	callstack 0
   692  01198E  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   693  011990  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   694  011992  0100               	movlb	0
   695  011994  EF51  F08D         	goto	_main	;jump to C main() function
   696                           
   697                           	psect	bssCOMRAM
   698  000053                     __pbssCOMRAM:
   699                           	callstack 0
   700  000053                     _prec:
   701                           	callstack 0
   702  000053                     	ds	2
   703  000055                     _flags:
   704                           	callstack 0
   705  000055                     	ds	2
   706  000057                     _fallingEdgeDetected:
   707                           	callstack 0
   708  000057                     	ds	1
   709                           
   710                           	psect	bssBANK0
   711  0000A7                     __pbssBANK0:
   712                           	callstack 0
   713  0000A7                     _IR_data:
   714                           	callstack 0
   715  0000A7                     	ds	4
   716  0000AB                     _nout:
   717                           	callstack 0
   718  0000AB                     	ds	2
   719  0000AD                     _width:
   720                           	callstack 0
   721  0000AD                     	ds	2
   722  0000AF                     _ccpCapturedVal:
   723                           	callstack 0
   724  0000AF                     	ds	2
   725  0000B1                     ApplicationTask@appState:
   726                           	callstack 0
   727  0000B1                     	ds	1
   728  0000B2                     _index:
   729                           	callstack 0
   730  0000B2                     	ds	1
   731  0000B3                     _ccpCapturedFlag:
   732                           	callstack 0
   733  0000B3                     	ds	1
   734  0000B4                     _dbuf:
   735                           	callstack 0
   736  0000B4                     	ds	32
   737                           
   738                           	psect	dataBANK0
   739  0000D4                     __pdataBANK0:
   740                           	callstack 0
   741  0000D4                     lcd_example@F52:
   742                           	callstack 0
   743  0000D4                     	ds	16
   744  0000E4                     lcd_example@F50:
   745                           	callstack 0
   746  0000E4                     	ds	16
   747                           
   748                           	psect	bssBANK1
   749  000100                     __pbssBANK1:
   750                           	callstack 0
   751  000100                     _ccpCapturedValueBuf:
   752                           	callstack 0
   753  000100                     	ds	64
   754                           
   755                           	psect	cstackBANK0
   756  000060                     __pcstackBANK0:
   757                           	callstack 0
   758  000060                     vfpfcnvrt@ll:
   759                           	callstack 0
   760                           
   761                           ; 8 bytes @ 0x0
   762  000060                     	ds	8
   763  000068                     vfpfcnvrt@llu:
   764                           	callstack 0
   765                           
   766                           ; 8 bytes @ 0x8
   767  000068                     	ds	8
   768  000070                     _vfpfcnvrt$2662:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x10
   772  000070                     	ds	2
   773  000072                     vfpfcnvrt@c:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x12
   777  000072                     	ds	1
   778  000073                     ?_vfprintf:
   779                           	callstack 0
   780  000073                     vfprintf@fp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x13
   784  000073                     	ds	2
   785  000075                     vfprintf@fmt:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x15
   789  000075                     	ds	2
   790  000077                     vfprintf@ap:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x17
   794  000077                     	ds	2
   795  000079                     vfprintf@cfmt:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x19
   799  000079                     	ds	2
   800  00007B                     ?_sprintf:
   801                           	callstack 0
   802  00007B                     sprintf@s:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x1B
   806  00007B                     	ds	2
   807  00007D                     sprintf@fmt:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x1D
   811  00007D                     	ds	6
   812  000083                     sprintf@ap:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x23
   816  000083                     	ds	2
   817  000085                     sprintf@f:
   818                           	callstack 0
   819                           
   820                           ; 6 bytes @ 0x25
   821  000085                     	ds	6
   822  00008B                     ??_ControlAction:
   823                           
   824                           ; 1 bytes @ 0x2B
   825  00008B                     	ds	4
   826  00008F                     ControlAction@displayString1:
   827                           	callstack 0
   828                           
   829                           ; 17 bytes @ 0x2F
   830  00008F                     	ds	17
   831  0000A0                     ControlAction@dutyCycleValIndex:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x40
   835  0000A0                     	ds	1
   836  0000A1                     ControlAction@duty:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x41
   840  0000A1                     	ds	1
   841  0000A2                     ControlAction@cmd:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x42
   845  0000A2                     	ds	1
   846  0000A3                     ??_ApplicationTask:
   847                           
   848                           ; 1 bytes @ 0x43
   849  0000A3                     	ds	2
   850  0000A5                     ApplicationTask@rxCommand:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x45
   854  0000A5                     	ds	1
   855  0000A6                     ApplicationTask@cmd_status:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x46
   859  0000A6                     	ds	1
   860                           
   861                           	psect	cstackCOMRAM
   862  000001                     __pcstackCOMRAM:
   863                           	callstack 0
   864  000001                     CCP1_DefaultCallBack@capturedValue:
   865                           	callstack 0
   866  000001                     i2TMR1_WriteTimer@timerVal:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x0
   870  000001                     	ds	2
   871  000003                     CCP1_CaptureISR@module:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x2
   875  000003                     	ds	2
   876  000005                     ??_INTERRUPT_InterruptManager:
   877                           
   878                           ; 1 bytes @ 0x4
   879  000005                     	ds	2
   880  000007                     ??_SPI1_Open:
   881  000007                     ??_TMR1_Initialize:
   882  000007                     ??_Reverse:
   883  000007                     ?_strlen:
   884                           	callstack 0
   885  000007                     ?_isupper:
   886                           	callstack 0
   887  000007                     ?_isalpha:
   888                           	callstack 0
   889  000007                     ?_isdigit:
   890                           	callstack 0
   891  000007                     ?_isspace:
   892                           	callstack 0
   893  000007                     ?_islower:
   894                           	callstack 0
   895  000007                     ?___wmul:
   896                           	callstack 0
   897  000007                     ?___aodiv:
   898                           	callstack 0
   899  000007                     ?___aomod:
   900                           	callstack 0
   901  000007                     SPI1_ExchangeByte@data:
   902                           	callstack 0
   903  000007                     PWM3_LoadDutyValue@dutyValue:
   904                           	callstack 0
   905  000007                     TMR1_WriteTimer@timerVal:
   906                           	callstack 0
   907  000007                     DELAY_milliseconds@milliseconds:
   908                           	callstack 0
   909  000007                     ___wmul@multiplier:
   910                           	callstack 0
   911  000007                     isalpha@c:
   912                           	callstack 0
   913  000007                     isdigit@c:
   914                           	callstack 0
   915  000007                     isspace@c:
   916                           	callstack 0
   917  000007                     isupper@c:
   918                           	callstack 0
   919  000007                     fputc@c:
   920                           	callstack 0
   921  000007                     strlen@s:
   922                           	callstack 0
   923  000007                     islower@c:
   924                           	callstack 0
   925  000007                     CCP1_SetCallBack@customCallBack:
   926                           	callstack 0
   927  000007                     TMR2_SetInterruptHandler@InterruptHandler:
   928                           	callstack 0
   929  000007                     ___aodiv@dividend:
   930                           	callstack 0
   931  000007                     ___aomod@dividend:
   932                           	callstack 0
   933                           
   934                           ; 8 bytes @ 0x6
   935  000007                     	ds	1
   936  000008                     SPI1_Open@spi1UniqueConfiguration:
   937                           	callstack 0
   938  000008                     SPI1_WriteBlock@block:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x7
   942  000008                     	ds	1
   943  000009                     ??_DELAY_milliseconds:
   944  000009                     ??_isupper:
   945  000009                     ??_isalpha:
   946  000009                     ??_isdigit:
   947  000009                     ??_isspace:
   948  000009                     ??_islower:
   949  000009                     ??_spi_master_open:
   950  000009                     ??_PWM3_LoadDutyValue:
   951  000009                     Reverse@byteVar:
   952                           	callstack 0
   953  000009                     ___wmul@multiplicand:
   954                           	callstack 0
   955  000009                     fputc@fp:
   956                           	callstack 0
   957  000009                     strlen@a:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x8
   961  000009                     	ds	1
   962  00000A                     SPI1_WriteBlock@blockSize:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x9
   966  00000A                     	ds	1
   967  00000B                     ??_fputc:
   968  00000B                     spi_master_open@config:
   969                           	callstack 0
   970  00000B                     ___wmul@product:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0xA
   974  00000B                     	ds	1
   975  00000C                     DecodeCmd@rxAddr:
   976                           	callstack 0
   977  00000C                     SPI1_WriteBlock@data:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0xB
   981  00000C                     	ds	1
   982  00000D                     ?_toupper:
   983                           	callstack 0
   984  00000D                     DecodeCmd@retVal:
   985                           	callstack 0
   986  00000D                     _isspace$2710:
   987                           	callstack 0
   988  00000D                     toupper@c:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0xC
   992  00000D                     	ds	1
   993  00000E                     ?_atoi:
   994                           	callstack 0
   995  00000E                     digipot_setWiper@val:
   996                           	callstack 0
   997  00000E                     expander_sendByte@byte:
   998                           	callstack 0
   999  00000E                     DecodeCmd@count:
  1000                           	callstack 0
  1001  00000E                     atoi@s:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0xD
  1005  00000E                     	ds	1
  1006  00000F                     ??_toupper:
  1007  00000F                     expander_sendByte@addr:
  1008                           	callstack 0
  1009  00000F                     digipot_setWiper@cmd:
  1010                           	callstack 0
  1011  00000F                     ___aodiv@divisor:
  1012                           	callstack 0
  1013  00000F                     ___aomod@divisor:
  1014                           	callstack 0
  1015                           
  1016                           ; 8 bytes @ 0xE
  1017  00000F                     	ds	1
  1018  000010                     ??_atoi:
  1019  000010                     fputs@s:
  1020                           	callstack 0
  1021  000010                     expander_sendByte@cmd:
  1022                           	callstack 0
  1023                           
  1024                           ; 3 bytes @ 0xF
  1025  000010                     	ds	1
  1026  000011                     lcd_setContrast@contrast:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x10
  1030  000011                     	ds	1
  1031  000012                     fputs@fp:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x11
  1035  000012                     	ds	1
  1036  000013                     expander_setOutput@output:
  1037                           	callstack 0
  1038  000013                     _toupper$2764:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x12
  1042  000013                     	ds	1
  1043  000014                     lcd_sendNibble@RSbit:
  1044                           	callstack 0
  1045  000014                     lcd_sendByte@RSbit:
  1046                           	callstack 0
  1047  000014                     fputs@c:
  1048                           	callstack 0
  1049  000014                     atoi@neg:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x13
  1053  000014                     	ds	1
  1054  000015                     ??_lcd_sendNibble:
  1055  000015                     ??_lcd_sendByte:
  1056  000015                     fputs@i:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x14
  1060  000015                     	ds	1
  1061  000016                     lcd_sendNibble@nibble:
  1062                           	callstack 0
  1063  000016                     lcd_sendByte@nibbleHigh:
  1064                           	callstack 0
  1065  000016                     _atoi$2683:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x15
  1069  000016                     	ds	1
  1070  000017                     ?_pad:
  1071                           	callstack 0
  1072  000017                     lcd_sendNibble@packet:
  1073                           	callstack 0
  1074  000017                     lcd_sendByte@nibbleLow:
  1075                           	callstack 0
  1076  000017                     ___aodiv@counter:
  1077                           	callstack 0
  1078  000017                     ___aomod@counter:
  1079                           	callstack 0
  1080  000017                     pad@fp:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x16
  1084  000017                     	ds	1
  1085  000018                     lcd_sendByte@byte:
  1086                           	callstack 0
  1087  000018                     ___aodiv@sign:
  1088                           	callstack 0
  1089  000018                     ___aomod@sign:
  1090                           	callstack 0
  1091  000018                     _atoi$2685:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x17
  1095  000018                     	ds	1
  1096  000019                     ?_abs:
  1097                           	callstack 0
  1098  000019                     lcd_sendByte@packetHigh:
  1099                           	callstack 0
  1100  000019                     pad@buf:
  1101                           	callstack 0
  1102  000019                     abs@a:
  1103                           	callstack 0
  1104  000019                     ___aodiv@quotient:
  1105                           	callstack 0
  1106                           
  1107                           ; 8 bytes @ 0x18
  1108  000019                     	ds	1
  1109  00001A                     lcd_sendByte@packetLow:
  1110                           	callstack 0
  1111  00001A                     _atoi$2684:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x19
  1115  00001A                     	ds	1
  1116  00001B                     ??_abs:
  1117  00001B                     lcd_setAddr@character:
  1118                           	callstack 0
  1119  00001B                     lcd_writeChar@character:
  1120                           	callstack 0
  1121  00001B                     pad@p:
  1122                           	callstack 0
  1123  00001B                     atoi@n:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x1A
  1127  00001B                     	ds	1
  1128  00001C                     lcd_setAddr@row:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x1B
  1132  00001C                     	ds	1
  1133  00001D                     ??_pad:
  1134  00001D                     lcd_writeString@string:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x1C
  1138  00001D                     	ds	1
  1139  00001E                     pad@i:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x1D
  1143  00001E                     	ds	1
  1144  00001F                     lcd_writeString@row:
  1145                           	callstack 0
  1146                           
  1147                           ; 1 bytes @ 0x1E
  1148  00001F                     	ds	1
  1149  000020                     ??_lcd_writeString:
  1150  000020                     pad@w:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x1F
  1154  000020                     	ds	2
  1155  000022                     ?_dtoa:
  1156                           	callstack 0
  1157  000022                     ?_xtoa:
  1158                           	callstack 0
  1159  000022                     lcd_writeString@i:
  1160                           	callstack 0
  1161  000022                     dtoa@fp:
  1162                           	callstack 0
  1163  000022                     xtoa@fp:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x21
  1167  000022                     	ds	1
  1168  000023                     
  1169                           ; 1 bytes @ 0x22
  1170  000023                     	ds	1
  1171  000024                     dtoa@d:
  1172                           	callstack 0
  1173  000024                     xtoa@d:
  1174                           	callstack 0
  1175                           
  1176                           ; 8 bytes @ 0x23
  1177  000024                     	ds	8
  1178  00002C                     ??_dtoa:
  1179  00002C                     xtoa@x:
  1180                           	callstack 0
  1181                           
  1182                           ; 1 bytes @ 0x2B
  1183  00002C                     	ds	1
  1184  00002D                     ??_xtoa:
  1185                           
  1186                           ; 1 bytes @ 0x2C
  1187  00002D                     	ds	7
  1188  000034                     _dtoa$2636:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x33
  1192  000034                     	ds	1
  1193  000035                     _xtoa$2647:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x34
  1197  000035                     	ds	1
  1198  000036                     dtoa@p:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x35
  1202  000036                     	ds	1
  1203  000037                     _xtoa$2648:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x36
  1207  000037                     	ds	1
  1208  000038                     dtoa@w:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x37
  1212  000038                     	ds	1
  1213  000039                     xtoa@p:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x38
  1217  000039                     	ds	1
  1218  00003A                     dtoa@s:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x39
  1222  00003A                     	ds	1
  1223  00003B                     xtoa@w:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x3A
  1227  00003B                     	ds	1
  1228  00003C                     dtoa@n:
  1229                           	callstack 0
  1230                           
  1231                           ; 8 bytes @ 0x3B
  1232  00003C                     	ds	1
  1233  00003D                     xtoa@n:
  1234                           	callstack 0
  1235                           
  1236                           ; 8 bytes @ 0x3C
  1237  00003D                     	ds	7
  1238  000044                     dtoa@i:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x43
  1242  000044                     	ds	1
  1243  000045                     xtoa@i:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x44
  1247  000045                     	ds	2
  1248  000047                     xtoa@c:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x46
  1252  000047                     	ds	2
  1253  000049                     ?_vfpfcnvrt:
  1254                           	callstack 0
  1255  000049                     vfpfcnvrt@fp:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x48
  1259  000049                     	ds	2
  1260  00004B                     vfpfcnvrt@fmt:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x4A
  1264  00004B                     	ds	2
  1265  00004D                     vfpfcnvrt@ap:
  1266                           	callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x4C
  1269  00004D                     	ds	2
  1270  00004F                     ??_vfpfcnvrt:
  1271                           
  1272                           ; 1 bytes @ 0x4E
  1273  00004F                     	ds	4
  1274  000053                     
  1275                           ; 1 bytes @ 0x52
  1276 ;;
  1277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1278 ;;
  1279 ;; *************** function _main *****************
  1280 ;; Defined at:
  1281 ;;		line 52 in file "main.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1299 ;;Total ram usage:        0 bytes
  1300 ;; Hardware stack levels required when called:   14
  1301 ;; This function calls:
  1302 ;;		_ApplicationTask
  1303 ;;		_CCP1_SetCallBack
  1304 ;;		_Init_display
  1305 ;;		_SYSTEM_Initialize
  1306 ;;		_TMR2_SetInterruptHandler
  1307 ;; This function is called by:
  1308 ;;		Startup code after reset
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text0
  1313  011AA2                     __ptext0:
  1314                           	callstack 0
  1315  011AA2                     _main:
  1316                           	callstack 17
  1317  011AA2                     
  1318                           ;main.c: 55:     SYSTEM_Initialize();
  1319  011AA2  EC8D  F08D         	call	_SYSTEM_Initialize	;wreg free
  1320  011AA6                     
  1321                           ;main.c: 62:     (INTCONbits.GIE = 1);
  1322  011AA6  8EF2               	bsf	242,7,c	;volatile
  1323  011AA8                     
  1324                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  1325  011AA8  8CF2               	bsf	242,6,c	;volatile
  1326  011AAA                     
  1327                           ;main.c: 74:     Init_display();
  1328  011AAA  ECC7  F08D         	call	_Init_display	;wreg free
  1329  011AAE                     
  1330                           ;main.c: 77:     PIE6bits.CCP1IE = 0;
  1331  011AAE  010E               	movlb	14	; () banked
  1332  011AB0  91C3               	bcf	195,0,b	;volatile
  1333  011AB2                     
  1334                           ; BSR set to: 14
  1335                           ;main.c: 80:     TMR2_SetInterruptHandler(TMR2_UserInterruptHandler);
  1336  011AB2  0EAA               	movlw	low _TMR2_UserInterruptHandler
  1337  011AB4  6E07               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  1338  011AB6  0E20               	movlw	high _TMR2_UserInterruptHandler
  1339  011AB8  6E08               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  1340  011ABA  0E01               	movlw	low (_TMR2_UserInterruptHandler shr (0+16))
  1341  011ABC  6E09               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)^0,c
  1342  011ABE  EC8D  F090         	call	_TMR2_SetInterruptHandler	;wreg free
  1343  011AC2                     
  1344                           ;main.c: 81:     CCP1_SetCallBack(CCP1_UserInterruptHandler);
  1345  011AC2  0E46               	movlw	low _CCP1_UserInterruptHandler
  1346  011AC4  6E07               	movwf	CCP1_SetCallBack@customCallBack^0,c
  1347  011AC6  0E20               	movlw	high _CCP1_UserInterruptHandler
  1348  011AC8  6E08               	movwf	(CCP1_SetCallBack@customCallBack+1)^0,c
  1349  011ACA  0E01               	movlw	low (_CCP1_UserInterruptHandler shr (0+16))
  1350  011ACC  6E09               	movwf	(CCP1_SetCallBack@customCallBack+2)^0,c
  1351  011ACE  EC94  F090         	call	_CCP1_SetCallBack	;wreg free
  1352  011AD2                     l4323:
  1353                           
  1354                           ;main.c: 84:     {;main.c: 86:         ApplicationTask();
  1355  011AD2  ECB8  F084         	call	_ApplicationTask	;wreg free
  1356  011AD6  EF69  F08D         	goto	l4323
  1357  011ADA  EF3B  F000         	goto	start
  1358  011ADE                     __end_of_main:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _SYSTEM_Initialize *****************
  1362 ;; Defined at:
  1363 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:   12
  1384 ;; This function calls:
  1385 ;;		_CCP1_Initialize
  1386 ;;		_CLC1_Initialize
  1387 ;;		_CLC3_Initialize
  1388 ;;		_INTERRUPT_Initialize
  1389 ;;		_OSCILLATOR_Initialize
  1390 ;;		_PIN_MANAGER_Initialize
  1391 ;;		_PMD_Initialize
  1392 ;;		_PWM2_Initialize
  1393 ;;		_PWM3_Initialize
  1394 ;;		_SPI1_Initialize
  1395 ;;		_TMR1_Initialize
  1396 ;;		_TMR2_Initialize
  1397 ;;		_TMR4_Initialize
  1398 ;;		_lcd_setup
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text1
  1405  011B1A                     __ptext1:
  1406                           	callstack 0
  1407  011B1A                     _SYSTEM_Initialize:
  1408                           	callstack 18
  1409  011B1A                     
  1410                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1411  011B1A  ECBC  F090         	call	_INTERRUPT_Initialize	;wreg free
  1412  011B1E                     
  1413                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1414  011B1E  EC07  F090         	call	_PMD_Initialize	;wreg free
  1415  011B22                     
  1416                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
  1417  011B22  ECC7  F08F         	call	_SPI1_Initialize	;wreg free
  1418  011B26                     
  1419                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  1420  011B26  EC94  F08A         	call	_PIN_MANAGER_Initialize	;wreg free
  1421  011B2A                     
  1422                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  1423  011B2A  EC3D  F090         	call	_OSCILLATOR_Initialize	;wreg free
  1424  011B2E                     
  1425                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
  1426  011B2E  EC6C  F090         	call	_PWM2_Initialize	;wreg free
  1427  011B32                     
  1428                           ;mcc_generated_files/mcc.c: 58:     CCP1_Initialize();
  1429  011B32  EC05  F08F         	call	_CCP1_Initialize	;wreg free
  1430  011B36                     
  1431                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  1432  011B36  ECE9  F08F         	call	_TMR4_Initialize	;wreg free
  1433  011B3A                     
  1434                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  1435  011B3A  ECED  F08E         	call	_TMR2_Initialize	;wreg free
  1436  011B3E                     
  1437                           ;mcc_generated_files/mcc.c: 61:     CLC1_Initialize();
  1438  011B3E  EC62  F08F         	call	_CLC1_Initialize	;wreg free
  1439  011B42                     
  1440                           ;mcc_generated_files/mcc.c: 62:     CLC3_Initialize();
  1441  011B42  EC4C  F08F         	call	_CLC3_Initialize	;wreg free
  1442  011B46                     
  1443                           ;mcc_generated_files/mcc.c: 63:     PWM3_Initialize();
  1444  011B46  EC61  F090         	call	_PWM3_Initialize	;wreg free
  1445  011B4A                     
  1446                           ;mcc_generated_files/mcc.c: 64:     TMR1_Initialize();
  1447  011B4A  EC37  F08E         	call	_TMR1_Initialize	;wreg free
  1448  011B4E                     
  1449                           ;mcc_generated_files/mcc.c: 65:     lcd_setup();
  1450  011B4E  ECE9  F08A         	call	_lcd_setup	;wreg free
  1451  011B52  0012               	return		;funcret
  1452  011B54                     __end_of_SYSTEM_Initialize:
  1453                           	callstack 0
  1454                           
  1455 ;; *************** function _lcd_setup *****************
  1456 ;; Defined at:
  1457 ;;		line 87 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:   11
  1478 ;; This function calls:
  1479 ;;		_DELAY_milliseconds
  1480 ;;		_expander_setOutput
  1481 ;;		_expander_setup
  1482 ;;		_lcd_clearDisplay
  1483 ;;		_lcd_returnHome
  1484 ;;		_lcd_sendByte
  1485 ;;		_lcd_sendNibble
  1486 ;; This function is called by:
  1487 ;;		_SYSTEM_Initialize
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text2
  1492  0115D2                     __ptext2:
  1493                           	callstack 0
  1494  0115D2                     _lcd_setup:
  1495                           	callstack 18
  1496  0115D2                     
  1497                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 88:     LATDbits.LATD7 = 1;
  1498  0115D2  8E85               	bsf	133,7,c	;volatile
  1499                           
  1500                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 89:     LATAbits.LATA2 = 1;
  1501  0115D4  8482               	bsf	130,2,c	;volatile
  1502                           
  1503                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 90:     LATDbits.LATD5 = 1;
  1504  0115D6  8A85               	bsf	133,5,c	;volatile
  1505  0115D8                     
  1506                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 91:     expander_setup();
  1507  0115D8  ECA9  F090         	call	_expander_setup	;wreg free
  1508                           
  1509                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 92:     expander_setOutput(0);
  1510  0115DC  0E00               	movlw	0
  1511  0115DE  ECA2  F090         	call	_expander_setOutput
  1512  0115E2                     
  1513                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 93:     DELAY_milliseconds(40);
  1514  0115E2  0E00               	movlw	0
  1515  0115E4  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1516  0115E6  0E28               	movlw	40
  1517  0115E8  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  1518  0115EA  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  1519  0115EE                     
  1520                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 94:     lcd_sendNibble(0b11, 0);
  1521  0115EE  0E00               	movlw	0
  1522  0115F0  6E14               	movwf	lcd_sendNibble@RSbit^0,c
  1523  0115F2  0E03               	movlw	3
  1524  0115F4  ECCC  F08C         	call	_lcd_sendNibble
  1525                           
  1526                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 95:     DELAY_milliseconds(10);
  1527  0115F8  0E00               	movlw	0
  1528  0115FA  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1529  0115FC  0E0A               	movlw	10
  1530  0115FE  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  1531  011600  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  1532  011604                     
  1533                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 97:     lcd_sendNibble(0b11, 0);
  1534  011604  0E00               	movlw	0
  1535  011606  6E14               	movwf	lcd_sendNibble@RSbit^0,c
  1536  011608  0E03               	movlw	3
  1537  01160A  ECCC  F08C         	call	_lcd_sendNibble
  1538  01160E                     
  1539                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 98:     DELAY_milliseconds(10);
  1540  01160E  0E00               	movlw	0
  1541  011610  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1542  011612  0E0A               	movlw	10
  1543  011614  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  1544  011616  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  1545                           
  1546                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 99:     lcd_sendNibble(0b11, 0);
  1547  01161A  0E00               	movlw	0
  1548  01161C  6E14               	movwf	lcd_sendNibble@RSbit^0,c
  1549  01161E  0E03               	movlw	3
  1550  011620  ECCC  F08C         	call	_lcd_sendNibble
  1551  011624                     
  1552                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 100:     DELAY_milliseconds(10);
  1553  011624  0E00               	movlw	0
  1554  011626  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1555  011628  0E0A               	movlw	10
  1556  01162A  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  1557  01162C  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  1558  011630                     
  1559                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 101:     lcd_sendNibble(0x2,0);
  1560  011630  0E00               	movlw	0
  1561  011632  6E14               	movwf	lcd_sendNibble@RSbit^0,c
  1562  011634  0E02               	movlw	2
  1563  011636  ECCC  F08C         	call	_lcd_sendNibble
  1564  01163A                     
  1565                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 102:     lcd_sendByte(0x2C, 0);
  1566  01163A  0E00               	movlw	0
  1567  01163C  6E14               	movwf	lcd_sendByte@RSbit^0,c
  1568  01163E  0E2C               	movlw	44
  1569  011640  EC87  F08B         	call	_lcd_sendByte
  1570  011644                     
  1571                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 103:     lcd_sendByte(0b1100, 0);
  1572  011644  0E00               	movlw	0
  1573  011646  6E14               	movwf	lcd_sendByte@RSbit^0,c
  1574  011648  0E0C               	movlw	12
  1575  01164A  EC87  F08B         	call	_lcd_sendByte
  1576  01164E                     
  1577                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 104:     lcd_sendByte(0x06, 0);
  1578  01164E  0E00               	movlw	0
  1579  011650  6E14               	movwf	lcd_sendByte@RSbit^0,c
  1580  011652  0E06               	movlw	6
  1581  011654  EC87  F08B         	call	_lcd_sendByte
  1582  011658                     
  1583                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 105:     lcd_sendByte(0x0C, 0);
  1584  011658  0E00               	movlw	0
  1585  01165A  6E14               	movwf	lcd_sendByte@RSbit^0,c
  1586  01165C  0E0C               	movlw	12
  1587  01165E  EC87  F08B         	call	_lcd_sendByte
  1588                           
  1589                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 106:     DELAY_milliseconds(2);
  1590  011662  0E00               	movlw	0
  1591  011664  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1592  011666  0E02               	movlw	2
  1593  011668  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  1594  01166A  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  1595  01166E                     
  1596                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 107:     lcd_returnHome();
  1597  01166E  EC49  F090         	call	_lcd_returnHome	;wreg free
  1598  011672                     
  1599                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 108:     lcd_clearDisplay();
  1600  011672  EC31  F090         	call	_lcd_clearDisplay	;wreg free
  1601  011676  0012               	return		;funcret
  1602  011678                     __end_of_lcd_setup:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _lcd_sendNibble *****************
  1606 ;; Defined at:
  1607 ;;		line 29 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  nibble          1    wreg     unsigned char 
  1610 ;;  RSbit           1   19[COMRAM] _Bool 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  nibble          1   21[COMRAM] unsigned char 
  1613 ;;  packet          1   22[COMRAM] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1623 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;Total ram usage:        4 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    9
  1630 ;; This function calls:
  1631 ;;		_DELAY_milliseconds
  1632 ;;		_expander_setOutput
  1633 ;; This function is called by:
  1634 ;;		_lcd_setup
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text3
  1639  011998                     __ptext3:
  1640                           	callstack 0
  1641  011998                     _lcd_sendNibble:
  1642                           	callstack 19
  1643                           
  1644                           ;incstack = 0
  1645                           ;lcd_sendNibble@nibble stored from wreg
  1646  011998  6E16               	movwf	lcd_sendNibble@nibble^0,c
  1647  01199A                     
  1648                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 30:     uint8_t packet = (nibble << 4) | (RSb
      +                          it << 2);
  1649  01199A  C014  F015         	movff	lcd_sendNibble@RSbit,??_lcd_sendNibble
  1650  01199E  90D8               	bcf	status,0,c
  1651  0119A0  3615               	rlcf	??_lcd_sendNibble^0,f,c
  1652  0119A2  90D8               	bcf	status,0,c
  1653  0119A4  3615               	rlcf	??_lcd_sendNibble^0,f,c
  1654  0119A6  3816               	swapf	lcd_sendNibble@nibble^0,w,c
  1655  0119A8  0BF0               	andlw	240
  1656  0119AA  1015               	iorwf	??_lcd_sendNibble^0,w,c
  1657  0119AC  6E17               	movwf	lcd_sendNibble@packet^0,c
  1658  0119AE                     
  1659                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 31:     expander_setOutput(packet);
  1660  0119AE  5017               	movf	lcd_sendNibble@packet^0,w,c
  1661  0119B0  ECA2  F090         	call	_expander_setOutput
  1662  0119B4                     
  1663                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 32:     expander_setOutput(packet | (1<<3));
  1664  0119B4  5017               	movf	lcd_sendNibble@packet^0,w,c
  1665  0119B6  0908               	iorlw	8
  1666  0119B8  ECA2  F090         	call	_expander_setOutput
  1667  0119BC                     
  1668                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 33:     DELAY_milliseconds(1);
  1669  0119BC  0E00               	movlw	0
  1670  0119BE  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1671  0119C0  0E01               	movlw	1
  1672  0119C2  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  1673  0119C4  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  1674  0119C8                     
  1675                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 34:     expander_setOutput(packet);
  1676  0119C8  5017               	movf	lcd_sendNibble@packet^0,w,c
  1677  0119CA  ECA2  F090         	call	_expander_setOutput
  1678  0119CE                     
  1679                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 35:     DELAY_milliseconds(40);
  1680  0119CE  0E00               	movlw	0
  1681  0119D0  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1682  0119D2  0E28               	movlw	40
  1683  0119D4  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  1684  0119D6  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  1685  0119DA  0012               	return		;funcret
  1686  0119DC                     __end_of_lcd_sendNibble:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _lcd_clearDisplay *****************
  1690 ;; Defined at:
  1691 ;;		line 59 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;Total ram usage:        0 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:   10
  1712 ;; This function calls:
  1713 ;;		_DELAY_milliseconds
  1714 ;;		_lcd_sendByte
  1715 ;; This function is called by:
  1716 ;;		_lcd_setup
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text4
  1721  012062                     __ptext4:
  1722                           	callstack 0
  1723  012062                     _lcd_clearDisplay:
  1724                           	callstack 18
  1725  012062                     
  1726                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 60:     lcd_sendByte(0b1, 0);
  1727  012062  0E00               	movlw	0
  1728  012064  6E14               	movwf	lcd_sendByte@RSbit^0,c
  1729  012066  0E01               	movlw	1
  1730  012068  EC87  F08B         	call	_lcd_sendByte
  1731  01206C                     
  1732                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 61:     DELAY_milliseconds(2);
  1733  01206C  0E00               	movlw	0
  1734  01206E  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1735  012070  0E02               	movlw	2
  1736  012072  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  1737  012074  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  1738  012078  0012               	return		;funcret
  1739  01207A                     __end_of_lcd_clearDisplay:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _expander_setup *****************
  1743 ;; Defined at:
  1744 ;;		line 44 in file "mcc_generated_files/LCDMiniDrivers/expander.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1762 ;;Total ram usage:        0 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    8
  1765 ;; This function calls:
  1766 ;;		_expander_sendByte
  1767 ;; This function is called by:
  1768 ;;		_lcd_setup
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text5
  1773  012152                     __ptext5:
  1774                           	callstack 0
  1775  012152                     _expander_setup:
  1776                           	callstack 20
  1777  012152                     
  1778                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 45:     expander_sendByte(0x01, 0);
  1779  012152  0E00               	movlw	0
  1780  012154  6E0E               	movwf	expander_sendByte@byte^0,c
  1781  012156  0E01               	movlw	1
  1782  012158  ECA2  F08E         	call	_expander_sendByte
  1783  01215C  0012               	return		;funcret
  1784  01215E                     __end_of_expander_setup:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _TMR4_Initialize *****************
  1788 ;; Defined at:
  1789 ;;		line 59 in file "mcc_generated_files/tmr4.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    4
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_SYSTEM_Initialize
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text6
  1818  011FD2                     __ptext6:
  1819                           	callstack 0
  1820  011FD2                     _TMR4_Initialize:
  1821                           	callstack 25
  1822  011FD2                     
  1823                           ;mcc_generated_files/tmr4.c: 64:     T4CLKCON = 0x01;
  1824  011FD2  0E01               	movlw	1
  1825  011FD4  6EB8               	movwf	184,c	;volatile
  1826                           
  1827                           ;mcc_generated_files/tmr4.c: 67:     T4HLT = 0x00;
  1828  011FD6  0E00               	movlw	0
  1829  011FD8  6EB7               	movwf	183,c	;volatile
  1830                           
  1831                           ;mcc_generated_files/tmr4.c: 70:     T4RST = 0x00;
  1832  011FDA  0E00               	movlw	0
  1833  011FDC  6EB9               	movwf	185,c	;volatile
  1834                           
  1835                           ;mcc_generated_files/tmr4.c: 73:     T4PR = 0xF9;
  1836  011FDE  0EF9               	movlw	249
  1837  011FE0  6EB5               	movwf	181,c	;volatile
  1838                           
  1839                           ;mcc_generated_files/tmr4.c: 76:     T4TMR = 0x00;
  1840  011FE2  0E00               	movlw	0
  1841  011FE4  6EB4               	movwf	180,c	;volatile
  1842  011FE6                     
  1843                           ;mcc_generated_files/tmr4.c: 79:     PIR4bits.TMR4IF = 0;
  1844  011FE6  010E               	movlb	14	; () banked
  1845  011FE8  97C9               	bcf	201,3,b	;volatile
  1846                           
  1847                           ;mcc_generated_files/tmr4.c: 82:     T4CON = 0xE0;
  1848  011FEA  0EE0               	movlw	224
  1849  011FEC  6EB6               	movwf	182,c	;volatile
  1850  011FEE                     
  1851                           ; BSR set to: 14
  1852  011FEE  0012               	return		;funcret
  1853  011FF0                     __end_of_TMR4_Initialize:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _TMR2_Initialize *****************
  1857 ;; Defined at:
  1858 ;;		line 65 in file "mcc_generated_files/tmr2.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    5
  1879 ;; This function calls:
  1880 ;;		_TMR2_SetInterruptHandler
  1881 ;; This function is called by:
  1882 ;;		_SYSTEM_Initialize
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text7
  1887  011DDA                     __ptext7:
  1888                           	callstack 0
  1889  011DDA                     _TMR2_Initialize:
  1890                           	callstack 24
  1891  011DDA                     
  1892                           ;mcc_generated_files/tmr2.c: 70:     T2CLKCON = 0x04;
  1893  011DDA  0E04               	movlw	4
  1894  011DDC  6EBE               	movwf	190,c	;volatile
  1895                           
  1896                           ;mcc_generated_files/tmr2.c: 73:     T2HLT = 0x12;
  1897  011DDE  0E12               	movlw	18
  1898  011DE0  6EBD               	movwf	189,c	;volatile
  1899                           
  1900                           ;mcc_generated_files/tmr2.c: 76:     T2RST = 0x00;
  1901  011DE2  0E00               	movlw	0
  1902  011DE4  6EBF               	movwf	191,c	;volatile
  1903                           
  1904                           ;mcc_generated_files/tmr2.c: 79:     T2PR = 0x3D;
  1905  011DE6  0E3D               	movlw	61
  1906  011DE8  6EBB               	movwf	187,c	;volatile
  1907                           
  1908                           ;mcc_generated_files/tmr2.c: 82:     T2TMR = 0x00;
  1909  011DEA  0E00               	movlw	0
  1910  011DEC  6EBA               	movwf	186,c	;volatile
  1911  011DEE                     
  1912                           ;mcc_generated_files/tmr2.c: 85:     PIR4bits.TMR2IF = 0;
  1913  011DEE  010E               	movlb	14	; () banked
  1914  011DF0  93C9               	bcf	201,1,b	;volatile
  1915  011DF2                     
  1916                           ; BSR set to: 14
  1917                           ;mcc_generated_files/tmr2.c: 88:     PIE4bits.TMR2IE = 1;
  1918  011DF2  83C1               	bsf	193,1,b	;volatile
  1919  011DF4                     
  1920                           ; BSR set to: 14
  1921                           ;mcc_generated_files/tmr2.c: 91:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  1922  011DF4  0E8E               	movlw	low _TMR2_DefaultInterruptHandler
  1923  011DF6  6E07               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  1924  011DF8  0E21               	movlw	high _TMR2_DefaultInterruptHandler
  1925  011DFA  6E08               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  1926  011DFC  0E01               	movlw	low (_TMR2_DefaultInterruptHandler shr (0+16))
  1927  011DFE  6E09               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)^0,c
  1928  011E00  EC8D  F090         	call	_TMR2_SetInterruptHandler	;wreg free
  1929  011E04                     
  1930                           ;mcc_generated_files/tmr2.c: 94:     T2CON = 0x80;
  1931  011E04  0E80               	movlw	128
  1932  011E06  6EBC               	movwf	188,c	;volatile
  1933  011E08  0012               	return		;funcret
  1934  011E0A                     __end_of_TMR2_Initialize:
  1935                           	callstack 0
  1936                           
  1937 ;; *************** function _TMR2_SetInterruptHandler *****************
  1938 ;; Defined at:
  1939 ;;		line 179 in file "mcc_generated_files/tmr2.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  InterruptHan    3    6[COMRAM] PTR FTN()void 
  1942 ;;		 -> TMR2_UserInterruptHandler(1), TMR2_DefaultInterruptHandler(1), 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1954 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1957 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1958 ;;Total ram usage:        3 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    4
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_TMR2_Initialize
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text8
  1970  01211A                     __ptext8:
  1971                           	callstack 0
  1972  01211A                     _TMR2_SetInterruptHandler:
  1973                           	callstack 26
  1974  01211A                     
  1975                           ;mcc_generated_files/tmr2.c: 180:     TMR2_InterruptHandler = InterruptHandler;
  1976  01211A  C007  F0F4         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1977  01211E  C008  F0F5         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1978  012122  C009  F0F6         	movff	TMR2_SetInterruptHandler@InterruptHandler+2,_TMR2_InterruptHandler+2
  1979  012126  0012               	return		;funcret
  1980  012128                     __end_of_TMR2_SetInterruptHandler:
  1981                           	callstack 0
  1982                           
  1983 ;; *************** function _TMR1_Initialize *****************
  1984 ;; Defined at:
  1985 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;		None
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, status,2, status,0
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2003 ;;Total ram usage:        2 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    4
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_SYSTEM_Initialize
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text9
  2014  011C6E                     __ptext9:
  2015                           	callstack 0
  2016  011C6E                     _TMR1_Initialize:
  2017                           	callstack 25
  2018  011C6E                     
  2019                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  2020  011C6E  0E00               	movlw	0
  2021  011C70  6ECF               	movwf	207,c	;volatile
  2022                           
  2023                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
  2024  011C72  0E00               	movlw	0
  2025  011C74  6ED0               	movwf	208,c	;volatile
  2026                           
  2027                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x01;
  2028  011C76  0E01               	movlw	1
  2029  011C78  6ED1               	movwf	209,c	;volatile
  2030                           
  2031                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0xE0;
  2032  011C7A  0EE0               	movlw	224
  2033  011C7C  6ECD               	movwf	205,c	;volatile
  2034                           
  2035                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0xC0;
  2036  011C7E  0EC0               	movlw	192
  2037  011C80  6ECC               	movwf	204,c	;volatile
  2038  011C82                     
  2039                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
  2040  011C82  010E               	movlb	14	; () banked
  2041  011C84  91C9               	bcf	201,0,b	;volatile
  2042  011C86                     
  2043                           ; BSR set to: 14
  2044                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2045  011C86  50CC               	movf	204,w,c	;volatile
  2046  011C88  CFCD F007          	movff	4045,??_TMR1_Initialize	;volatile
  2047  011C8C  6A08               	clrf	(??_TMR1_Initialize+1)^0,c
  2048  011C8E  C007  F008         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2049  011C92  6A07               	clrf	??_TMR1_Initialize^0,c
  2050  011C94  1007               	iorwf	??_TMR1_Initialize^0,w,c
  2051  011C96  0100               	movlb	0	; () banked
  2052  011C98  6FFA               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  2053  011C9A  5008               	movf	(??_TMR1_Initialize+1)^0,w,c
  2054  011C9C  6FFB               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  2055  011C9E                     
  2056                           ; BSR set to: 0
  2057                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x10;
  2058  011C9E  0E10               	movlw	16
  2059  011CA0  6ECE               	movwf	206,c	;volatile
  2060  011CA2                     
  2061                           ; BSR set to: 0
  2062  011CA2  0012               	return		;funcret
  2063  011CA4                     __end_of_TMR1_Initialize:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _SPI1_Initialize *****************
  2067 ;; Defined at:
  2068 ;;		line 63 in file "mcc_generated_files/spi1.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2086 ;;Total ram usage:        0 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    4
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_SYSTEM_Initialize
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text10
  2097  011F8E                     __ptext10:
  2098                           	callstack 0
  2099  011F8E                     _SPI1_Initialize:
  2100                           	callstack 25
  2101  011F8E                     
  2102                           ;mcc_generated_files/spi1.c: 66:     SSP1CLKPPS = 22;
  2103  011F8E  0E16               	movlw	22
  2104  011F90  010E               	movlb	14	; () banked
  2105  011F92  6FB2               	movwf	178,b	;volatile
  2106                           
  2107                           ;mcc_generated_files/spi1.c: 67:     SSP1DATPPS = 21;
  2108  011F94  0E15               	movlw	21
  2109  011F96  6FB3               	movwf	179,b	;volatile
  2110                           
  2111                           ;mcc_generated_files/spi1.c: 68:     RC6PPS = 15;
  2112  011F98  0E0F               	movlw	15
  2113  011F9A  6FF8               	movwf	248,b	;volatile
  2114                           
  2115                           ;mcc_generated_files/spi1.c: 69:     RC4PPS = 16;
  2116  011F9C  0E10               	movlw	16
  2117  011F9E  6FF6               	movwf	246,b	;volatile
  2118                           
  2119                           ;mcc_generated_files/spi1.c: 71:     SSP1STAT = 0x40;
  2120  011FA0  0E40               	movlw	64
  2121  011FA2  6E94               	movwf	148,c	;volatile
  2122                           
  2123                           ;mcc_generated_files/spi1.c: 72:     SSP1CON1 = 0x0A;
  2124  011FA4  0E0A               	movlw	10
  2125  011FA6  6E95               	movwf	149,c	;volatile
  2126                           
  2127                           ;mcc_generated_files/spi1.c: 73:     SSP1ADD = 0x4F;
  2128  011FA8  0E4F               	movlw	79
  2129  011FAA  6E92               	movwf	146,c	;volatile
  2130  011FAC                     
  2131                           ; BSR set to: 14
  2132                           ;mcc_generated_files/spi1.c: 74:     TRISCbits.TRISC6 = 0;
  2133  011FAC  9C89               	bcf	137,6,c	;volatile
  2134  011FAE                     
  2135                           ; BSR set to: 14
  2136                           ;mcc_generated_files/spi1.c: 75:     SSP1CON1bits.SSPEN = 0;
  2137  011FAE  9A95               	bcf	149,5,c	;volatile
  2138  011FB0                     
  2139                           ; BSR set to: 14
  2140  011FB0  0012               	return		;funcret
  2141  011FB2                     __end_of_SPI1_Initialize:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _PWM3_Initialize *****************
  2145 ;; Defined at:
  2146 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    4
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_SYSTEM_Initialize
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text11
  2175  0120C2                     __ptext11:
  2176                           	callstack 0
  2177  0120C2                     _PWM3_Initialize:
  2178                           	callstack 25
  2179  0120C2                     
  2180                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x90;
  2181  0120C2  0E90               	movlw	144
  2182  0120C4  6EA4               	movwf	164,c	;volatile
  2183                           
  2184                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x00;
  2185  0120C6  0E00               	movlw	0
  2186  0120C8  6EA3               	movwf	163,c	;volatile
  2187                           
  2188                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0x00;
  2189  0120CA  0E00               	movlw	0
  2190  0120CC  6EA2               	movwf	162,c	;volatile
  2191                           
  2192                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 2;
  2193  0120CE  50AD               	movf	173,w,c	;volatile
  2194  0120D0  0BCF               	andlw	-49
  2195  0120D2  0920               	iorlw	32
  2196  0120D4  6EAD               	movwf	173,c	;volatile
  2197  0120D6  0012               	return		;funcret
  2198  0120D8                     __end_of_PWM3_Initialize:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function _PWM2_Initialize *****************
  2202 ;; Defined at:
  2203 ;;		line 64 in file "mcc_generated_files/pwm2.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2221 ;;Total ram usage:        0 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    4
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_SYSTEM_Initialize
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text12
  2232  0120D8                     __ptext12:
  2233                           	callstack 0
  2234  0120D8                     _PWM2_Initialize:
  2235                           	callstack 25
  2236  0120D8                     
  2237                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
  2238  0120D8  0E8C               	movlw	140
  2239  0120DA  6EA7               	movwf	167,c	;volatile
  2240                           
  2241                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x01;
  2242  0120DC  0E01               	movlw	1
  2243  0120DE  6EA6               	movwf	166,c	;volatile
  2244                           
  2245                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0xF3;
  2246  0120E0  0EF3               	movlw	243
  2247  0120E2  6EA5               	movwf	165,c	;volatile
  2248                           
  2249                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRSbits.C2TSEL = 0x2;
  2250  0120E4  50AD               	movf	173,w,c	;volatile
  2251  0120E6  0BF3               	andlw	-13
  2252  0120E8  0908               	iorlw	8
  2253  0120EA  6EAD               	movwf	173,c	;volatile
  2254  0120EC  0012               	return		;funcret
  2255  0120EE                     __end_of_PWM2_Initialize:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _PMD_Initialize *****************
  2259 ;; Defined at:
  2260 ;;		line 82 in file "mcc_generated_files/mcc.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    4
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_SYSTEM_Initialize
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text13
  2289  01200E                     __ptext13:
  2290                           	callstack 0
  2291  01200E                     _PMD_Initialize:
  2292                           	callstack 25
  2293  01200E                     
  2294                           ;mcc_generated_files/mcc.c: 85:     PMD0 = 0x00;
  2295  01200E  0E00               	movlw	0
  2296  012010  010E               	movlb	14	; () banked
  2297  012012  6FDC               	movwf	220,b	;volatile
  2298                           
  2299                           ;mcc_generated_files/mcc.c: 87:     PMD1 = 0x00;
  2300  012014  0E00               	movlw	0
  2301  012016  6FDD               	movwf	221,b	;volatile
  2302                           
  2303                           ;mcc_generated_files/mcc.c: 89:     PMD2 = 0x00;
  2304  012018  0E00               	movlw	0
  2305  01201A  6FDE               	movwf	222,b	;volatile
  2306                           
  2307                           ;mcc_generated_files/mcc.c: 91:     PMD3 = 0x00;
  2308  01201C  0E00               	movlw	0
  2309  01201E  6FDF               	movwf	223,b	;volatile
  2310                           
  2311                           ;mcc_generated_files/mcc.c: 93:     PMD4 = 0x00;
  2312  012020  0E00               	movlw	0
  2313  012022  6FE0               	movwf	224,b	;volatile
  2314                           
  2315                           ;mcc_generated_files/mcc.c: 95:     PMD5 = 0x00;
  2316  012024  0E00               	movlw	0
  2317  012026  6FE1               	movwf	225,b	;volatile
  2318  012028                     
  2319                           ; BSR set to: 14
  2320  012028  0012               	return		;funcret
  2321  01202A                     __end_of_PMD_Initialize:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _PIN_MANAGER_Initialize *****************
  2325 ;; Defined at:
  2326 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2344 ;;Total ram usage:        0 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    4
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_SYSTEM_Initialize
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text14
  2355  011528                     __ptext14:
  2356                           	callstack 0
  2357  011528                     _PIN_MANAGER_Initialize:
  2358                           	callstack 25
  2359  011528                     
  2360                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2361  011528  0E00               	movlw	0
  2362  01152A  6E86               	movwf	134,c	;volatile
  2363                           
  2364                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2365  01152C  0E00               	movlw	0
  2366  01152E  6E85               	movwf	133,c	;volatile
  2367                           
  2368                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2369  011530  0E00               	movlw	0
  2370  011532  6E82               	movwf	130,c	;volatile
  2371                           
  2372                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2373  011534  0E00               	movlw	0
  2374  011536  6E83               	movwf	131,c	;volatile
  2375                           
  2376                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2377  011538  0E00               	movlw	0
  2378  01153A  6E84               	movwf	132,c	;volatile
  2379                           
  2380                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2381  01153C  0E07               	movlw	7
  2382  01153E  6E8B               	movwf	139,c	;volatile
  2383                           
  2384                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xF3;
  2385  011540  0EF3               	movlw	243
  2386  011542  6E87               	movwf	135,c	;volatile
  2387  011544                     
  2388                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  2389  011544  6888               	setf	136,c	;volatile
  2390                           
  2391                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xAA;
  2392  011546  0EAA               	movlw	170
  2393  011548  6E89               	movwf	137,c	;volatile
  2394                           
  2395                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x5D;
  2396  01154A  0E5D               	movlw	93
  2397  01154C  6E8A               	movwf	138,c	;volatile
  2398                           
  2399                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x5D;
  2400  01154E  0E5D               	movlw	93
  2401  011550  010F               	movlb	15	; () banked
  2402  011552  6F21               	movwf	33,b	;volatile
  2403                           
  2404                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x82;
  2405  011554  0E82               	movlw	130
  2406  011556  6F1C               	movwf	28,b	;volatile
  2407  011558                     
  2408                           ; BSR set to: 15
  2409                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  2410  011558  6914               	setf	20,b	;volatile
  2411                           
  2412                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  2413  01155A  0E06               	movlw	6
  2414  01155C  6F29               	movwf	41,b	;volatile
  2415                           
  2416                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xA1;
  2417  01155E  0EA1               	movlw	161
  2418  011560  6F0C               	movwf	12,b	;volatile
  2419                           
  2420                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  2421  011562  0E00               	movlw	0
  2422  011564  6F20               	movwf	32,b	;volatile
  2423                           
  2424                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  2425  011566  0E00               	movlw	0
  2426  011568  6F28               	movwf	40,b	;volatile
  2427                           
  2428                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  2429  01156A  0E00               	movlw	0
  2430  01156C  6F13               	movwf	19,b	;volatile
  2431                           
  2432                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  2433  01156E  0E00               	movlw	0
  2434  011570  6F0B               	movwf	11,b	;volatile
  2435                           
  2436                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  2437  011572  0E00               	movlw	0
  2438  011574  6F1B               	movwf	27,b	;volatile
  2439                           
  2440                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  2441  011576  0E00               	movlw	0
  2442  011578  6F27               	movwf	39,b	;volatile
  2443                           
  2444                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  2445  01157A  0E00               	movlw	0
  2446  01157C  6F0A               	movwf	10,b	;volatile
  2447                           
  2448                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  2449  01157E  0E00               	movlw	0
  2450  011580  6F12               	movwf	18,b	;volatile
  2451                           
  2452                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  2453  011582  0E00               	movlw	0
  2454  011584  6F1A               	movwf	26,b	;volatile
  2455                           
  2456                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  2457  011586  0E00               	movlw	0
  2458  011588  6F1F               	movwf	31,b	;volatile
  2459  01158A                     
  2460                           ; BSR set to: 15
  2461                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  2462  01158A  6909               	setf	9,b	;volatile
  2463  01158C                     
  2464                           ; BSR set to: 15
  2465                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  2466  01158C  6911               	setf	17,b	;volatile
  2467  01158E                     
  2468                           ; BSR set to: 15
  2469                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  2470  01158E  6919               	setf	25,b	;volatile
  2471  011590                     
  2472                           ; BSR set to: 15
  2473                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  2474  011590  691E               	setf	30,b	;volatile
  2475                           
  2476                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  2477  011592  0E07               	movlw	7
  2478  011594  6F26               	movwf	38,b	;volatile
  2479  011596                     
  2480                           ; BSR set to: 15
  2481                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  2482  011596  6908               	setf	8,b	;volatile
  2483  011598                     
  2484                           ; BSR set to: 15
  2485                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  2486  011598  6910               	setf	16,b	;volatile
  2487  01159A                     
  2488                           ; BSR set to: 15
  2489                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  2490  01159A  6918               	setf	24,b	;volatile
  2491  01159C                     
  2492                           ; BSR set to: 15
  2493                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  2494  01159C  691D               	setf	29,b	;volatile
  2495                           
  2496                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  2497  01159E  0E0F               	movlw	15
  2498  0115A0  6F25               	movwf	37,b	;volatile
  2499                           
  2500                           ;mcc_generated_files/pin_manager.c: 127:     RC0PPS = 0x18;
  2501  0115A2  0E18               	movlw	24
  2502  0115A4  010E               	movlb	14	; () banked
  2503  0115A6  6FF2               	movwf	242,b	;volatile
  2504                           
  2505                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x16;
  2506  0115A8  0E16               	movlw	22
  2507  0115AA  6FB2               	movwf	178,b	;volatile
  2508                           
  2509                           ;mcc_generated_files/pin_manager.c: 129:     CLCIN0PPS = 0x01;
  2510  0115AC  0E01               	movlw	1
  2511  0115AE  6F1F               	movwf	31,b	;volatile
  2512                           
  2513                           ;mcc_generated_files/pin_manager.c: 130:     RA3PPS = 0x07;
  2514  0115B0  0E07               	movlw	7
  2515  0115B2  6FE5               	movwf	229,b	;volatile
  2516                           
  2517                           ;mcc_generated_files/pin_manager.c: 131:     RC4PPS = 0x10;
  2518  0115B4  0E10               	movlw	16
  2519  0115B6  6FF6               	movwf	246,b	;volatile
  2520                           
  2521                           ;mcc_generated_files/pin_manager.c: 132:     T2INPPS = 0x01;
  2522  0115B8  0E01               	movlw	1
  2523  0115BA  6FA6               	movwf	166,b	;volatile
  2524                           
  2525                           ;mcc_generated_files/pin_manager.c: 133:     CCP1PPS = 0x10;
  2526  0115BC  0E10               	movlw	16
  2527  0115BE  6FAA               	movwf	170,b	;volatile
  2528                           
  2529                           ;mcc_generated_files/pin_manager.c: 134:     RC2PPS = 0x06;
  2530  0115C0  0E06               	movlw	6
  2531  0115C2  6FF4               	movwf	244,b	;volatile
  2532                           
  2533                           ;mcc_generated_files/pin_manager.c: 135:     RD1PPS = 0x1A;
  2534  0115C4  0E1A               	movlw	26
  2535  0115C6  6FFB               	movwf	251,b	;volatile
  2536                           
  2537                           ;mcc_generated_files/pin_manager.c: 136:     RC6PPS = 0x0F;
  2538  0115C8  0E0F               	movlw	15
  2539  0115CA  6FF8               	movwf	248,b	;volatile
  2540                           
  2541                           ;mcc_generated_files/pin_manager.c: 137:     SSP1DATPPS = 0x15;
  2542  0115CC  0E15               	movlw	21
  2543  0115CE  6FB3               	movwf	179,b	;volatile
  2544  0115D0                     
  2545                           ; BSR set to: 14
  2546  0115D0  0012               	return		;funcret
  2547  0115D2                     __end_of_PIN_MANAGER_Initialize:
  2548                           	callstack 0
  2549                           
  2550 ;; *************** function _OSCILLATOR_Initialize *****************
  2551 ;; Defined at:
  2552 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    4
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_SYSTEM_Initialize
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text15
  2581  01207A                     __ptext15:
  2582                           	callstack 0
  2583  01207A                     _OSCILLATOR_Initialize:
  2584                           	callstack 25
  2585  01207A                     
  2586                           ;mcc_generated_files/mcc.c: 71:     OSCCON1 = 0x60;
  2587  01207A  0E60               	movlw	96
  2588  01207C  010E               	movlb	14	; () banked
  2589  01207E  6FD3               	movwf	211,b	;volatile
  2590                           
  2591                           ;mcc_generated_files/mcc.c: 73:     OSCCON3 = 0x00;
  2592  012080  0E00               	movlw	0
  2593  012082  6FD5               	movwf	213,b	;volatile
  2594                           
  2595                           ;mcc_generated_files/mcc.c: 75:     OSCEN = 0x00;
  2596  012084  0E00               	movlw	0
  2597  012086  6FD7               	movwf	215,b	;volatile
  2598                           
  2599                           ;mcc_generated_files/mcc.c: 77:     OSCFRQ = 0x06;
  2600  012088  0E06               	movlw	6
  2601  01208A  6FD9               	movwf	217,b	;volatile
  2602                           
  2603                           ;mcc_generated_files/mcc.c: 79:     OSCTUNE = 0x00;
  2604  01208C  0E00               	movlw	0
  2605  01208E  6FD8               	movwf	216,b	;volatile
  2606  012090                     
  2607                           ; BSR set to: 14
  2608  012090  0012               	return		;funcret
  2609  012092                     __end_of_OSCILLATOR_Initialize:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _INTERRUPT_Initialize *****************
  2613 ;; Defined at:
  2614 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		None
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    4
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_SYSTEM_Initialize
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text16
  2643  012178                     __ptext16:
  2644                           	callstack 0
  2645  012178                     _INTERRUPT_Initialize:
  2646                           	callstack 25
  2647  012178                     
  2648                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2649  012178  9AF2               	bcf	242,5,c	;volatile
  2650  01217A  0012               	return		;funcret
  2651  01217C                     __end_of_INTERRUPT_Initialize:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function _CLC3_Initialize *****************
  2655 ;; Defined at:
  2656 ;;		line 58 in file "mcc_generated_files/clc3.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    4
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_SYSTEM_Initialize
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text17
  2685  011E98                     __ptext17:
  2686                           	callstack 0
  2687  011E98                     _CLC3_Initialize:
  2688                           	callstack 25
  2689  011E98                     
  2690                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x0E;
  2691  011E98  0E0E               	movlw	14
  2692  011E9A  010E               	movlb	14	; () banked
  2693  011E9C  6F3C               	movwf	60,b	;volatile
  2694                           
  2695                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x19;
  2696  011E9E  0E19               	movlw	25
  2697  011EA0  6F3D               	movwf	61,b	;volatile
  2698                           
  2699                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x00;
  2700  011EA2  0E00               	movlw	0
  2701  011EA4  6F3E               	movwf	62,b	;volatile
  2702                           
  2703                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  2704  011EA6  0E00               	movlw	0
  2705  011EA8  6F3F               	movwf	63,b	;volatile
  2706                           
  2707                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  2708  011EAA  0E00               	movlw	0
  2709  011EAC  6F40               	movwf	64,b	;volatile
  2710                           
  2711                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
  2712  011EAE  0E02               	movlw	2
  2713  011EB0  6F41               	movwf	65,b	;volatile
  2714                           
  2715                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x00;
  2716  011EB2  0E00               	movlw	0
  2717  011EB4  6F42               	movwf	66,b	;volatile
  2718                           
  2719                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  2720  011EB6  0E00               	movlw	0
  2721  011EB8  6F43               	movwf	67,b	;volatile
  2722                           
  2723                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  2724  011EBA  0E00               	movlw	0
  2725  011EBC  6F44               	movwf	68,b	;volatile
  2726                           
  2727                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x82;
  2728  011EBE  0E82               	movlw	130
  2729  011EC0  6F3B               	movwf	59,b	;volatile
  2730  011EC2                     
  2731                           ; BSR set to: 14
  2732  011EC2  0012               	return		;funcret
  2733  011EC4                     __end_of_CLC3_Initialize:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _CLC1_Initialize *****************
  2737 ;; Defined at:
  2738 ;;		line 58 in file "mcc_generated_files/clc1.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    4
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_SYSTEM_Initialize
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text18
  2767  011EC4                     __ptext18:
  2768                           	callstack 0
  2769  011EC4                     _CLC1_Initialize:
  2770                           	callstack 25
  2771  011EC4                     
  2772                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x0E;
  2773  011EC4  0E0E               	movlw	14
  2774  011EC6  010E               	movlb	14	; () banked
  2775  011EC8  6F28               	movwf	40,b	;volatile
  2776                           
  2777                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x00;
  2778  011ECA  0E00               	movlw	0
  2779  011ECC  6F29               	movwf	41,b	;volatile
  2780                           
  2781                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x00;
  2782  011ECE  0E00               	movlw	0
  2783  011ED0  6F2A               	movwf	42,b	;volatile
  2784                           
  2785                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x00;
  2786  011ED2  0E00               	movlw	0
  2787  011ED4  6F2B               	movwf	43,b	;volatile
  2788                           
  2789                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x00;
  2790  011ED6  0E00               	movlw	0
  2791  011ED8  6F2C               	movwf	44,b	;volatile
  2792                           
  2793                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x02;
  2794  011EDA  0E02               	movlw	2
  2795  011EDC  6F2D               	movwf	45,b	;volatile
  2796                           
  2797                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
  2798  011EDE  0E00               	movlw	0
  2799  011EE0  6F2E               	movwf	46,b	;volatile
  2800                           
  2801                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
  2802  011EE2  0E00               	movlw	0
  2803  011EE4  6F2F               	movwf	47,b	;volatile
  2804                           
  2805                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
  2806  011EE6  0E00               	movlw	0
  2807  011EE8  6F30               	movwf	48,b	;volatile
  2808                           
  2809                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x82;
  2810  011EEA  0E82               	movlw	130
  2811  011EEC  6F27               	movwf	39,b	;volatile
  2812  011EEE                     
  2813                           ; BSR set to: 14
  2814  011EEE  0012               	return		;funcret
  2815  011EF0                     __end_of_CLC1_Initialize:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _CCP1_Initialize *****************
  2819 ;; Defined at:
  2820 ;;		line 67 in file "mcc_generated_files/ccp1.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    5
  2841 ;; This function calls:
  2842 ;;		_CCP1_SetCallBack
  2843 ;; This function is called by:
  2844 ;;		_SYSTEM_Initialize
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text19
  2849  011E0A                     __ptext19:
  2850                           	callstack 0
  2851  011E0A                     _CCP1_Initialize:
  2852                           	callstack 24
  2853  011E0A                     
  2854                           ;mcc_generated_files/ccp1.c: 72:  CCP1CON = 0x04;
  2855  011E0A  0E04               	movlw	4
  2856  011E0C  6EAB               	movwf	171,c	;volatile
  2857                           
  2858                           ;mcc_generated_files/ccp1.c: 75:  CCP1CAP = 0x00;
  2859  011E0E  0E00               	movlw	0
  2860  011E10  6EAC               	movwf	172,c	;volatile
  2861                           
  2862                           ;mcc_generated_files/ccp1.c: 78:  CCPR1H = 0x00;
  2863  011E12  0E00               	movlw	0
  2864  011E14  6EAA               	movwf	170,c	;volatile
  2865                           
  2866                           ;mcc_generated_files/ccp1.c: 81:  CCPR1L = 0x00;
  2867  011E16  0E00               	movlw	0
  2868  011E18  6EA9               	movwf	169,c	;volatile
  2869  011E1A                     
  2870                           ;mcc_generated_files/ccp1.c: 84:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  2871  011E1A  0E90               	movlw	low _CCP1_DefaultCallBack
  2872  011E1C  6E07               	movwf	CCP1_SetCallBack@customCallBack^0,c
  2873  011E1E  0E21               	movlw	high _CCP1_DefaultCallBack
  2874  011E20  6E08               	movwf	(CCP1_SetCallBack@customCallBack+1)^0,c
  2875  011E22  0E01               	movlw	low (_CCP1_DefaultCallBack shr (0+16))
  2876  011E24  6E09               	movwf	(CCP1_SetCallBack@customCallBack+2)^0,c
  2877  011E26  EC94  F090         	call	_CCP1_SetCallBack	;wreg free
  2878  011E2A                     
  2879                           ;mcc_generated_files/ccp1.c: 87:  CCPTMRSbits.C1TSEL = 0x1;
  2880  011E2A  50AD               	movf	173,w,c	;volatile
  2881  011E2C  0BFC               	andlw	-4
  2882  011E2E  0901               	iorlw	1
  2883  011E30  6EAD               	movwf	173,c	;volatile
  2884  011E32                     
  2885                           ;mcc_generated_files/ccp1.c: 90:     PIR6bits.CCP1IF = 0;
  2886  011E32  010E               	movlb	14	; () banked
  2887  011E34  91CB               	bcf	203,0,b	;volatile
  2888  011E36                     
  2889                           ; BSR set to: 14
  2890                           ;mcc_generated_files/ccp1.c: 93:     PIE6bits.CCP1IE = 1;
  2891  011E36  81C3               	bsf	195,0,b	;volatile
  2892  011E38                     
  2893                           ; BSR set to: 14
  2894  011E38  0012               	return		;funcret
  2895  011E3A                     __end_of_CCP1_Initialize:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _CCP1_SetCallBack *****************
  2899 ;; Defined at:
  2900 ;;		line 111 in file "mcc_generated_files/ccp1.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  customCallBa    3    6[COMRAM] PTR FTN(unsigned short ,
  2903 ;;		 -> CCP1_UserInterruptHandler(1), CCP1_DefaultCallBack(1), 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2915 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2919 ;;Total ram usage:        3 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    4
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_CCP1_Initialize
  2926 ;;		_main
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text20
  2931  012128                     __ptext20:
  2932                           	callstack 0
  2933  012128                     _CCP1_SetCallBack:
  2934                           	callstack 24
  2935  012128                     
  2936                           ;mcc_generated_files/ccp1.c: 112:     CCP1_CallBack = customCallBack;
  2937  012128  C007  F0F7         	movff	CCP1_SetCallBack@customCallBack,_CCP1_CallBack
  2938  01212C  C008  F0F8         	movff	CCP1_SetCallBack@customCallBack+1,_CCP1_CallBack+1
  2939  012130  C009  F0F9         	movff	CCP1_SetCallBack@customCallBack+2,_CCP1_CallBack+2
  2940  012134  0012               	return		;funcret
  2941  012136                     __end_of_CCP1_SetCallBack:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _Init_display *****************
  2945 ;; Defined at:
  2946 ;;		line 297 in file "application.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:   12
  2967 ;; This function calls:
  2968 ;;		_lcd_setContrast
  2969 ;;		_lcd_writeString
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text21
  2976  011B8E                     __ptext21:
  2977                           	callstack 0
  2978  011B8E                     _Init_display:
  2979                           	callstack 18
  2980  011B8E                     
  2981                           ;application.c: 299:     lcd_setContrast(0x20);
  2982  011B8E  0E20               	movlw	32
  2983  011B90  ECAF  F090         	call	_lcd_setContrast
  2984  011B94                     
  2985                           ;application.c: 300:     lcd_writeString(" Waiting for CMD", 0);
  2986  011B94  0E98               	movlw	low STR_19
  2987  011B96  6E1D               	movwf	lcd_writeString@string^0,c
  2988  011B98  0EFF               	movlw	high STR_19
  2989  011B9A  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  2990  011B9C  0E00               	movlw	0
  2991  011B9E  6E1F               	movwf	lcd_writeString@row^0,c
  2992  011BA0  EC3C  F08B         	call	_lcd_writeString	;wreg free
  2993  011BA4                     
  2994                           ;application.c: 301:     lcd_writeString(" Waiting for CMD", 0);
  2995  011BA4  0E98               	movlw	low STR_19
  2996  011BA6  6E1D               	movwf	lcd_writeString@string^0,c
  2997  011BA8  0EFF               	movlw	high STR_19
  2998  011BAA  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  2999  011BAC  0E00               	movlw	0
  3000  011BAE  6E1F               	movwf	lcd_writeString@row^0,c
  3001  011BB0  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3002  011BB4                     
  3003                           ;application.c: 302:     lcd_writeString("----------------", 1);
  3004  011BB4  0E87               	movlw	low STR_2
  3005  011BB6  6E1D               	movwf	lcd_writeString@string^0,c
  3006  011BB8  0EFF               	movlw	high STR_2
  3007  011BBA  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3008  011BBC  0E01               	movlw	1
  3009  011BBE  6E1F               	movwf	lcd_writeString@row^0,c
  3010  011BC0  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3011  011BC4  0012               	return		;funcret
  3012  011BC6                     __end_of_Init_display:
  3013                           	callstack 0
  3014                           
  3015 ;; *************** function _lcd_setContrast *****************
  3016 ;; Defined at:
  3017 ;;		line 83 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  contrast        1    wreg     unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  contrast        1   16[COMRAM] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3034 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3035 ;;Total ram usage:        1 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    8
  3038 ;; This function calls:
  3039 ;;		_digipot_setWiper
  3040 ;; This function is called by:
  3041 ;;		_Init_display
  3042 ;;		_lcd_example
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text22
  3047  01215E                     __ptext22:
  3048                           	callstack 0
  3049  01215E                     _lcd_setContrast:
  3050                           	callstack 21
  3051                           
  3052                           ;incstack = 0
  3053                           ;lcd_setContrast@contrast stored from wreg
  3054  01215E  6E11               	movwf	lcd_setContrast@contrast^0,c
  3055  012160                     
  3056                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 84:     digipot_setWiper(contrast);
  3057  012160  5011               	movf	lcd_setContrast@contrast^0,w,c
  3058  012162  EC35  F08F         	call	_digipot_setWiper
  3059  012166  0012               	return		;funcret
  3060  012168                     __end_of_lcd_setContrast:
  3061                           	callstack 0
  3062                           
  3063 ;; *************** function _digipot_setWiper *****************
  3064 ;; Defined at:
  3065 ;;		line 29 in file "mcc_generated_files/LCDMiniDrivers/digpot.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  val             1    wreg     unsigned char 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  val             1   13[COMRAM] unsigned char 
  3070 ;;  cmd             2   14[COMRAM] unsigned char [2]
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3081 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3083 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3084 ;;Total ram usage:        3 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    7
  3087 ;; This function calls:
  3088 ;;		_SPI1_Close
  3089 ;;		_SPI1_WriteBlock
  3090 ;;		_spi_master_open
  3091 ;; This function is called by:
  3092 ;;		_lcd_setContrast
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text23
  3097  011E6A                     __ptext23:
  3098                           	callstack 0
  3099  011E6A                     _digipot_setWiper:
  3100                           	callstack 21
  3101                           
  3102                           ;incstack = 0
  3103                           ;digipot_setWiper@val stored from wreg
  3104  011E6A  6E0E               	movwf	digipot_setWiper@val^0,c
  3105  011E6C                     
  3106                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 30:     spi_master_open(LCD);
  3107  011E6C  0E00               	movlw	0
  3108  011E6E  ECBB  F08E         	call	_spi_master_open
  3109  011E72                     
  3110                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 31:     LATAbits.LATA2 = 0;
  3111  011E72  9482               	bcf	130,2,c	;volatile
  3112  011E74                     
  3113                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 32:     uint8_t cmd[2];;mcc_generated_file
      +                          s/LCDMiniDrivers/digpot.c: 33:     cmd[0] = 0;
  3114  011E74  0E00               	movlw	0
  3115  011E76  6E0F               	movwf	digipot_setWiper@cmd^0,c
  3116  011E78                     
  3117                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 34:     cmd[1] = val;
  3118  011E78  C00E  F010         	movff	digipot_setWiper@val,digipot_setWiper@cmd+1
  3119  011E7C                     
  3120                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 35:     SPI1_WriteBlock(cmd, 2);
  3121  011E7C  0E0F               	movlw	low digipot_setWiper@cmd
  3122  011E7E  6E08               	movwf	SPI1_WriteBlock@block^0,c
  3123  011E80  0E00               	movlw	high digipot_setWiper@cmd
  3124  011E82  6E09               	movwf	(SPI1_WriteBlock@block+1)^0,c
  3125  011E84  0E00               	movlw	0
  3126  011E86  6E0B               	movwf	(SPI1_WriteBlock@blockSize+1)^0,c
  3127  011E88  0E02               	movlw	2
  3128  011E8A  6E0A               	movwf	SPI1_WriteBlock@blockSize^0,c
  3129  011E8C  ECAA  F08D         	call	_SPI1_WriteBlock	;wreg free
  3130  011E90                     
  3131                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 36:     LATAbits.LATA2 = 1;
  3132  011E90  8482               	bsf	130,2,c	;volatile
  3133  011E92                     
  3134                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 37:     SPI1_Close();
  3135  011E92  ECC2  F090         	call	_SPI1_Close	;wreg free
  3136  011E96  0012               	return		;funcret
  3137  011E98                     __end_of_digipot_setWiper:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _ApplicationTask *****************
  3141 ;; Defined at:
  3142 ;;		line 43 in file "application.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  cmd_status      1   70[BANK0 ] enum E13287
  3147 ;;  rxCommand       1   69[BANK0 ] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3158 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3159 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3160 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;Total ram usage:        4 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:   13
  3164 ;; This function calls:
  3165 ;;		_ControlAction
  3166 ;;		_DecodeCmd
  3167 ;;		_DisableCapture
  3168 ;;		_GetEvent
  3169 ;;		_Init4nextFrame
  3170 ;;		_Reverse
  3171 ;;		_TMR1_HasOverflowOccured
  3172 ;;		_TMR1_StartTimer
  3173 ;;		_TMR1_WriteTimer
  3174 ;;		_check4Start
  3175 ;;		_lcd_writeString
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text24
  3182  010970                     __ptext24:
  3183                           	callstack 0
  3184  010970                     _ApplicationTask:
  3185                           	callstack 17
  3186  010970                     
  3187                           ;application.c: 45:     static e_app_states appState=GET_EVENT;;application.c: 46:     e
      +                          _cmd_status cmd_status;;application.c: 47:     uint8_t rxCommand;;application.c: 49:    
      +                           switch(appState)
  3188  010970  EFF3  F085         	goto	l4303
  3189  010974                     l4193:
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;application.c: 52:             if(GetEvent())
  3193  010974  ECF8  F08F         	call	_GetEvent	;wreg free
  3194  010978  0900               	iorlw	0
  3195  01097A  B4D8               	btfsc	status,2,c
  3196  01097C  EFC2  F084         	goto	u2841
  3197  010980  EFC4  F084         	goto	u2840
  3198  010984                     u2841:
  3199  010984  EF19  F086         	goto	l819
  3200  010988                     u2840:
  3201  010988                     
  3202                           ;application.c: 53:             {;application.c: 56:                 TMR1_WriteTimer(0);
  3203  010988  0E00               	movlw	0
  3204  01098A  6E08               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  3205  01098C  0E00               	movlw	0
  3206  01098E  6E07               	movwf	TMR1_WriteTimer@timerVal^0,c
  3207  010990  EC8C  F08F         	call	_TMR1_WriteTimer	;wreg free
  3208  010994                     
  3209                           ;application.c: 57:                 TMR1_StartTimer();
  3210  010994  ECBE  F090         	call	_TMR1_StartTimer	;wreg free
  3211  010998                     
  3212                           ;application.c: 58:                 PIE6bits.CCP1IE = 1;
  3213  010998  010E               	movlb	14	; () banked
  3214  01099A  81C3               	bsf	195,0,b	;volatile
  3215  01099C                     
  3216                           ; BSR set to: 14
  3217                           ;application.c: 59:                 CCP1CONbits.CCP1EN = 1;
  3218  01099C  8EAB               	bsf	171,7,c	;volatile
  3219                           
  3220                           ;application.c: 60:                 appState = DETECT_START;
  3221  01099E  0E01               	movlw	1
  3222  0109A0  0100               	movlb	0	; () banked
  3223  0109A2  6FB1               	movwf	ApplicationTask@appState& (0+255),b
  3224  0109A4  EF19  F086         	goto	l819
  3225  0109A8                     l4203:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;application.c: 64:             if (ccpCapturedFlag)
  3229  0109A8  51B3               	movf	_ccpCapturedFlag& (0+255),w,b	;volatile
  3230  0109AA  B4D8               	btfsc	status,2,c
  3231  0109AC  EFDA  F084         	goto	u2851
  3232  0109B0  EFDC  F084         	goto	u2850
  3233  0109B4                     u2851:
  3234  0109B4  EF04  F085         	goto	l4219
  3235  0109B8                     u2850:
  3236  0109B8                     
  3237                           ; BSR set to: 0
  3238                           ;application.c: 65:             {;application.c: 66:                 ccpCapturedFlag=0;
  3239  0109B8  0E00               	movlw	0
  3240  0109BA  6FB3               	movwf	_ccpCapturedFlag& (0+255),b	;volatile
  3241  0109BC                     
  3242                           ; BSR set to: 0
  3243                           ;application.c: 67:                 if (check4Start())
  3244  0109BC  EC10  F08D         	call	_check4Start	;wreg free
  3245  0109C0  0900               	iorlw	0
  3246  0109C2  B4D8               	btfsc	status,2,c
  3247  0109C4  EFE6  F084         	goto	u2861
  3248  0109C8  EFE8  F084         	goto	u2860
  3249  0109CC                     u2861:
  3250  0109CC  EFED  F084         	goto	l4211
  3251  0109D0                     u2860:
  3252  0109D0                     
  3253                           ;application.c: 68:                 {;application.c: 69:                     appState = 
      +                          CAPTURE_DATA_BITS;
  3254  0109D0  0E02               	movlw	2
  3255  0109D2  0100               	movlb	0	; () banked
  3256  0109D4  6FB1               	movwf	ApplicationTask@appState& (0+255),b
  3257                           
  3258                           ;application.c: 70:                 }
  3259  0109D6  EF19  F086         	goto	l819
  3260  0109DA                     l4211:
  3261                           
  3262                           ;application.c: 72:                 {;application.c: 73:                     DisableCapt
      +                          ure();
  3263  0109DA  EC78  F08F         	call	_DisableCapture	;wreg free
  3264  0109DE                     
  3265                           ;application.c: 74:                     lcd_writeString("  Start  Error  ", 0);
  3266  0109DE  0E43               	movlw	low STR_1
  3267  0109E0  6E1D               	movwf	lcd_writeString@string^0,c
  3268  0109E2  0EFF               	movlw	high STR_1
  3269  0109E4  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3270  0109E6  0E00               	movlw	0
  3271  0109E8  6E1F               	movwf	lcd_writeString@row^0,c
  3272  0109EA  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3273  0109EE                     
  3274                           ;application.c: 75:                     lcd_writeString("----------------", 1);
  3275  0109EE  0E87               	movlw	low STR_2
  3276  0109F0  6E1D               	movwf	lcd_writeString@string^0,c
  3277  0109F2  0EFF               	movlw	high STR_2
  3278  0109F4  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3279  0109F6  0E01               	movlw	1
  3280  0109F8  6E1F               	movwf	lcd_writeString@row^0,c
  3281  0109FA  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3282  0109FE                     l4217:
  3283                           
  3284                           ;application.c: 76:                     appState = INIT_FOR_NEXT_FRAME;
  3285  0109FE  0E05               	movlw	5
  3286  010A00  0100               	movlb	0	; () banked
  3287  010A02  6FB1               	movwf	ApplicationTask@appState& (0+255),b
  3288  010A04  EF19  F086         	goto	l819
  3289  010A08                     l4219:
  3290                           
  3291                           ; BSR set to: 0
  3292  010A08  EC77  F090         	call	_TMR1_HasOverflowOccured	;wreg free
  3293  010A0C  0900               	iorlw	0
  3294  010A0E  B4D8               	btfsc	status,2,c
  3295  010A10  EF0C  F085         	goto	u2871
  3296  010A14  EF0E  F085         	goto	u2870
  3297  010A18                     u2871:
  3298  010A18  EF19  F086         	goto	l819
  3299  010A1C                     u2870:
  3300  010A1C                     
  3301                           ;application.c: 80:             {;application.c: 82:                 PIR4bits.TMR1IF=0;
  3302  010A1C  010E               	movlb	14	; () banked
  3303  010A1E  91C9               	bcf	201,0,b	;volatile
  3304  010A20                     
  3305                           ; BSR set to: 14
  3306                           ;application.c: 83:                 DisableCapture();
  3307  010A20  EC78  F08F         	call	_DisableCapture	;wreg free
  3308  010A24                     
  3309                           ;application.c: 84:                 lcd_writeString("Start wait Error", 0);
  3310  010A24  0EDC               	movlw	low STR_3
  3311  010A26  6E1D               	movwf	lcd_writeString@string^0,c
  3312  010A28  0EFF               	movlw	high STR_3
  3313  010A2A  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3314  010A2C  0E00               	movlw	0
  3315  010A2E  6E1F               	movwf	lcd_writeString@row^0,c
  3316  010A30  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3317  010A34                     
  3318                           ;application.c: 85:                 lcd_writeString("----------------", 1);
  3319  010A34  0E87               	movlw	low STR_2
  3320  010A36  6E1D               	movwf	lcd_writeString@string^0,c
  3321  010A38  0EFF               	movlw	high STR_2
  3322  010A3A  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3323  010A3C  0E01               	movlw	1
  3324  010A3E  6E1F               	movwf	lcd_writeString@row^0,c
  3325  010A40  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3326  010A44  EFFF  F084         	goto	l4217
  3327  010A48                     l4231:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;application.c: 90:             if (ccpCapturedFlag)
  3331  010A48  51B3               	movf	_ccpCapturedFlag& (0+255),w,b	;volatile
  3332  010A4A  B4D8               	btfsc	status,2,c
  3333  010A4C  EF2A  F085         	goto	u2881
  3334  010A50  EF2C  F085         	goto	u2880
  3335  010A54                     u2881:
  3336  010A54  EF6A  F085         	goto	l4255
  3337  010A58                     u2880:
  3338  010A58                     
  3339                           ; BSR set to: 0
  3340                           ;application.c: 91:             {;application.c: 92:                 ccpCapturedFlag=0;
  3341  010A58  0E00               	movlw	0
  3342  010A5A  6FB3               	movwf	_ccpCapturedFlag& (0+255),b	;volatile
  3343  010A5C                     
  3344                           ; BSR set to: 0
  3345                           ;application.c: 94:                 if (ccpCapturedVal < 0x2600U)
  3346  010A5C  0E00               	movlw	0
  3347  010A5E  5DAF               	subwf	_ccpCapturedVal& (0+255),w,b	;volatile
  3348  010A60  0E26               	movlw	38
  3349  010A62  59B0               	subwfb	(_ccpCapturedVal+1)& (0+255),w,b	;volatile
  3350  010A64  B0D8               	btfsc	status,0,c
  3351  010A66  EF37  F085         	goto	u2891
  3352  010A6A  EF39  F085         	goto	u2890
  3353  010A6E                     u2891:
  3354  010A6E  EF56  F085         	goto	l4247
  3355  010A72                     u2890:
  3356  010A72                     
  3357                           ; BSR set to: 0
  3358                           ;application.c: 95:                 {;application.c: 96:                     ccpCaptured
      +                          ValueBuf[index]= ccpCapturedVal;
  3359  010A72  51B2               	movf	_index& (0+255),w,b
  3360  010A74  0D02               	mullw	2
  3361  010A76  0E00               	movlw	low _ccpCapturedValueBuf
  3362  010A78  24F3               	addwf	243,w,c
  3363  010A7A  6ED9               	movwf	fsr2l,c
  3364  010A7C  0E01               	movlw	high _ccpCapturedValueBuf
  3365  010A7E  20F4               	addwfc	prodh,w,c
  3366  010A80  6EDA               	movwf	fsr2h,c
  3367  010A82  C0AF  FFDE         	movff	_ccpCapturedVal,postinc2	;volatile
  3368  010A86  C0B0  FFDD         	movff	_ccpCapturedVal+1,postdec2	;volatile
  3369  010A8A                     
  3370                           ; BSR set to: 0
  3371                           ;application.c: 97:                     ccpCapturedVal=0;
  3372  010A8A  0E00               	movlw	0
  3373  010A8C  6FB0               	movwf	(_ccpCapturedVal+1)& (0+255),b	;volatile
  3374  010A8E  0E00               	movlw	0
  3375  010A90  6FAF               	movwf	_ccpCapturedVal& (0+255),b	;volatile
  3376  010A92                     
  3377                           ; BSR set to: 0
  3378                           ;application.c: 98:                     index++;
  3379  010A92  2BB2               	incf	_index& (0+255),f,b
  3380  010A94                     
  3381                           ; BSR set to: 0
  3382                           ;application.c: 99:                     if (index>=(uint8_t)32)
  3383  010A94  0E1F               	movlw	31
  3384  010A96  65B2               	cpfsgt	_index& (0+255),b
  3385  010A98  EF50  F085         	goto	u2901
  3386  010A9C  EF52  F085         	goto	u2900
  3387  010AA0                     u2901:
  3388  010AA0  EF19  F086         	goto	l819
  3389  010AA4                     u2900:
  3390  010AA4                     
  3391                           ; BSR set to: 0
  3392                           ;application.c: 100:                     {;application.c: 101:                         a
      +                          ppState = DECODE_CMD;
  3393  010AA4  0E03               	movlw	3
  3394  010AA6  6FB1               	movwf	ApplicationTask@appState& (0+255),b
  3395  010AA8  EF19  F086         	goto	l819
  3396  010AAC                     l4247:
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;application.c: 105:                 {;application.c: 107:                     DisableCa
      +                          pture();
  3400  010AAC  EC78  F08F         	call	_DisableCapture	;wreg free
  3401  010AB0                     
  3402                           ;application.c: 108:                     lcd_writeString(" Bit Time Error ", 0);
  3403  010AB0  0E54               	movlw	low STR_5
  3404  010AB2  6E1D               	movwf	lcd_writeString@string^0,c
  3405  010AB4  0EFF               	movlw	high STR_5
  3406  010AB6  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3407  010AB8  0E00               	movlw	0
  3408  010ABA  6E1F               	movwf	lcd_writeString@row^0,c
  3409  010ABC  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3410  010AC0                     
  3411                           ;application.c: 109:                     lcd_writeString("----------------", 1);
  3412  010AC0  0E87               	movlw	low STR_2
  3413  010AC2  6E1D               	movwf	lcd_writeString@string^0,c
  3414  010AC4  0EFF               	movlw	high STR_2
  3415  010AC6  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3416  010AC8  0E01               	movlw	1
  3417  010ACA  6E1F               	movwf	lcd_writeString@row^0,c
  3418  010ACC  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3419  010AD0  EFFF  F084         	goto	l4217
  3420  010AD4                     l4255:
  3421                           
  3422                           ; BSR set to: 0
  3423  010AD4  EC77  F090         	call	_TMR1_HasOverflowOccured	;wreg free
  3424  010AD8  0900               	iorlw	0
  3425  010ADA  B4D8               	btfsc	status,2,c
  3426  010ADC  EF72  F085         	goto	u2911
  3427  010AE0  EF74  F085         	goto	u2910
  3428  010AE4                     u2911:
  3429  010AE4  EF19  F086         	goto	l819
  3430  010AE8                     u2910:
  3431  010AE8                     
  3432                           ;application.c: 114:             {;application.c: 116:                 PIR4bits.TMR1IF=0
      +                          ;
  3433  010AE8  010E               	movlb	14	; () banked
  3434  010AEA  91C9               	bcf	201,0,b	;volatile
  3435  010AEC                     
  3436                           ; BSR set to: 14
  3437                           ;application.c: 117:                 DisableCapture();
  3438  010AEC  EC78  F08F         	call	_DisableCapture	;wreg free
  3439  010AF0                     
  3440                           ;application.c: 118:                 lcd_writeString("DataBit Wait Err", 0);
  3441  010AF0  0EED               	movlw	low STR_7
  3442  010AF2  6E1D               	movwf	lcd_writeString@string^0,c
  3443  010AF4  0EFF               	movlw	high STR_7
  3444  010AF6  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3445  010AF8  0E00               	movlw	0
  3446  010AFA  6E1F               	movwf	lcd_writeString@row^0,c
  3447  010AFC  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3448  010B00                     
  3449                           ;application.c: 119:                 lcd_writeString("----------------", 1);
  3450  010B00  0E87               	movlw	low STR_2
  3451  010B02  6E1D               	movwf	lcd_writeString@string^0,c
  3452  010B04  0EFF               	movlw	high STR_2
  3453  010B06  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3454  010B08  0E01               	movlw	1
  3455  010B0A  6E1F               	movwf	lcd_writeString@row^0,c
  3456  010B0C  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3457  010B10  EFFF  F084         	goto	l4217
  3458  010B14                     l4267:
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;application.c: 124:             cmd_status=DecodeCmd();
  3462  010B14  EC62  F088         	call	_DecodeCmd	;wreg free
  3463  010B18  0100               	movlb	0	; () banked
  3464  010B1A  6FA6               	movwf	ApplicationTask@cmd_status& (0+255),b
  3465  010B1C                     
  3466                           ; BSR set to: 0
  3467                           ;application.c: 126:             if (cmd_status==DATA_BIT_ERR)
  3468  010B1C  05A6               	decf	ApplicationTask@cmd_status& (0+255),w,b
  3469  010B1E  A4D8               	btfss	status,2,c
  3470  010B20  EF94  F085         	goto	u2921
  3471  010B24  EF96  F085         	goto	u2920
  3472  010B28                     u2921:
  3473  010B28  EFA8  F085         	goto	l4275
  3474  010B2C                     u2920:
  3475  010B2C                     
  3476                           ; BSR set to: 0
  3477                           ;application.c: 127:             {;application.c: 129:                 lcd_writeString("
      +                           Data Bit Error ", 0);
  3478  010B2C  0E65               	movlw	low STR_9
  3479  010B2E  6E1D               	movwf	lcd_writeString@string^0,c
  3480  010B30  0EFF               	movlw	high STR_9
  3481  010B32  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3482  010B34  0E00               	movlw	0
  3483  010B36  6E1F               	movwf	lcd_writeString@row^0,c
  3484  010B38  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3485                           
  3486                           ;application.c: 130:                 lcd_writeString("----------------", 1);
  3487  010B3C  0E87               	movlw	low STR_2
  3488  010B3E  6E1D               	movwf	lcd_writeString@string^0,c
  3489  010B40  0EFF               	movlw	high STR_2
  3490  010B42  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3491  010B44  0E01               	movlw	1
  3492  010B46  6E1F               	movwf	lcd_writeString@row^0,c
  3493  010B48  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3494  010B4C  EFFF  F084         	goto	l4217
  3495  010B50                     l4275:
  3496                           
  3497                           ; BSR set to: 0
  3498  010B50  0E02               	movlw	2
  3499  010B52  19A6               	xorwf	ApplicationTask@cmd_status& (0+255),w,b
  3500  010B54  A4D8               	btfss	status,2,c
  3501  010B56  EFAF  F085         	goto	u2931
  3502  010B5A  EFB1  F085         	goto	u2930
  3503  010B5E                     u2931:
  3504  010B5E  EFC3  F085         	goto	l4281
  3505  010B62                     u2930:
  3506  010B62                     
  3507                           ; BSR set to: 0
  3508                           ;application.c: 134:             {;application.c: 136:                 lcd_writeString("
      +                          RX Address Error", 0);
  3509  010B62  0ECB               	movlw	low STR_11
  3510  010B64  6E1D               	movwf	lcd_writeString@string^0,c
  3511  010B66  0EFF               	movlw	high STR_11
  3512  010B68  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3513  010B6A  0E00               	movlw	0
  3514  010B6C  6E1F               	movwf	lcd_writeString@row^0,c
  3515  010B6E  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3516                           
  3517                           ;application.c: 137:                 lcd_writeString("----------------", 1);
  3518  010B72  0E87               	movlw	low STR_2
  3519  010B74  6E1D               	movwf	lcd_writeString@string^0,c
  3520  010B76  0EFF               	movlw	high STR_2
  3521  010B78  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3522  010B7A  0E01               	movlw	1
  3523  010B7C  6E1F               	movwf	lcd_writeString@row^0,c
  3524  010B7E  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3525  010B82  EFFF  F084         	goto	l4217
  3526  010B86                     l4281:
  3527                           
  3528                           ; BSR set to: 0
  3529  010B86  0E03               	movlw	3
  3530  010B88  19A6               	xorwf	ApplicationTask@cmd_status& (0+255),w,b
  3531  010B8A  A4D8               	btfss	status,2,c
  3532  010B8C  EFCA  F085         	goto	u2941
  3533  010B90  EFCC  F085         	goto	u2940
  3534  010B94                     u2941:
  3535  010B94  EFDE  F085         	goto	l4287
  3536  010B98                     u2940:
  3537  010B98                     
  3538                           ; BSR set to: 0
  3539                           ;application.c: 141:             {;application.c: 143:                 lcd_writeString("
      +                          RX Command Error", 0);
  3540  010B98  0EBA               	movlw	low STR_13
  3541  010B9A  6E1D               	movwf	lcd_writeString@string^0,c
  3542  010B9C  0EFF               	movlw	high STR_13
  3543  010B9E  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3544  010BA0  0E00               	movlw	0
  3545  010BA2  6E1F               	movwf	lcd_writeString@row^0,c
  3546  010BA4  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3547                           
  3548                           ;application.c: 144:                 lcd_writeString("----------------", 1);
  3549  010BA8  0E87               	movlw	low STR_2
  3550  010BAA  6E1D               	movwf	lcd_writeString@string^0,c
  3551  010BAC  0EFF               	movlw	high STR_2
  3552  010BAE  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  3553  010BB0  0E01               	movlw	1
  3554  010BB2  6E1F               	movwf	lcd_writeString@row^0,c
  3555  010BB4  EC3C  F08B         	call	_lcd_writeString	;wreg free
  3556  010BB8  EFFF  F084         	goto	l4217
  3557  010BBC                     l4287:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;application.c: 148:             {;application.c: 150:                 appState = CONTRO
      +                          L_ACTION;
  3561  010BBC  0E04               	movlw	4
  3562  010BBE  6FB1               	movwf	ApplicationTask@appState& (0+255),b
  3563  010BC0  EF19  F086         	goto	l819
  3564  010BC4                     l4289:
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;application.c: 154:             rxCommand=Reverse(IR_data.command);
  3568  010BC4  51A8               	movf	(_IR_data+1)& (0+255),w,b	;volatile
  3569  010BC6  EC2B  F08C         	call	_Reverse
  3570  010BCA  0100               	movlb	0	; () banked
  3571  010BCC  6FA5               	movwf	ApplicationTask@rxCommand& (0+255),b
  3572  010BCE                     
  3573                           ; BSR set to: 0
  3574                           ;application.c: 155:             ControlAction(rxCommand);
  3575  010BCE  51A5               	movf	ApplicationTask@rxCommand& (0+255),w,b
  3576  010BD0  ECF9  F088         	call	_ControlAction
  3577  010BD4  EFFF  F084         	goto	l4217
  3578  010BD8                     l4295:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;application.c: 159:             Init4nextFrame();
  3582  010BD8  ECB4  F090         	call	_Init4nextFrame	;wreg free
  3583  010BDC                     l4297:
  3584                           
  3585                           ;application.c: 160:             appState = GET_EVENT;
  3586  010BDC  0E00               	movlw	0
  3587  010BDE  0100               	movlb	0	; () banked
  3588  010BE0  6FB1               	movwf	ApplicationTask@appState& (0+255),b
  3589                           
  3590                           ;application.c: 161:             break;
  3591  010BE2  EF19  F086         	goto	l819
  3592  010BE6                     l4303:
  3593  010BE6  0100               	movlb	0	; () banked
  3594  010BE8  51B1               	movf	ApplicationTask@appState& (0+255),w,b
  3595  010BEA  6FA3               	movwf	??_ApplicationTask& (0+255),b
  3596  010BEC  6BA4               	clrf	(??_ApplicationTask+1)& (0+255),b
  3597                           
  3598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3599                           ; Switch size 1, requested type "simple"
  3600                           ; Number of cases is 1, Range of values is 0 to 0
  3601                           ; switch strategies available:
  3602                           ; Name         Instructions Cycles
  3603                           ; simple_byte            4     3 (average)
  3604                           ;	Chosen strategy is simple_byte
  3605  010BEE  51A4               	movf	(??_ApplicationTask+1)& (0+255),w,b
  3606  010BF0  0A00               	xorlw	0	; case 0
  3607  010BF2  B4D8               	btfsc	status,2,c
  3608  010BF4  EFFE  F085         	goto	l4385
  3609  010BF8  EFEE  F085         	goto	l4297
  3610  010BFC                     l4385:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ; Switch size 1, requested type "simple"
  3614                           ; Number of cases is 6, Range of values is 0 to 5
  3615                           ; switch strategies available:
  3616                           ; Name         Instructions Cycles
  3617                           ; simple_byte           19    10 (average)
  3618                           ;	Chosen strategy is simple_byte
  3619  010BFC  51A3               	movf	??_ApplicationTask& (0+255),w,b
  3620  010BFE  0A00               	xorlw	0	; case 0
  3621  010C00  B4D8               	btfsc	status,2,c
  3622  010C02  EFBA  F084         	goto	l4193
  3623  010C06  0A01               	xorlw	1	; case 1
  3624  010C08  B4D8               	btfsc	status,2,c
  3625  010C0A  EFD4  F084         	goto	l4203
  3626  010C0E  0A03               	xorlw	3	; case 2
  3627  010C10  B4D8               	btfsc	status,2,c
  3628  010C12  EF24  F085         	goto	l4231
  3629  010C16  0A01               	xorlw	1	; case 3
  3630  010C18  B4D8               	btfsc	status,2,c
  3631  010C1A  EF8A  F085         	goto	l4267
  3632  010C1E  0A07               	xorlw	7	; case 4
  3633  010C20  B4D8               	btfsc	status,2,c
  3634  010C22  EFE2  F085         	goto	l4289
  3635  010C26  0A01               	xorlw	1	; case 5
  3636  010C28  B4D8               	btfsc	status,2,c
  3637  010C2A  EFEC  F085         	goto	l4295
  3638  010C2E  EFEE  F085         	goto	l4297
  3639  010C32                     l819:
  3640  010C32  0012               	return		;funcret
  3641  010C34                     __end_of_ApplicationTask:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _check4Start *****************
  3645 ;; Defined at:
  3646 ;;		line 315 in file "application.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      _Bool 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;Total ram usage:        0 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    4
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_ApplicationTask
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text25
  3675  011A20                     __ptext25:
  3676                           	callstack 0
  3677  011A20                     _check4Start:
  3678                           	callstack 25
  3679  011A20                     
  3680                           ;application.c: 317:     if((ccpCapturedVal < 0xDF00U) && (ccpCapturedVal > 0xB000U))
  3681  011A20  0E00               	movlw	0
  3682  011A22  0100               	movlb	0	; () banked
  3683  011A24  5DAF               	subwf	_ccpCapturedVal& (0+255),w,b	;volatile
  3684  011A26  0EDF               	movlw	223
  3685  011A28  59B0               	subwfb	(_ccpCapturedVal+1)& (0+255),w,b	;volatile
  3686  011A2A  B0D8               	btfsc	status,0,c
  3687  011A2C  EF1A  F08D         	goto	u2461
  3688  011A30  EF1C  F08D         	goto	u2460
  3689  011A34                     u2461:
  3690  011A34  EF2F  F08D         	goto	l3795
  3691  011A38                     u2460:
  3692  011A38                     
  3693                           ; BSR set to: 0
  3694  011A38  05AF               	decf	_ccpCapturedVal& (0+255),w,b	;volatile
  3695  011A3A  0EB0               	movlw	176
  3696  011A3C  59B0               	subwfb	(_ccpCapturedVal+1)& (0+255),w,b	;volatile
  3697  011A3E  A0D8               	btfss	status,0,c
  3698  011A40  EF24  F08D         	goto	u2471
  3699  011A44  EF26  F08D         	goto	u2470
  3700  011A48                     u2471:
  3701  011A48  EF2F  F08D         	goto	l3795
  3702  011A4C                     u2470:
  3703  011A4C                     
  3704                           ; BSR set to: 0
  3705                           ;application.c: 318:     {;application.c: 319:         ccpCapturedVal=0;
  3706  011A4C  0E00               	movlw	0
  3707  011A4E  6FB0               	movwf	(_ccpCapturedVal+1)& (0+255),b	;volatile
  3708  011A50  0E00               	movlw	0
  3709  011A52  6FAF               	movwf	_ccpCapturedVal& (0+255),b	;volatile
  3710                           
  3711                           ;application.c: 320:         index=0;
  3712  011A54  0E00               	movlw	0
  3713  011A56  6FB2               	movwf	_index& (0+255),b
  3714  011A58                     
  3715                           ; BSR set to: 0
  3716                           ;application.c: 321:         return 1;
  3717  011A58  0E01               	movlw	1
  3718  011A5A  EF30  F08D         	goto	l848
  3719  011A5E                     l3795:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;application.c: 324:     {;application.c: 325:         return 0;
  3723  011A5E  0E00               	movlw	0
  3724  011A60                     l848:
  3725                           
  3726                           ; BSR set to: 0
  3727  011A60  0012               	return		;funcret
  3728  011A62                     __end_of_check4Start:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _TMR1_StartTimer *****************
  3732 ;; Defined at:
  3733 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		None
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    4
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_ApplicationTask
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text26
  3762  01217C                     __ptext26:
  3763                           	callstack 0
  3764  01217C                     _TMR1_StartTimer:
  3765                           	callstack 25
  3766  01217C                     
  3767                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
  3768  01217C  80CE               	bsf	206,0,c	;volatile
  3769  01217E  0012               	return		;funcret
  3770  012180                     __end_of_TMR1_StartTimer:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _TMR1_HasOverflowOccured *****************
  3774 ;; Defined at:
  3775 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      _Bool 
  3782 ;; Registers used:
  3783 ;;		wreg
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    4
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_ApplicationTask
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text27
  3804  0120EE                     __ptext27:
  3805                           	callstack 0
  3806  0120EE                     _TMR1_HasOverflowOccured:
  3807                           	callstack 25
  3808  0120EE                     
  3809                           ;mcc_generated_files/tmr1.c: 160:     return(PIR4bits.TMR1IF);
  3810  0120EE  010E               	movlb	14	; () banked
  3811  0120F0  B1C9               	btfsc	201,0,b	;volatile
  3812  0120F2  EF7D  F090         	goto	u2441
  3813  0120F6  EF80  F090         	goto	u2440
  3814  0120FA                     u2441:
  3815  0120FA  0E01               	movlw	1
  3816  0120FC  EF81  F090         	goto	u2446
  3817  012100                     u2440:
  3818  012100  0E00               	movlw	0
  3819  012102                     u2446:
  3820  012102                     
  3821                           ; BSR set to: 14
  3822  012102  0012               	return		;funcret
  3823  012104                     __end_of_TMR1_HasOverflowOccured:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _Init4nextFrame *****************
  3827 ;; Defined at:
  3828 ;;		line 362 in file "application.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    6
  3849 ;; This function calls:
  3850 ;;		_DisableCapture
  3851 ;; This function is called by:
  3852 ;;		_ApplicationTask
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text28
  3857  012168                     __ptext28:
  3858                           	callstack 0
  3859  012168                     _Init4nextFrame:
  3860                           	callstack 23
  3861  012168                     
  3862                           ;application.c: 364:     DisableCapture();
  3863  012168  EC78  F08F         	call	_DisableCapture	;wreg free
  3864  01216C                     
  3865                           ;application.c: 365:     T2CONbits.TMR2ON = 1;
  3866  01216C  8EBC               	bsf	188,7,c	;volatile
  3867  01216E  0012               	return		;funcret
  3868  012170                     __end_of_Init4nextFrame:
  3869                           	callstack 0
  3870                           
  3871 ;; *************** function _DisableCapture *****************
  3872 ;; Defined at:
  3873 ;;		line 378 in file "application.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;Total ram usage:        0 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    5
  3894 ;; This function calls:
  3895 ;;		_TMR1_StopTimer
  3896 ;;		_TMR1_WriteTimer
  3897 ;; This function is called by:
  3898 ;;		_ApplicationTask
  3899 ;;		_Init4nextFrame
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text29
  3904  011EF0                     __ptext29:
  3905                           	callstack 0
  3906  011EF0                     _DisableCapture:
  3907                           	callstack 23
  3908  011EF0                     
  3909                           ;application.c: 380:     TMR1_StopTimer();
  3910  011EF0  ECC0  F090         	call	_TMR1_StopTimer	;wreg free
  3911  011EF4                     
  3912                           ;application.c: 381:     TMR1_WriteTimer((uint8_t)0);
  3913  011EF4  0E00               	movlw	0
  3914  011EF6  6E08               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  3915  011EF8  0E00               	movlw	0
  3916  011EFA  6E07               	movwf	TMR1_WriteTimer@timerVal^0,c
  3917  011EFC  EC8C  F08F         	call	_TMR1_WriteTimer	;wreg free
  3918  011F00                     
  3919                           ;application.c: 382:     PIR4bits.TMR1IF=0;
  3920  011F00  010E               	movlb	14	; () banked
  3921  011F02  91C9               	bcf	201,0,b	;volatile
  3922  011F04                     
  3923                           ; BSR set to: 14
  3924                           ;application.c: 383:     CCP1CONbits.CCP1EN = 0;
  3925  011F04  9EAB               	bcf	171,7,c	;volatile
  3926  011F06                     
  3927                           ; BSR set to: 14
  3928                           ;application.c: 384:     PIE6bits.CCP1IE = 0;
  3929  011F06  91C3               	bcf	195,0,b	;volatile
  3930                           
  3931                           ;application.c: 385:     ccpCapturedVal=0;
  3932  011F08  0E00               	movlw	0
  3933  011F0A  0100               	movlb	0	; () banked
  3934  011F0C  6FB0               	movwf	(_ccpCapturedVal+1)& (0+255),b	;volatile
  3935  011F0E  0E00               	movlw	0
  3936  011F10  6FAF               	movwf	_ccpCapturedVal& (0+255),b	;volatile
  3937                           
  3938                           ;application.c: 386:     index=0;
  3939  011F12  0E00               	movlw	0
  3940  011F14  6FB2               	movwf	_index& (0+255),b
  3941  011F16                     
  3942                           ; BSR set to: 0
  3943  011F16  0012               	return		;funcret
  3944  011F18                     __end_of_DisableCapture:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _TMR1_WriteTimer *****************
  3948 ;; Defined at:
  3949 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  timerVal        2    6[COMRAM] unsigned short 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;Total ram usage:        2 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    4
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_ApplicationTask
  3974 ;;		_DisableCapture
  3975 ;;		_TMR1_Reload
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text30
  3980  011F18                     __ptext30:
  3981                           	callstack 0
  3982  011F18                     _TMR1_WriteTimer:
  3983                           	callstack 25
  3984  011F18                     
  3985                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  3986  011F18  A4CE               	btfss	206,2,c	;volatile
  3987  011F1A  EF91  F08F         	goto	u2361
  3988  011F1E  EF93  F08F         	goto	u2360
  3989  011F22                     u2361:
  3990  011F22  EF9B  F08F         	goto	l3591
  3991  011F26                     u2360:
  3992  011F26                     
  3993                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  3994  011F26  90CE               	bcf	206,0,c	;volatile
  3995  011F28                     
  3996                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  3997  011F28  5008               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  3998  011F2A  6ECD               	movwf	205,c	;volatile
  3999  011F2C                     
  4000                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  4001  011F2C  C007  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  4002  011F30                     
  4003                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  4004  011F30  80CE               	bsf	206,0,c	;volatile
  4005                           
  4006                           ;mcc_generated_files/tmr1.c: 133:     }
  4007  011F32  EF9F  F08F         	goto	l405
  4008  011F36                     l3591:
  4009                           
  4010                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  4011  011F36  5008               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4012  011F38  6ECD               	movwf	205,c	;volatile
  4013  011F3A                     
  4014                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  4015  011F3A  C007  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  4016  011F3E                     l405:
  4017  011F3E  0012               	return		;funcret
  4018  011F40                     __end_of_TMR1_WriteTimer:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _TMR1_StopTimer *****************
  4022 ;; Defined at:
  4023 ;;		line 98 in file "mcc_generated_files/tmr1.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		None
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4041 ;;Total ram usage:        0 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    4
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_DisableCapture
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text31
  4052  012180                     __ptext31:
  4053                           	callstack 0
  4054  012180                     _TMR1_StopTimer:
  4055                           	callstack 23
  4056  012180                     
  4057                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
  4058  012180  90CE               	bcf	206,0,c	;volatile
  4059  012182  0012               	return		;funcret
  4060  012184                     __end_of_TMR1_StopTimer:
  4061                           	callstack 0
  4062                           
  4063 ;; *************** function _GetEvent *****************
  4064 ;; Defined at:
  4065 ;;		line 339 in file "application.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      _Bool 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;Total ram usage:        0 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    4
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_ApplicationTask
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text32
  4094  011FF0                     __ptext32:
  4095                           	callstack 0
  4096  011FF0                     _GetEvent:
  4097                           	callstack 25
  4098  011FF0                     
  4099                           ;application.c: 341:     if (fallingEdgeDetected)
  4100  011FF0  5057               	movf	_fallingEdgeDetected^0,w,c	;volatile
  4101  011FF2  B4D8               	btfsc	status,2,c
  4102  011FF4  EFFE  F08F         	goto	u2451
  4103  011FF8  EF00  F090         	goto	u2450
  4104  011FFC                     u2451:
  4105  011FFC  EF05  F090         	goto	l3779
  4106  012000                     u2450:
  4107  012000                     
  4108                           ;application.c: 342:     {;application.c: 343:         fallingEdgeDetected=0;
  4109  012000  0E00               	movlw	0
  4110  012002  6E57               	movwf	_fallingEdgeDetected^0,c	;volatile
  4111  012004                     
  4112                           ;application.c: 344:         return 1;
  4113  012004  0E01               	movlw	1
  4114  012006  EF06  F090         	goto	l853
  4115  01200A                     l3779:
  4116                           
  4117                           ;application.c: 347:     {;application.c: 348:         return 0;
  4118  01200A  0E00               	movlw	0
  4119  01200C                     l853:
  4120  01200C  0012               	return		;funcret
  4121  01200E                     __end_of_GetEvent:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _DecodeCmd *****************
  4125 ;; Defined at:
  4126 ;;		line 181 in file "application.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  count           1   13[COMRAM] unsigned char 
  4131 ;;  retVal          1   12[COMRAM] enum E13287
  4132 ;;  rxAddr          1   11[COMRAM] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      enum E13287
  4135 ;; Registers used:
  4136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4143 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4145 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4146 ;;Total ram usage:        5 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    5
  4149 ;; This function calls:
  4150 ;;		_Reverse
  4151 ;; This function is called by:
  4152 ;;		_ApplicationTask
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text33
  4157  0110C4                     __ptext33:
  4158                           	callstack 0
  4159  0110C4                     _DecodeCmd:
  4160                           	callstack 24
  4161  0110C4                     
  4162                           ;application.c: 183:     e_cmd_status retVal=CMD_DECODED;
  4163  0110C4  0E00               	movlw	0
  4164  0110C6  6E0D               	movwf	DecodeCmd@retVal^0,c
  4165                           
  4166                           ;application.c: 184:     uint8_t count=0;
  4167  0110C8  0E00               	movlw	0
  4168  0110CA  6E0E               	movwf	DecodeCmd@count^0,c
  4169                           
  4170                           ;application.c: 185:     uint8_t rxAddr;;application.c: 187:     for (count=0;count<(uin
      +                          t8_t)32;count++)
  4171  0110CC  0E00               	movlw	0
  4172  0110CE  6E0E               	movwf	DecodeCmd@count^0,c
  4173  0110D0                     l3805:
  4174                           
  4175                           ;application.c: 188:     {;application.c: 189:         if((ccpCapturedValueBuf[count] < 
      +                          (0x1194U + 0x0300U)) && (ccpCapturedValueBuf[count] > (0x1194U - 0x0300U)))
  4176  0110D0  500E               	movf	DecodeCmd@count^0,w,c
  4177  0110D2  0D02               	mullw	2
  4178  0110D4  0E00               	movlw	low _ccpCapturedValueBuf
  4179  0110D6  24F3               	addwf	243,w,c
  4180  0110D8  6ED9               	movwf	fsr2l,c
  4181  0110DA  0E01               	movlw	high _ccpCapturedValueBuf
  4182  0110DC  20F4               	addwfc	prodh,w,c
  4183  0110DE  6EDA               	movwf	fsr2h,c
  4184  0110E0  0E94               	movlw	148
  4185  0110E2  5CDE               	subwf	postinc2,w,c
  4186  0110E4  0E14               	movlw	20
  4187  0110E6  58DE               	subwfb	postinc2,w,c
  4188  0110E8  B0D8               	btfsc	status,0,c
  4189  0110EA  EF79  F088         	goto	u2481
  4190  0110EE  EF7B  F088         	goto	u2480
  4191  0110F2                     u2481:
  4192  0110F2  EF96  F088         	goto	l3811
  4193  0110F6                     u2480:
  4194  0110F6  500E               	movf	DecodeCmd@count^0,w,c
  4195  0110F8  0D02               	mullw	2
  4196  0110FA  0E00               	movlw	low _ccpCapturedValueBuf
  4197  0110FC  24F3               	addwf	243,w,c
  4198  0110FE  6ED9               	movwf	fsr2l,c
  4199  011100  0E01               	movlw	high _ccpCapturedValueBuf
  4200  011102  20F4               	addwfc	prodh,w,c
  4201  011104  6EDA               	movwf	fsr2h,c
  4202  011106  0E95               	movlw	149
  4203  011108  5CDE               	subwf	postinc2,w,c
  4204  01110A  0E0E               	movlw	14
  4205  01110C  58DE               	subwfb	postinc2,w,c
  4206  01110E  A0D8               	btfss	status,0,c
  4207  011110  EF8C  F088         	goto	u2491
  4208  011114  EF8E  F088         	goto	u2490
  4209  011118                     u2491:
  4210  011118  EF96  F088         	goto	l3811
  4211  01111C                     u2490:
  4212  01111C                     
  4213                           ;application.c: 190:         {;application.c: 191:             IR_data.data <<= 1;
  4214  01111C  0100               	movlb	0	; () banked
  4215  01111E  90D8               	bcf	status,0,c
  4216  011120  37A7               	rlcf	_IR_data& (0+255),f,b	;volatile
  4217  011122  37A8               	rlcf	(_IR_data+1)& (0+255),f,b	;volatile
  4218  011124  37A9               	rlcf	(_IR_data+2)& (0+255),f,b	;volatile
  4219  011126  37AA               	rlcf	(_IR_data+3)& (0+255),f,b	;volatile
  4220                           
  4221                           ;application.c: 192:         }
  4222  011128  EFC7  F088         	goto	l3819
  4223  01112C                     l3811:
  4224  01112C  500E               	movf	DecodeCmd@count^0,w,c
  4225  01112E  0D02               	mullw	2
  4226  011130  0E00               	movlw	low _ccpCapturedValueBuf
  4227  011132  24F3               	addwf	243,w,c
  4228  011134  6ED9               	movwf	fsr2l,c
  4229  011136  0E01               	movlw	high _ccpCapturedValueBuf
  4230  011138  20F4               	addwfc	prodh,w,c
  4231  01113A  6EDA               	movwf	fsr2h,c
  4232  01113C  0E28               	movlw	40
  4233  01113E  5CDE               	subwf	postinc2,w,c
  4234  011140  0E26               	movlw	38
  4235  011142  58DE               	subwfb	postinc2,w,c
  4236  011144  B0D8               	btfsc	status,0,c
  4237  011146  EFA7  F088         	goto	u2501
  4238  01114A  EFA9  F088         	goto	u2500
  4239  01114E                     u2501:
  4240  01114E  EFC5  F088         	goto	l3817
  4241  011152                     u2500:
  4242  011152  500E               	movf	DecodeCmd@count^0,w,c
  4243  011154  0D02               	mullw	2
  4244  011156  0E00               	movlw	low _ccpCapturedValueBuf
  4245  011158  24F3               	addwf	243,w,c
  4246  01115A  6ED9               	movwf	fsr2l,c
  4247  01115C  0E01               	movlw	high _ccpCapturedValueBuf
  4248  01115E  20F4               	addwfc	prodh,w,c
  4249  011160  6EDA               	movwf	fsr2h,c
  4250  011162  0E29               	movlw	41
  4251  011164  5CDE               	subwf	postinc2,w,c
  4252  011166  0E20               	movlw	32
  4253  011168  58DE               	subwfb	postinc2,w,c
  4254  01116A  A0D8               	btfss	status,0,c
  4255  01116C  EFBA  F088         	goto	u2511
  4256  011170  EFBC  F088         	goto	u2510
  4257  011174                     u2511:
  4258  011174  EFC5  F088         	goto	l3817
  4259  011178                     u2510:
  4260  011178                     
  4261                           ;application.c: 194:         {;application.c: 195:             IR_data.data <<= 1;
  4262  011178  0100               	movlb	0	; () banked
  4263  01117A  90D8               	bcf	status,0,c
  4264  01117C  37A7               	rlcf	_IR_data& (0+255),f,b	;volatile
  4265  01117E  37A8               	rlcf	(_IR_data+1)& (0+255),f,b	;volatile
  4266  011180  37A9               	rlcf	(_IR_data+2)& (0+255),f,b	;volatile
  4267  011182  37AA               	rlcf	(_IR_data+3)& (0+255),f,b	;volatile
  4268                           
  4269                           ;application.c: 196:             IR_data.data |= 1;
  4270  011184  81A7               	bsf	_IR_data& (0+255),0,b	;volatile
  4271                           
  4272                           ;application.c: 197:         }
  4273  011186  EFC7  F088         	goto	l3819
  4274  01118A                     l3817:
  4275                           
  4276                           ;application.c: 199:         {;application.c: 201:             retVal= DATA_BIT_ERR;
  4277  01118A  0E01               	movlw	1
  4278  01118C  6E0D               	movwf	DecodeCmd@retVal^0,c
  4279  01118E                     l3819:
  4280                           
  4281                           ;application.c: 203:     }
  4282  01118E  2A0E               	incf	DecodeCmd@count^0,f,c
  4283  011190  0E1F               	movlw	31
  4284  011192  640E               	cpfsgt	DecodeCmd@count^0,c
  4285  011194  EFCE  F088         	goto	u2521
  4286  011198  EFD0  F088         	goto	u2520
  4287  01119C                     u2521:
  4288  01119C  EF68  F088         	goto	l3805
  4289  0111A0                     u2520:
  4290  0111A0                     
  4291                           ;application.c: 206:     rxAddr=Reverse((uint8_t)IR_data.address);
  4292  0111A0  0100               	movlb	0	; () banked
  4293  0111A2  51AA               	movf	(_IR_data+3)& (0+255),w,b	;volatile
  4294  0111A4  EC2B  F08C         	call	_Reverse
  4295  0111A8  6E0C               	movwf	DecodeCmd@rxAddr^0,c
  4296  0111AA                     
  4297                           ;application.c: 207:     if(((uint8_t)IR_data.address != (uint8_t)~IR_data.nAddress) ||(
      +                           rxAddr != (uint8_t)0xAA) )
  4298  0111AA  0100               	movlb	0	; () banked
  4299  0111AC  51A9               	movf	(_IR_data+2)& (0+255),w,b	;volatile
  4300  0111AE  0AFF               	xorlw	255
  4301  0111B0  19AA               	xorwf	(_IR_data+3)& (0+255),w,b	;volatile
  4302  0111B2  A4D8               	btfss	status,2,c
  4303  0111B4  EFDE  F088         	goto	u2531
  4304  0111B8  EFE0  F088         	goto	u2530
  4305  0111BC                     u2531:
  4306  0111BC  EFE9  F088         	goto	l3829
  4307  0111C0                     u2530:
  4308  0111C0                     
  4309                           ; BSR set to: 0
  4310  0111C0  0EAA               	movlw	170
  4311  0111C2  180C               	xorwf	DecodeCmd@rxAddr^0,w,c
  4312  0111C4  B4D8               	btfsc	status,2,c
  4313  0111C6  EFE7  F088         	goto	u2541
  4314  0111CA  EFE9  F088         	goto	u2540
  4315  0111CE                     u2541:
  4316  0111CE  EFEB  F088         	goto	l3831
  4317  0111D2                     u2540:
  4318  0111D2                     l3829:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;application.c: 208:     {;application.c: 209:         retVal= RX_ADDR_ERR;
  4322  0111D2  0E02               	movlw	2
  4323  0111D4  6E0D               	movwf	DecodeCmd@retVal^0,c
  4324  0111D6                     l3831:
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;application.c: 212:     if((uint8_t)IR_data.command != (uint8_t)~IR_data.nCommand)
  4328  0111D6  51A7               	movf	_IR_data& (0+255),w,b	;volatile
  4329  0111D8  0AFF               	xorlw	255
  4330  0111DA  19A8               	xorwf	(_IR_data+1)& (0+255),w,b	;volatile
  4331  0111DC  B4D8               	btfsc	status,2,c
  4332  0111DE  EFF3  F088         	goto	u2551
  4333  0111E2  EFF5  F088         	goto	u2550
  4334  0111E6                     u2551:
  4335  0111E6  EFF7  F088         	goto	l831
  4336  0111EA                     u2550:
  4337  0111EA                     
  4338                           ; BSR set to: 0
  4339                           ;application.c: 213:     {;application.c: 214:         retVal= RX_CMD_ERR;
  4340  0111EA  0E03               	movlw	3
  4341  0111EC  6E0D               	movwf	DecodeCmd@retVal^0,c
  4342  0111EE                     l831:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;application.c: 217:     return retVal;
  4346  0111EE  500D               	movf	DecodeCmd@retVal^0,w,c
  4347  0111F0                     
  4348                           ; BSR set to: 0
  4349  0111F0  0012               	return		;funcret
  4350  0111F2                     __end_of_DecodeCmd:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _Reverse *****************
  4354 ;; Defined at:
  4355 ;;		line 279 in file "application.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  byteVar         1    wreg     unsigned char 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  byteVar         1    8[COMRAM] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      unsigned char 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4373 ;;Total ram usage:        3 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    4
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_ApplicationTask
  4380 ;;		_DecodeCmd
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text34
  4385  011856                     __ptext34:
  4386                           	callstack 0
  4387  011856                     _Reverse:
  4388                           	callstack 25
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;incstack = 0
  4392                           ;Reverse@byteVar stored from wreg
  4393  011856  6E09               	movwf	Reverse@byteVar^0,c
  4394  011858                     
  4395                           ;application.c: 279: static uint8_t Reverse(uint8_t byteVar);application.c: 280: {;appli
      +                          cation.c: 281:    byteVar = (byteVar & (uint8_t)0xF0) >> 4 | (byteVar & (uint8_t)0x0F) <
      +                          < 4;
  4396  011858  C009  F007         	movff	Reverse@byteVar,??_Reverse
  4397  01185C  0E0F               	movlw	15
  4398  01185E  1607               	andwf	??_Reverse^0,f,c
  4399  011860  3A07               	swapf	??_Reverse^0,f,c
  4400  011862  0EF0               	movlw	240
  4401  011864  1607               	andwf	??_Reverse^0,f,c
  4402  011866  3809               	swapf	Reverse@byteVar^0,w,c
  4403  011868  0B0F               	andlw	15
  4404  01186A  0B0F               	andlw	15
  4405  01186C  1007               	iorwf	??_Reverse^0,w,c
  4406  01186E  6E09               	movwf	Reverse@byteVar^0,c
  4407                           
  4408                           ;application.c: 282:    byteVar = (byteVar & (uint8_t)0xCC) >> 2 | (byteVar & (uint8_t)0
      +                          x33) << 2;
  4409  011870  C009  F007         	movff	Reverse@byteVar,??_Reverse
  4410  011874  0E33               	movlw	51
  4411  011876  1607               	andwf	??_Reverse^0,f,c
  4412  011878  90D8               	bcf	status,0,c
  4413  01187A  3607               	rlcf	??_Reverse^0,f,c
  4414  01187C  90D8               	bcf	status,0,c
  4415  01187E  3607               	rlcf	??_Reverse^0,f,c
  4416  011880  4009               	rrncf	Reverse@byteVar^0,w,c
  4417  011882  42E8               	rrncf	wreg,f,c
  4418  011884  0B3F               	andlw	63
  4419  011886  0B33               	andlw	51
  4420  011888  1007               	iorwf	??_Reverse^0,w,c
  4421  01188A  6E09               	movwf	Reverse@byteVar^0,c
  4422                           
  4423                           ;application.c: 283:    byteVar = (byteVar & (uint8_t)0xAA) >> 1 | (byteVar & (uint8_t)0
      +                          x55) << 1;
  4424  01188C  C009  F007         	movff	Reverse@byteVar,??_Reverse
  4425  011890  0E55               	movlw	85
  4426  011892  1607               	andwf	??_Reverse^0,f,c
  4427  011894  90D8               	bcf	status,0,c
  4428  011896  3407               	rlcf	??_Reverse^0,w,c
  4429  011898  6E08               	movwf	(??_Reverse+1)^0,c
  4430  01189A  90D8               	bcf	status,0,c
  4431  01189C  3009               	rrcf	Reverse@byteVar^0,w,c
  4432  01189E  0B55               	andlw	85
  4433  0118A0  1008               	iorwf	(??_Reverse+1)^0,w,c
  4434  0118A2  6E09               	movwf	Reverse@byteVar^0,c
  4435  0118A4                     
  4436                           ;application.c: 284:    return byteVar;
  4437  0118A4  5009               	movf	Reverse@byteVar^0,w,c
  4438  0118A6  0012               	return		;funcret
  4439  0118A8                     __end_of_Reverse:
  4440                           	callstack 0
  4441                           
  4442 ;; *************** function _ControlAction *****************
  4443 ;; Defined at:
  4444 ;;		line 238 in file "application.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  cmd             1    wreg     unsigned char 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  cmd             1   66[BANK0 ] unsigned char 
  4449 ;;  displayStrin   17   47[BANK0 ] unsigned char [17]
  4450 ;;  duty            1   65[BANK0 ] unsigned char 
  4451 ;;  dutyCycleVal    1   64[BANK0 ] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4462 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4463 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4464 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4465 ;;Total ram usage:       24 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:   12
  4468 ;; This function calls:
  4469 ;;		_PWM3_LoadDutyValue
  4470 ;;		_lcd_writeString
  4471 ;;		_sprintf
  4472 ;; This function is called by:
  4473 ;;		_ApplicationTask
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text35
  4478  0111F2                     __ptext35:
  4479                           	callstack 0
  4480  0111F2                     _ControlAction:
  4481                           	callstack 17
  4482                           
  4483                           ;incstack = 0
  4484                           ;ControlAction@cmd stored from wreg
  4485  0111F2  0100               	movlb	0	; () banked
  4486  0111F4  6FA2               	movwf	ControlAction@cmd& (0+255),b
  4487  0111F6                     
  4488                           ;application.c: 242:     uint8_t duty = 0;
  4489  0111F6  0E00               	movlw	0
  4490  0111F8  0100               	movlb	0	; () banked
  4491  0111FA  6FA1               	movwf	ControlAction@duty& (0+255),b
  4492  0111FC                     
  4493                           ; BSR set to: 0
  4494                           ;application.c: 244:     dutyCycleValIndex = cmd & (uint8_t)0x0F;
  4495  0111FC  51A2               	movf	ControlAction@cmd& (0+255),w,b
  4496  0111FE  0B0F               	andlw	15
  4497  011200  6FA0               	movwf	ControlAction@dutyCycleValIndex& (0+255),b
  4498  011202                     
  4499                           ; BSR set to: 0
  4500                           ;application.c: 245:     duty = dutyCycleValArr[dutyCycleValIndex - 1];
  4501  011202  0EFF               	movlw	255
  4502  011204  6F8B               	movwf	??_ControlAction& (0+255),b
  4503  011206  0EFF               	movlw	255
  4504  011208  6F8C               	movwf	(??_ControlAction+1)& (0+255),b
  4505  01120A  51A0               	movf	ControlAction@dutyCycleValIndex& (0+255),w,b
  4506  01120C  6F8D               	movwf	(??_ControlAction+2)& (0+255),b
  4507  01120E  6B8E               	clrf	(??_ControlAction+3)& (0+255),b
  4508  011210  518B               	movf	??_ControlAction& (0+255),w,b
  4509  011212  278D               	addwf	(??_ControlAction+2)& (0+255),f,b
  4510  011214  518C               	movf	(??_ControlAction+1)& (0+255),w,b
  4511  011216  238E               	addwfc	(??_ControlAction+3)& (0+255),f,b
  4512  011218  0E0F               	movlw	low _dutyCycleValArr
  4513  01121A  258D               	addwf	(??_ControlAction+2)& (0+255),w,b
  4514  01121C  6EF6               	movwf	tblptrl,c
  4515  01121E  0EFF               	movlw	high _dutyCycleValArr
  4516  011220  218E               	addwfc	(??_ControlAction+3)& (0+255),w,b
  4517  011222  6EF7               	movwf	tblptrh,c
  4518  011224                     	if	1	;There are 3 active tblptr bytes
  4519  011224  6AF8               	clrf	tblptru,c
  4520  011226  0E00               	movlw	low (__mediumconst shr (0+16))
  4521  011228  22F8               	addwfc	tblptru,f,c
  4522  01122A                     	endif
  4523  01122A  0008               	tblrd		*
  4524  01122C  CFF5 F0A1          	movff	tablat,ControlAction@duty
  4525  011230                     
  4526                           ; BSR set to: 0
  4527                           ;application.c: 247:     if (dutyCycleValIndex < ((uint8_t)8 + 1))
  4528  011230  0E09               	movlw	9
  4529  011232  61A0               	cpfslt	ControlAction@dutyCycleValIndex& (0+255),b
  4530  011234  EF1E  F089         	goto	u2821
  4531  011238  EF20  F089         	goto	u2820
  4532  01123C                     u2821:
  4533  01123C  EF61  F089         	goto	l4189
  4534  011240                     u2820:
  4535  011240                     
  4536                           ; BSR set to: 0
  4537                           ;application.c: 248:     {;application.c: 249:         if (cmd & (uint8_t)0xF0)
  4538  011240  C0A2  F08B         	movff	ControlAction@cmd,??_ControlAction
  4539  011244  0EF0               	movlw	240
  4540  011246  178B               	andwf	??_ControlAction& (0+255),f,b
  4541  011248  B4D8               	btfsc	status,2,c
  4542  01124A  EF29  F089         	goto	u2831
  4543  01124E  EF2B  F089         	goto	u2830
  4544  011252                     u2831:
  4545  011252  EF33  F089         	goto	l4181
  4546  011256                     u2830:
  4547  011256                     
  4548                           ; BSR set to: 0
  4549                           ;application.c: 250:         {;application.c: 251:             PWM3_LoadDutyValue(duty *
      +                           10);
  4550  011256  51A1               	movf	ControlAction@duty& (0+255),w,b
  4551  011258  0D0A               	mullw	10
  4552  01125A  CFF3 F007          	movff	prodl,PWM3_LoadDutyValue@dutyValue
  4553  01125E  CFF4 F008          	movff	prodh,PWM3_LoadDutyValue@dutyValue+1
  4554  011262  EC88  F08E         	call	_PWM3_LoadDutyValue	;wreg free
  4555  011266                     l4181:
  4556                           
  4557                           ;application.c: 254:         sprintf(displayString1, "Cmd Received =%2x", (cmd));
  4558  011266  0E8F               	movlw	low ControlAction@displayString1
  4559  011268  0100               	movlb	0	; () banked
  4560  01126A  6F7B               	movwf	sprintf@s& (0+255),b
  4561  01126C  0E00               	movlw	high ControlAction@displayString1
  4562  01126E  6F7C               	movwf	(sprintf@s+1)& (0+255),b
  4563  011270  0E31               	movlw	low STR_15
  4564  011272  6F7D               	movwf	sprintf@fmt& (0+255),b
  4565  011274  0EFF               	movlw	high STR_15
  4566  011276  6F7E               	movwf	(sprintf@fmt+1)& (0+255),b
  4567  011278  C0A2  F07F         	movff	ControlAction@cmd,?_sprintf+4
  4568  01127C  6B80               	clrf	(?_sprintf+5)& (0+255),b
  4569  01127E  EC54  F08C         	call	_sprintf	;wreg free
  4570  011282                     
  4571                           ;application.c: 255:         lcd_writeString(displayString1, 0);
  4572  011282  0E8F               	movlw	low ControlAction@displayString1
  4573  011284  6E1D               	movwf	lcd_writeString@string^0,c
  4574  011286  0E00               	movlw	high ControlAction@displayString1
  4575  011288  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  4576  01128A  0E00               	movlw	0
  4577  01128C  6E1F               	movwf	lcd_writeString@row^0,c
  4578  01128E  EC3C  F08B         	call	_lcd_writeString	;wreg free
  4579  011292                     
  4580                           ;application.c: 256:         sprintf(displayString1, "DIM LED  : %3d %%" ,duty);
  4581  011292  0E8F               	movlw	low ControlAction@displayString1
  4582  011294  0100               	movlb	0	; () banked
  4583  011296  6F7B               	movwf	sprintf@s& (0+255),b
  4584  011298  0E00               	movlw	high ControlAction@displayString1
  4585  01129A  6F7C               	movwf	(sprintf@s+1)& (0+255),b
  4586  01129C  0E1F               	movlw	low STR_16
  4587  01129E  6F7D               	movwf	sprintf@fmt& (0+255),b
  4588  0112A0  0EFF               	movlw	high STR_16
  4589  0112A2  6F7E               	movwf	(sprintf@fmt+1)& (0+255),b
  4590  0112A4  C0A1  F07F         	movff	ControlAction@duty,?_sprintf+4
  4591  0112A8  6B80               	clrf	(?_sprintf+5)& (0+255),b
  4592  0112AA  EC54  F08C         	call	_sprintf	;wreg free
  4593  0112AE                     
  4594                           ;application.c: 257:         lcd_writeString(displayString1, 1);
  4595  0112AE  0E8F               	movlw	low ControlAction@displayString1
  4596  0112B0  6E1D               	movwf	lcd_writeString@string^0,c
  4597  0112B2  0E00               	movlw	high ControlAction@displayString1
  4598  0112B4  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  4599  0112B6  0E01               	movlw	1
  4600  0112B8  6E1F               	movwf	lcd_writeString@row^0,c
  4601  0112BA  EC3C  F08B         	call	_lcd_writeString	;wreg free
  4602                           
  4603                           ;application.c: 258:     }
  4604  0112BE  EF71  F089         	goto	l838
  4605  0112C2                     l4189:
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;application.c: 260:     {;application.c: 262:         lcd_writeString("Received Command
      +                          ", 0);
  4609  0112C2  0EA9               	movlw	low STR_17
  4610  0112C4  6E1D               	movwf	lcd_writeString@string^0,c
  4611  0112C6  0EFF               	movlw	high STR_17
  4612  0112C8  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  4613  0112CA  0E00               	movlw	0
  4614  0112CC  6E1F               	movwf	lcd_writeString@row^0,c
  4615  0112CE  EC3C  F08B         	call	_lcd_writeString	;wreg free
  4616                           
  4617                           ;application.c: 263:         lcd_writeString("Not Implemented!", 1);
  4618  0112D2  0E76               	movlw	low STR_18
  4619  0112D4  6E1D               	movwf	lcd_writeString@string^0,c
  4620  0112D6  0EFF               	movlw	high STR_18
  4621  0112D8  6E1E               	movwf	(lcd_writeString@string+1)^0,c
  4622  0112DA  0E01               	movlw	1
  4623  0112DC  6E1F               	movwf	lcd_writeString@row^0,c
  4624  0112DE  EC3C  F08B         	call	_lcd_writeString	;wreg free
  4625  0112E2                     l838:
  4626  0112E2  0012               	return		;funcret
  4627  0112E4                     __end_of_ControlAction:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _sprintf *****************
  4631 ;; Defined at:
  4632 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  s               2   27[BANK0 ] PTR unsigned char 
  4635 ;;		 -> ControlAction@displayString1(17), 
  4636 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  4637 ;;		 -> STR_16(18), STR_15(18), 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  f               6   37[BANK0 ] struct _IO_FILE
  4640 ;;  ap              2   35[BANK0 ] PTR void [1]
  4641 ;;		 -> ?_sprintf(2), 
  4642 ;;  ret             2    0        int 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  2   27[BANK0 ] int 
  4645 ;; Registers used:
  4646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4652 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4653 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4655 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4656 ;;Total ram usage:       16 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:   11
  4659 ;; This function calls:
  4660 ;;		_vfprintf
  4661 ;; This function is called by:
  4662 ;;		_ControlAction
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text36
  4667  0118A8                     __ptext36:
  4668                           	callstack 0
  4669  0118A8                     _sprintf:
  4670                           	callstack 17
  4671  0118A8  0E7F               	movlw	low (?_sprintf+4)
  4672  0118AA  0100               	movlb	0	; () banked
  4673  0118AC  6F83               	movwf	sprintf@ap& (0+255),b
  4674  0118AE  0E00               	movlw	high (?_sprintf+4)
  4675  0118B0  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  4676  0118B2  C07B  F085         	movff	sprintf@s,sprintf@f
  4677  0118B6  C07C  F086         	movff	sprintf@s+1,sprintf@f+1
  4678  0118BA                     
  4679                           ; BSR set to: 0
  4680  0118BA  0E00               	movlw	0
  4681  0118BC  6F88               	movwf	(sprintf@f+3)& (0+255),b
  4682  0118BE  0E00               	movlw	0
  4683  0118C0  6F87               	movwf	(sprintf@f+2)& (0+255),b
  4684  0118C2                     
  4685                           ; BSR set to: 0
  4686  0118C2  0E00               	movlw	0
  4687  0118C4  6F8A               	movwf	(sprintf@f+5)& (0+255),b
  4688  0118C6  0E00               	movlw	0
  4689  0118C8  6F89               	movwf	(sprintf@f+4)& (0+255),b
  4690  0118CA                     
  4691                           ; BSR set to: 0
  4692  0118CA  0E85               	movlw	low sprintf@f
  4693  0118CC  6F73               	movwf	vfprintf@fp& (0+255),b
  4694  0118CE  0E00               	movlw	high sprintf@f
  4695  0118D0  6F74               	movwf	(vfprintf@fp+1)& (0+255),b
  4696  0118D2  C07D  F075         	movff	sprintf@fmt,vfprintf@fmt
  4697  0118D6  C07E  F076         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4698  0118DA  0E83               	movlw	low sprintf@ap
  4699  0118DC  6F77               	movwf	vfprintf@ap& (0+255),b
  4700  0118DE  0E00               	movlw	high sprintf@ap
  4701  0118E0  6F78               	movwf	(vfprintf@ap+1)& (0+255),b
  4702  0118E2  ECC9  F08B         	call	_vfprintf	;wreg free
  4703  0118E6  0100               	movlb	0	; () banked
  4704  0118E8  5187               	movf	(sprintf@f+2)& (0+255),w,b
  4705  0118EA  257B               	addwf	sprintf@s& (0+255),w,b
  4706  0118EC  6ED9               	movwf	fsr2l,c
  4707  0118EE  5188               	movf	(sprintf@f+3)& (0+255),w,b
  4708  0118F0  217C               	addwfc	(sprintf@s+1)& (0+255),w,b
  4709  0118F2  6EDA               	movwf	fsr2h,c
  4710  0118F4  0E00               	movlw	0
  4711  0118F6  6EDF               	movwf	indf2,c
  4712  0118F8                     
  4713                           ; BSR set to: 0
  4714  0118F8  0012               	return		;funcret
  4715  0118FA                     __end_of_sprintf:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function _vfprintf *****************
  4719 ;; Defined at:
  4720 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  fp              2   19[BANK0 ] PTR struct _IO_FILE
  4723 ;;		 -> sprintf@f(6), 
  4724 ;;  fmt             2   21[BANK0 ] PTR const unsigned char 
  4725 ;;		 -> STR_16(18), STR_15(18), 
  4726 ;;  ap              2   23[BANK0 ] PTR PTR void 
  4727 ;;		 -> sprintf@ap(2), 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  cfmt            2   25[BANK0 ] PTR unsigned char 
  4730 ;;		 -> STR_16(18), STR_15(18), 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  2   19[BANK0 ] int 
  4733 ;; Registers used:
  4734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4740 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4741 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4743 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4744 ;;Total ram usage:        8 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:   10
  4747 ;; This function calls:
  4748 ;;		_vfpfcnvrt
  4749 ;; This function is called by:
  4750 ;;		_sprintf
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text37
  4755  011792                     __ptext37:
  4756                           	callstack 0
  4757  011792                     _vfprintf:
  4758                           	callstack 17
  4759  011792                     
  4760                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4761  011792  C075  F079         	movff	vfprintf@fmt,vfprintf@cfmt
  4762  011796  C076  F07A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4763  01179A                     
  4764                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4765  01179A  0E00               	movlw	0
  4766  01179C  0100               	movlb	0	; () banked
  4767  01179E  6FAC               	movwf	(_nout+1)& (0+255),b
  4768  0117A0  0E00               	movlw	0
  4769  0117A2  6FAB               	movwf	_nout& (0+255),b
  4770                           
  4771                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4772  0117A4  EFE7  F08B         	goto	l4155
  4773  0117A8                     l4153:
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4777  0117A8  C073  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  4778  0117AC  C074  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4779  0117B0  0E79               	movlw	low vfprintf@cfmt
  4780  0117B2  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  4781  0117B4  0E00               	movlw	high vfprintf@cfmt
  4782  0117B6  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4783  0117B8  C077  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  4784  0117BC  C078  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4785  0117C0  EC00  F080         	call	_vfpfcnvrt	;wreg free
  4786  0117C4  5049               	movf	?_vfpfcnvrt^0,w,c
  4787  0117C6  0100               	movlb	0	; () banked
  4788  0117C8  27AB               	addwf	_nout& (0+255),f,b
  4789  0117CA  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  4790  0117CC  23AC               	addwfc	(_nout+1)& (0+255),f,b
  4791  0117CE                     l4155:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4795  0117CE  C079  FFF6         	movff	vfprintf@cfmt,tblptrl
  4796  0117D2  C07A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4797  0117D6                     	if	0	;tblptru may be non-zero
  4798  0117D6                     	endif
  4799  0117D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4800  0117D6  0E00               	movlw	low (__mediumconst shr (0+16))
  4801  0117D8  6EF8               	movwf	tblptru,c
  4802  0117DA                     	endif
  4803  0117DA  0008               	tblrd		*
  4804  0117DC  50F5               	movf	tablat,w,c
  4805  0117DE  0900               	iorlw	0
  4806  0117E0  A4D8               	btfss	status,2,c
  4807  0117E2  EFF5  F08B         	goto	u2811
  4808  0117E6  EFF7  F08B         	goto	u2810
  4809  0117EA                     u2811:
  4810  0117EA  EFD4  F08B         	goto	l4153
  4811  0117EE                     u2810:
  4812  0117EE                     
  4813                           ; BSR set to: 0
  4814                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4815  0117EE  C0AB  F073         	movff	_nout,?_vfprintf
  4816  0117F2  C0AC  F074         	movff	_nout+1,?_vfprintf+1
  4817  0117F6                     
  4818                           ; BSR set to: 0
  4819  0117F6  0012               	return		;funcret
  4820  0117F8                     __end_of_vfprintf:
  4821                           	callstack 0
  4822                           
  4823 ;; *************** function _vfpfcnvrt *****************
  4824 ;; Defined at:
  4825 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  4828 ;;		 -> sprintf@f(6), 
  4829 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  4830 ;;		 -> vfprintf@cfmt(2), 
  4831 ;;  ap              2   76[COMRAM] PTR PTR void 
  4832 ;;		 -> sprintf@ap(2), 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  llu             8    8[BANK0 ] unsigned long long 
  4835 ;;  ll              8    0[BANK0 ] long long 
  4836 ;;  f               4    0        long long 
  4837 ;;  vp              3    0        PTR void 
  4838 ;;  ct              3    0        unsigned char [3]
  4839 ;;  cp              3    0        PTR unsigned char 
  4840 ;;  i               2    0        int 
  4841 ;;  done            2    0        int 
  4842 ;;  c               1   18[BANK0 ] unsigned char 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  2   72[COMRAM] int 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4852 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4853 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4854 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4855 ;;      Totals:        10      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4856 ;;Total ram usage:       29 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    9
  4859 ;; This function calls:
  4860 ;;		_atoi
  4861 ;;		_dtoa
  4862 ;;		_fputc
  4863 ;;		_isdigit
  4864 ;;		_xtoa
  4865 ;; This function is called by:
  4866 ;;		_vfprintf
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text38
  4871  010000                     __ptext38:
  4872                           	callstack 0
  4873  010000                     _vfpfcnvrt:
  4874                           	callstack 17
  4875  010000                     
  4876                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4877  010000  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4878  010004  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4879  010008  CFDE FFF6          	movff	postinc2,tblptrl
  4880  01000C  CFDD FFF7          	movff	postdec2,tblptrh
  4881  010010                     	if	0	;tblptru may be non-zero
  4882  010010                     	endif
  4883  010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4884  010010  0E00               	movlw	low (__mediumconst shr (0+16))
  4885  010012  6EF8               	movwf	tblptru,c
  4886  010014                     	endif
  4887  010014  0008               	tblrd		*
  4888  010016  50F5               	movf	tablat,w,c
  4889  010018  0A25               	xorlw	37
  4890  01001A  A4D8               	btfss	status,2,c
  4891  01001C  EF12  F080         	goto	u2251
  4892  010020  EF14  F080         	goto	u2250
  4893  010024                     u2251:
  4894  010024  EFC1  F081         	goto	l3563
  4895  010028                     u2250:
  4896  010028                     
  4897                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4898  010028  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4899  01002C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4900  010030  2ADE               	incf	postinc2,f,c
  4901  010032  0E00               	movlw	0
  4902  010034  22DD               	addwfc	postdec2,f,c
  4903  010036                     
  4904                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4905  010036  0E00               	movlw	0
  4906  010038  0100               	movlb	0	; () banked
  4907  01003A  6FAE               	movwf	(_width+1)& (0+255),b
  4908  01003C  0E00               	movlw	0
  4909  01003E  6FAD               	movwf	_width& (0+255),b
  4910  010040  C0AD  F055         	movff	_width,_flags
  4911  010044  C0AE  F056         	movff	_width+1,_flags+1
  4912  010048                     
  4913                           ; BSR set to: 0
  4914                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4915  010048  6853               	setf	_prec^0,c
  4916  01004A  6854               	setf	(_prec+1)^0,c
  4917  01004C                     
  4918                           ; BSR set to: 0
  4919                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  4920  01004C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4921  010050  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4922  010054  CFDE FFF6          	movff	postinc2,tblptrl
  4923  010058  CFDD FFF7          	movff	postdec2,tblptrh
  4924  01005C                     	if	0	;tblptru may be non-zero
  4925  01005C                     	endif
  4926  01005C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4927  01005C  0E00               	movlw	low (__mediumconst shr (0+16))
  4928  01005E  6EF8               	movwf	tblptru,c
  4929  010060                     	endif
  4930  010060  0008               	tblrd		*
  4931  010062  50F5               	movf	tablat,w,c
  4932  010064  0A2A               	xorlw	42
  4933  010066  A4D8               	btfss	status,2,c
  4934  010068  EF38  F080         	goto	u2261
  4935  01006C  EF3A  F080         	goto	u2260
  4936  010070                     u2261:
  4937  010070  EF63  F080         	goto	l3513
  4938  010074                     u2260:
  4939  010074                     
  4940                           ; BSR set to: 0
  4941                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  4942  010074  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4943  010078  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4944  01007C  2ADE               	incf	postinc2,f,c
  4945  01007E  0E00               	movlw	0
  4946  010080  22DD               	addwfc	postdec2,f,c
  4947                           
  4948                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4949  010082  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4950  010086  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4951  01008A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4952  01008E  0E02               	movlw	2
  4953  010090  26DE               	addwf	postinc2,f,c
  4954  010092  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4955  010096  0E00               	movlw	0
  4956  010098  22DD               	addwfc	postdec2,f,c
  4957  01009A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4958  01009E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4959  0100A2  CFDE F0AD          	movff	postinc2,_width
  4960  0100A6  CFDD F0AE          	movff	postdec2,_width+1
  4961  0100AA                     
  4962                           ; BSR set to: 0
  4963                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  4964  0100AA  BFAE               	btfsc	(_width+1)& (0+255),7,b
  4965  0100AC  EF5C  F080         	goto	u2270
  4966  0100B0  EF5A  F080         	goto	u2271
  4967  0100B4                     u2271:
  4968  0100B4  EFA9  F080         	goto	l3523
  4969  0100B8                     u2270:
  4970  0100B8                     
  4971                           ; BSR set to: 0
  4972                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  4973  0100B8  8055               	bsf	_flags^0,0,c
  4974                           
  4975                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  4976  0100BA  6DAD               	negf	_width& (0+255),b
  4977  0100BC  1FAE               	comf	(_width+1)& (0+255),f,b
  4978  0100BE  B0D8               	btfsc	status,0,c
  4979  0100C0  2BAE               	incf	(_width+1)& (0+255),f,b
  4980  0100C2  EFA9  F080         	goto	l3523
  4981  0100C6                     l3513:
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  4985  0100C6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4986  0100CA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4987  0100CE  CFDE F00E          	movff	postinc2,atoi@s
  4988  0100D2  CFDD F00F          	movff	postdec2,atoi@s+1
  4989  0100D6  EC1A  F086         	call	_atoi	;wreg free
  4990  0100DA  C00E  F0AD         	movff	?_atoi,_width
  4991  0100DE  C00F  F0AE         	movff	?_atoi+1,_width+1
  4992                           
  4993                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4994  0100E2  EF7A  F080         	goto	l3517
  4995  0100E6                     l3515:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  4999  0100E6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5000  0100EA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5001  0100EE  2ADE               	incf	postinc2,f,c
  5002  0100F0  0E00               	movlw	0
  5003  0100F2  22DD               	addwfc	postdec2,f,c
  5004  0100F4                     l3517:
  5005  0100F4  0ED0               	movlw	208
  5006  0100F6  6E4F               	movwf	??_vfpfcnvrt^0,c
  5007  0100F8  0EFF               	movlw	255
  5008  0100FA  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  5009  0100FC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5010  010100  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5011  010104  CFDE FFF6          	movff	postinc2,tblptrl
  5012  010108  CFDD FFF7          	movff	postdec2,tblptrh
  5013  01010C                     	if	0	;tblptru may be non-zero
  5014  01010C                     	endif
  5015  01010C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5016  01010C  0E00               	movlw	low (__mediumconst shr (0+16))
  5017  01010E  6EF8               	movwf	tblptru,c
  5018  010110                     	endif
  5019  010110  0008               	tblrd		*
  5020  010112  50F5               	movf	tablat,w,c
  5021  010114  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  5022  010116  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  5023  010118  504F               	movf	??_vfpfcnvrt^0,w,c
  5024  01011A  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5025  01011C  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  5026  01011E  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5027  010120  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  5028  010122  E10A               	bnz	u2280
  5029  010124  0E0A               	movlw	10
  5030  010126  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5031  010128  A0D8               	btfss	status,0,c
  5032  01012A  EF99  F080         	goto	u2281
  5033  01012E  EF9C  F080         	goto	u2280
  5034  010132                     u2281:
  5035  010132  0E01               	movlw	1
  5036  010134  EF9D  F080         	goto	u2290
  5037  010138                     u2280:
  5038  010138  0E00               	movlw	0
  5039  01013A                     u2290:
  5040  01013A  0100               	movlb	0	; () banked
  5041  01013C  6F70               	movwf	_vfpfcnvrt$2662& (0+255),b
  5042  01013E  6B71               	clrf	(_vfpfcnvrt$2662+1)& (0+255),b
  5043  010140                     
  5044                           ; BSR set to: 0
  5045  010140  5170               	movf	_vfpfcnvrt$2662& (0+255),w,b
  5046  010142  1171               	iorwf	(_vfpfcnvrt$2662+1)& (0+255),w,b
  5047  010144  A4D8               	btfss	status,2,c
  5048  010146  EFA7  F080         	goto	u2301
  5049  01014A  EFA9  F080         	goto	u2300
  5050  01014E                     u2301:
  5051  01014E  EF73  F080         	goto	l3515
  5052  010152                     u2300:
  5053  010152                     l3523:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5057  010152  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5058  010156  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5059  01015A  CFDE FFF6          	movff	postinc2,tblptrl
  5060  01015E  CFDD FFF7          	movff	postdec2,tblptrh
  5061  010162                     	if	0	;tblptru may be non-zero
  5062  010162                     	endif
  5063  010162                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5064  010162  0E00               	movlw	low (__mediumconst shr (0+16))
  5065  010164  6EF8               	movwf	tblptru,c
  5066  010166                     	endif
  5067  010166  0008               	tblrd		*
  5068  010168  50F5               	movf	tablat,w,c
  5069  01016A  0A64               	xorlw	100
  5070  01016C  B4D8               	btfsc	status,2,c
  5071  01016E  EFBB  F080         	goto	u2311
  5072  010172  EFBD  F080         	goto	u2310
  5073  010176                     u2311:
  5074  010176  EFD1  F080         	goto	l3527
  5075  01017A                     u2310:
  5076  01017A                     
  5077                           ; BSR set to: 0
  5078  01017A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5079  01017E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5080  010182  CFDE FFF6          	movff	postinc2,tblptrl
  5081  010186  CFDD FFF7          	movff	postdec2,tblptrh
  5082  01018A                     	if	0	;tblptru may be non-zero
  5083  01018A                     	endif
  5084  01018A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5085  01018A  0E00               	movlw	low (__mediumconst shr (0+16))
  5086  01018C  6EF8               	movwf	tblptru,c
  5087  01018E                     	endif
  5088  01018E  0008               	tblrd		*
  5089  010190  50F5               	movf	tablat,w,c
  5090  010192  0A69               	xorlw	105
  5091  010194  A4D8               	btfss	status,2,c
  5092  010196  EFCF  F080         	goto	u2321
  5093  01019A  EFD1  F080         	goto	u2320
  5094  01019E                     u2321:
  5095  01019E  EF11  F081         	goto	l3533
  5096  0101A2                     u2320:
  5097  0101A2                     l3527:
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5101  0101A2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5102  0101A6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5103  0101AA  2ADE               	incf	postinc2,f,c
  5104  0101AC  0E00               	movlw	0
  5105  0101AE  22DD               	addwfc	postdec2,f,c
  5106                           
  5107                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5108  0101B0  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5109  0101B4  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5110  0101B8  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5111  0101BC  0E02               	movlw	2
  5112  0101BE  26DE               	addwf	postinc2,f,c
  5113  0101C0  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5114  0101C4  0E00               	movlw	0
  5115  0101C6  22DD               	addwfc	postdec2,f,c
  5116  0101C8  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5117  0101CC  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5118  0101D0  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  5119  0101D4  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  5120  0101D8  0E00               	movlw	0
  5121  0101DA  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5122  0101DC  0EFF               	movlw	-1
  5123  0101DE  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5124  0101E0  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5125  0101E2  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5126  0101E4  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5127  0101E6  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5128  0101E8  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5129  0101EA                     
  5130                           ; BSR set to: 0
  5131                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5132  0101EA  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  5133  0101EE  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5134  0101F2  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
  5135  0101F6  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5136  0101FA  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5137  0101FE  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5138  010202  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5139  010206  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5140  01020A  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5141  01020E  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5142  010212  ECDF  F081         	call	_dtoa	;wreg free
  5143  010216  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  5144  01021A  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5145  01021E  EFDE  F081         	goto	l1663
  5146  010222                     l3533:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5150  010222  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5151  010226  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5152  01022A  CFDE FFF6          	movff	postinc2,tblptrl
  5153  01022E  CFDD FFF7          	movff	postdec2,tblptrh
  5154  010232                     	if	0	;tblptru may be non-zero
  5155  010232                     	endif
  5156  010232                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5157  010232  0E00               	movlw	low (__mediumconst shr (0+16))
  5158  010234  6EF8               	movwf	tblptru,c
  5159  010236                     	endif
  5160  010236  0008               	tblrd		*
  5161  010238  50F5               	movf	tablat,w,c
  5162  01023A  0A78               	xorlw	120
  5163  01023C  B4D8               	btfsc	status,2,c
  5164  01023E  EF23  F081         	goto	u2331
  5165  010242  EF25  F081         	goto	u2330
  5166  010246                     u2331:
  5167  010246  EF39  F081         	goto	l3537
  5168  01024A                     u2330:
  5169  01024A                     
  5170                           ; BSR set to: 0
  5171  01024A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5172  01024E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5173  010252  CFDE FFF6          	movff	postinc2,tblptrl
  5174  010256  CFDD FFF7          	movff	postdec2,tblptrh
  5175  01025A                     	if	0	;tblptru may be non-zero
  5176  01025A                     	endif
  5177  01025A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5178  01025A  0E00               	movlw	low (__mediumconst shr (0+16))
  5179  01025C  6EF8               	movwf	tblptru,c
  5180  01025E                     	endif
  5181  01025E  0008               	tblrd		*
  5182  010260  50F5               	movf	tablat,w,c
  5183  010262  0A58               	xorlw	88
  5184  010264  A4D8               	btfss	status,2,c
  5185  010266  EF37  F081         	goto	u2341
  5186  01026A  EF39  F081         	goto	u2340
  5187  01026E                     u2341:
  5188  01026E  EF89  F081         	goto	l3547
  5189  010272                     u2340:
  5190  010272                     l3537:
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5194  010272  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5195  010276  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5196  01027A  CFDE FFF6          	movff	postinc2,tblptrl
  5197  01027E  CFDD FFF7          	movff	postdec2,tblptrh
  5198  010282                     	if	0	;tblptru may be non-zero
  5199  010282                     	endif
  5200  010282                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5201  010282  0E00               	movlw	low (__mediumconst shr (0+16))
  5202  010284  6EF8               	movwf	tblptru,c
  5203  010286                     	endif
  5204  010286  0008               	tblrd		*
  5205  010288  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  5206  01028C                     
  5207                           ; BSR set to: 0
  5208                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5209  01028C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5210  010290  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5211  010294  2ADE               	incf	postinc2,f,c
  5212  010296  0E00               	movlw	0
  5213  010298  22DD               	addwfc	postdec2,f,c
  5214  01029A                     
  5215                           ; BSR set to: 0
  5216                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5217  01029A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5218  01029E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5219  0102A2  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5220  0102A6  0E02               	movlw	2
  5221  0102A8  26DE               	addwf	postinc2,f,c
  5222  0102AA  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5223  0102AE  0E00               	movlw	0
  5224  0102B0  22DD               	addwfc	postdec2,f,c
  5225  0102B2  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5226  0102B6  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5227  0102BA  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  5228  0102BE  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  5229  0102C2  C051  F068         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5230  0102C6  C052  F069         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5231  0102CA  6B6A               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5232  0102CC  6B6B               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5233  0102CE  6B6C               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5234  0102D0  6B6D               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5235  0102D2  6B6E               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5236  0102D4  6B6F               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5237  0102D6                     
  5238                           ; BSR set to: 0
  5239                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5240  0102D6  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  5241  0102DA  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5242  0102DE  C068  F024         	movff	vfpfcnvrt@llu,xtoa@d
  5243  0102E2  C069  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5244  0102E6  C06A  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5245  0102EA  C06B  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5246  0102EE  C06C  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5247  0102F2  C06D  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5248  0102F6  C06E  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5249  0102FA  C06F  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5250  0102FE  C072  F02C         	movff	vfpfcnvrt@c,xtoa@x
  5251  010302  EC4E  F083         	call	_xtoa	;wreg free
  5252  010306  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  5253  01030A  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5254  01030E  EFDE  F081         	goto	l1663
  5255  010312                     l3547:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5259  010312  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5260  010316  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5261  01031A  CFDE FFF6          	movff	postinc2,tblptrl
  5262  01031E  CFDD FFF7          	movff	postdec2,tblptrh
  5263  010322                     	if	0	;tblptru may be non-zero
  5264  010322                     	endif
  5265  010322                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5266  010322  0E00               	movlw	low (__mediumconst shr (0+16))
  5267  010324  6EF8               	movwf	tblptru,c
  5268  010326                     	endif
  5269  010326  0008               	tblrd		*
  5270  010328  50F5               	movf	tablat,w,c
  5271  01032A  0A25               	xorlw	37
  5272  01032C  A4D8               	btfss	status,2,c
  5273  01032E  EF9B  F081         	goto	u2351
  5274  010332  EF9D  F081         	goto	u2350
  5275  010336                     u2351:
  5276  010336  EFB4  F081         	goto	l3557
  5277  01033A                     u2350:
  5278  01033A                     
  5279                           ; BSR set to: 0
  5280                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5281  01033A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5282  01033E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5283  010342  2ADE               	incf	postinc2,f,c
  5284  010344  0E00               	movlw	0
  5285  010346  22DD               	addwfc	postdec2,f,c
  5286  010348                     
  5287                           ; BSR set to: 0
  5288                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5289  010348  0E00               	movlw	0
  5290  01034A  6E08               	movwf	(fputc@c+1)^0,c
  5291  01034C  0E25               	movlw	37
  5292  01034E  6E07               	movwf	fputc@c^0,c
  5293  010350  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  5294  010354  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5295  010358  EC72  F089         	call	_fputc	;wreg free
  5296  01035C                     l3553:
  5297                           
  5298                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5299  01035C  0E00               	movlw	0
  5300  01035E  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  5301  010360  0E01               	movlw	1
  5302  010362  6E49               	movwf	?_vfpfcnvrt^0,c
  5303  010364  EFDE  F081         	goto	l1663
  5304  010368                     l3557:
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5308  010368  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5309  01036C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5310  010370  2ADE               	incf	postinc2,f,c
  5311  010372  0E00               	movlw	0
  5312  010374  22DD               	addwfc	postdec2,f,c
  5313  010376                     
  5314                           ; BSR set to: 0
  5315                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5316  010376  0E00               	movlw	0
  5317  010378  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  5318  01037A  0E00               	movlw	0
  5319  01037C  6E49               	movwf	?_vfpfcnvrt^0,c
  5320  01037E  EFDE  F081         	goto	l1663
  5321  010382                     l3563:
  5322                           
  5323                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5324  010382  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5325  010386  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5326  01038A  CFDE FFF6          	movff	postinc2,tblptrl
  5327  01038E  CFDD FFF7          	movff	postdec2,tblptrh
  5328  010392                     	if	0	;tblptru may be non-zero
  5329  010392                     	endif
  5330  010392                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5331  010392  0E00               	movlw	low (__mediumconst shr (0+16))
  5332  010394  6EF8               	movwf	tblptru,c
  5333  010396                     	endif
  5334  010396  0008               	tblrd		*
  5335  010398  50F5               	movf	tablat,w,c
  5336  01039A  6E07               	movwf	fputc@c^0,c
  5337  01039C  6A08               	clrf	(fputc@c+1)^0,c
  5338  01039E  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  5339  0103A2  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5340  0103A6  EC72  F089         	call	_fputc	;wreg free
  5341  0103AA                     
  5342                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5343  0103AA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5344  0103AE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5345  0103B2  2ADE               	incf	postinc2,f,c
  5346  0103B4  0E00               	movlw	0
  5347  0103B6  22DD               	addwfc	postdec2,f,c
  5348  0103B8  EFAE  F081         	goto	l3553
  5349  0103BC                     l1663:
  5350  0103BC  0012               	return		;funcret
  5351  0103BE                     __end_of_vfpfcnvrt:
  5352                           	callstack 0
  5353                           
  5354 ;; *************** function _xtoa *****************
  5355 ;; Defined at:
  5356 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  5359 ;;		 -> sprintf@f(6), 
  5360 ;;  d               8   35[COMRAM] unsigned long long 
  5361 ;;  x               1   43[COMRAM] unsigned char 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  n               8   60[COMRAM] unsigned long long 
  5364 ;;  c               2   70[COMRAM] int 
  5365 ;;  i               2   68[COMRAM] int 
  5366 ;;  w               2   58[COMRAM] int 
  5367 ;;  p               2   56[COMRAM] int 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  2   33[COMRAM] int 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5377 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5378 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5379 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5380 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5381 ;;Total ram usage:       39 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    8
  5384 ;; This function calls:
  5385 ;;		_isalpha
  5386 ;;		_isupper
  5387 ;;		_pad
  5388 ;;		_toupper
  5389 ;; This function is called by:
  5390 ;;		_vfpfcnvrt
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text39
  5395  01069C                     __ptext39:
  5396                           	callstack 0
  5397  01069C                     _xtoa:
  5398                           	callstack 17
  5399  01069C                     
  5400                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5401  01069C  BE54               	btfsc	(_prec+1)^0,7,c
  5402  01069E  EF53  F083         	goto	u2011
  5403  0106A2  EF55  F083         	goto	u2010
  5404  0106A6                     u2011:
  5405  0106A6  EF56  F083         	goto	l3375
  5406  0106AA                     u2010:
  5407  0106AA                     
  5408                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5409  0106AA  9255               	bcf	_flags^0,1,c
  5410  0106AC                     l3375:
  5411                           
  5412                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5413  0106AC  BE54               	btfsc	(_prec+1)^0,7,c
  5414  0106AE  EF63  F083         	goto	u2020
  5415  0106B2  5054               	movf	(_prec+1)^0,w,c
  5416  0106B4  E106               	bnz	u2021
  5417  0106B6  0453               	decf	_prec^0,w,c
  5418  0106B8  B0D8               	btfsc	status,0,c
  5419  0106BA  EF61  F083         	goto	u2021
  5420  0106BE  EF63  F083         	goto	u2020
  5421  0106C2                     u2021:
  5422  0106C2  EF69  F083         	goto	l1621
  5423  0106C6                     u2020:
  5424  0106C6  0E00               	movlw	0
  5425  0106C8  6E3A               	movwf	(xtoa@p+1)^0,c
  5426  0106CA  0E01               	movlw	1
  5427  0106CC  6E39               	movwf	xtoa@p^0,c
  5428  0106CE  EF6D  F083         	goto	l1623
  5429  0106D2                     l1621:
  5430  0106D2  C053  F039         	movff	_prec,xtoa@p
  5431  0106D6  C054  F03A         	movff	_prec+1,xtoa@p+1
  5432  0106DA                     l1623:
  5433                           
  5434                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5435  0106DA  C0AD  F03B         	movff	_width,xtoa@w
  5436  0106DE  C0AE  F03C         	movff	_width+1,xtoa@w+1
  5437                           
  5438                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5439  0106E2  A855               	btfss	_flags^0,4,c
  5440  0106E4  EF76  F083         	goto	u2031
  5441  0106E8  EF78  F083         	goto	u2030
  5442  0106EC                     u2031:
  5443  0106EC  EF7C  F083         	goto	l3381
  5444  0106F0                     u2030:
  5445  0106F0                     
  5446                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5447  0106F0  0EFE               	movlw	254
  5448  0106F2  263B               	addwf	xtoa@w^0,f,c
  5449  0106F4  0EFF               	movlw	255
  5450  0106F6  223C               	addwfc	(xtoa@w+1)^0,f,c
  5451  0106F8                     l3381:
  5452                           
  5453                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5454  0106F8  C024  F03D         	movff	xtoa@d,xtoa@n
  5455  0106FC  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  5456  010700  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  5457  010704  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  5458  010708  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  5459  01070C  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  5460  010710  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  5461  010714  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  5462  010718                     
  5463                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5464  010718  0E00               	movlw	0
  5465  01071A  6E46               	movwf	(xtoa@i+1)^0,c
  5466  01071C  0E1F               	movlw	31
  5467  01071E  6E45               	movwf	xtoa@i^0,c
  5468  010720                     
  5469                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5470  010720  0E00               	movlw	0
  5471  010722  0100               	movlb	0	; () banked
  5472  010724  6FD3               	movwf	(_dbuf+31)& (0+255),b
  5473                           
  5474                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5475  010726  EF48  F084         	goto	l3417
  5476  01072A                     l3387:
  5477                           
  5478                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 665:         --i;
  5479  01072A  0645               	decf	xtoa@i^0,f,c
  5480  01072C  A0D8               	btfss	status,0,c
  5481  01072E  0646               	decf	(xtoa@i+1)^0,f,c
  5482  010730                     
  5483                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5484  010730  0E0F               	movlw	15
  5485  010732  143D               	andwf	xtoa@n^0,w,c
  5486  010734  6E47               	movwf	xtoa@c^0,c
  5487  010736  6A48               	clrf	(xtoa@c+1)^0,c
  5488  010738                     
  5489                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5490  010738  BE48               	btfsc	(xtoa@c+1)^0,7,c
  5491  01073A  EFA8  F083         	goto	u2041
  5492  01073E  5048               	movf	(xtoa@c+1)^0,w,c
  5493  010740  E109               	bnz	u2040
  5494  010742  0E0A               	movlw	10
  5495  010744  5C47               	subwf	xtoa@c^0,w,c
  5496  010746  A0D8               	btfss	status,0,c
  5497  010748  EFA8  F083         	goto	u2041
  5498  01074C  EFAA  F083         	goto	u2040
  5499  010750                     u2041:
  5500  010750  EFB2  F083         	goto	l3395
  5501  010754                     u2040:
  5502  010754  0E57               	movlw	87
  5503  010756  2447               	addwf	xtoa@c^0,w,c
  5504  010758  6E47               	movwf	xtoa@c^0,c
  5505  01075A  0E00               	movlw	0
  5506  01075C  2048               	addwfc	(xtoa@c+1)^0,w,c
  5507  01075E  6E48               	movwf	(xtoa@c+1)^0,c
  5508  010760  EFB8  F083         	goto	l1630
  5509  010764                     l3395:
  5510  010764  0E30               	movlw	48
  5511  010766  2447               	addwf	xtoa@c^0,w,c
  5512  010768  6E47               	movwf	xtoa@c^0,c
  5513  01076A  0E00               	movlw	0
  5514  01076C  2048               	addwfc	(xtoa@c+1)^0,w,c
  5515  01076E  6E48               	movwf	(xtoa@c+1)^0,c
  5516  010770                     l1630:
  5517  010770  0EBF               	movlw	191
  5518  010772  6E2D               	movwf	??_xtoa^0,c
  5519  010774  0EFF               	movlw	255
  5520  010776  6E2E               	movwf	(??_xtoa+1)^0,c
  5521  010778  502C               	movf	xtoa@x^0,w,c
  5522  01077A  6E2F               	movwf	(??_xtoa+2)^0,c
  5523  01077C  6A30               	clrf	(??_xtoa+3)^0,c
  5524  01077E  502D               	movf	??_xtoa^0,w,c
  5525  010780  262F               	addwf	(??_xtoa+2)^0,f,c
  5526  010782  502E               	movf	(??_xtoa+1)^0,w,c
  5527  010784  2230               	addwfc	(??_xtoa+3)^0,f,c
  5528  010786  5030               	movf	(??_xtoa+3)^0,w,c
  5529  010788  E10A               	bnz	u2050
  5530  01078A  0E1A               	movlw	26
  5531  01078C  5C2F               	subwf	(??_xtoa+2)^0,w,c
  5532  01078E  A0D8               	btfss	status,0,c
  5533  010790  EFCC  F083         	goto	u2051
  5534  010794  EFCF  F083         	goto	u2050
  5535  010798                     u2051:
  5536  010798  0E01               	movlw	1
  5537  01079A  EFD0  F083         	goto	u2060
  5538  01079E                     u2050:
  5539  01079E  0E00               	movlw	0
  5540  0107A0                     u2060:
  5541  0107A0  6E35               	movwf	_xtoa$2647^0,c
  5542  0107A2  6A36               	clrf	(_xtoa$2647+1)^0,c
  5543  0107A4  5035               	movf	_xtoa$2647^0,w,c
  5544  0107A6  1036               	iorwf	(_xtoa$2647+1)^0,w,c
  5545  0107A8  B4D8               	btfsc	status,2,c
  5546  0107AA  EFD9  F083         	goto	u2071
  5547  0107AE  EFDB  F083         	goto	u2070
  5548  0107B2                     u2071:
  5549  0107B2  EF0B  F084         	goto	l3409
  5550  0107B6                     u2070:
  5551  0107B6  0E9F               	movlw	159
  5552  0107B8  6E2D               	movwf	??_xtoa^0,c
  5553  0107BA  0EFF               	movlw	255
  5554  0107BC  6E2E               	movwf	(??_xtoa+1)^0,c
  5555  0107BE  0E20               	movlw	32
  5556  0107C0  1047               	iorwf	xtoa@c^0,w,c
  5557  0107C2  6E2F               	movwf	(??_xtoa+2)^0,c
  5558  0107C4  0E00               	movlw	0
  5559  0107C6  1048               	iorwf	(xtoa@c+1)^0,w,c
  5560  0107C8  6E30               	movwf	(??_xtoa+3)^0,c
  5561  0107CA  502D               	movf	??_xtoa^0,w,c
  5562  0107CC  262F               	addwf	(??_xtoa+2)^0,f,c
  5563  0107CE  502E               	movf	(??_xtoa+1)^0,w,c
  5564  0107D0  2230               	addwfc	(??_xtoa+3)^0,f,c
  5565  0107D2  5030               	movf	(??_xtoa+3)^0,w,c
  5566  0107D4  E10A               	bnz	u2080
  5567  0107D6  0E1A               	movlw	26
  5568  0107D8  5C2F               	subwf	(??_xtoa+2)^0,w,c
  5569  0107DA  A0D8               	btfss	status,0,c
  5570  0107DC  EFF2  F083         	goto	u2081
  5571  0107E0  EFF5  F083         	goto	u2080
  5572  0107E4                     u2081:
  5573  0107E4  0E01               	movlw	1
  5574  0107E6  EFF6  F083         	goto	u2090
  5575  0107EA                     u2080:
  5576  0107EA  0E00               	movlw	0
  5577  0107EC                     u2090:
  5578  0107EC  6E37               	movwf	_xtoa$2648^0,c
  5579  0107EE  6A38               	clrf	(_xtoa$2648+1)^0,c
  5580  0107F0  5037               	movf	_xtoa$2648^0,w,c
  5581  0107F2  1038               	iorwf	(_xtoa$2648+1)^0,w,c
  5582  0107F4  B4D8               	btfsc	status,2,c
  5583  0107F6  EFFF  F083         	goto	u2101
  5584  0107FA  EF01  F084         	goto	u2100
  5585  0107FE                     u2101:
  5586  0107FE  EF0B  F084         	goto	l3409
  5587  010802                     u2100:
  5588  010802                     
  5589                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5590  010802  C047  F00D         	movff	xtoa@c,toupper@c
  5591  010806  C048  F00E         	movff	xtoa@c+1,toupper@c+1
  5592  01080A  ECFC  F08B         	call	_toupper	;wreg free
  5593  01080E  C00D  F047         	movff	?_toupper,xtoa@c
  5594  010812  C00E  F048         	movff	?_toupper+1,xtoa@c+1
  5595  010816                     l3409:
  5596                           
  5597                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5598  010816  0EB4               	movlw	low _dbuf
  5599  010818  2445               	addwf	xtoa@i^0,w,c
  5600  01081A  6ED9               	movwf	fsr2l,c
  5601  01081C  0E00               	movlw	high _dbuf
  5602  01081E  2046               	addwfc	(xtoa@i+1)^0,w,c
  5603  010820  6EDA               	movwf	fsr2h,c
  5604  010822  C047  FFDF         	movff	xtoa@c,indf2
  5605  010826                     
  5606                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 672:         --p;
  5607  010826  0639               	decf	xtoa@p^0,f,c
  5608  010828  A0D8               	btfss	status,0,c
  5609  01082A  063A               	decf	(xtoa@p+1)^0,f,c
  5610  01082C                     
  5611                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 673:         --w;
  5612  01082C  063B               	decf	xtoa@w^0,f,c
  5613  01082E  A0D8               	btfss	status,0,c
  5614  010830  063C               	decf	(xtoa@w+1)^0,f,c
  5615  010832                     
  5616                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5617  010832  C03D  F02D         	movff	xtoa@n,??_xtoa
  5618  010836  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  5619  01083A  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  5620  01083E  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  5621  010842  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  5622  010846  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  5623  01084A  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  5624  01084E  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  5625  010852  0E05               	movlw	5
  5626  010854  EF35  F084         	goto	u2110
  5627  010858                     u2115:
  5628  010858  90D8               	bcf	status,0,c
  5629  01085A  3234               	rrcf	(??_xtoa+7)^0,f,c
  5630  01085C  3233               	rrcf	(??_xtoa+6)^0,f,c
  5631  01085E  3232               	rrcf	(??_xtoa+5)^0,f,c
  5632  010860  3231               	rrcf	(??_xtoa+4)^0,f,c
  5633  010862  3230               	rrcf	(??_xtoa+3)^0,f,c
  5634  010864  322F               	rrcf	(??_xtoa+2)^0,f,c
  5635  010866  322E               	rrcf	(??_xtoa+1)^0,f,c
  5636  010868  322D               	rrcf	??_xtoa^0,f,c
  5637  01086A                     u2110:
  5638  01086A  2EE8               	decfsz	wreg,f,c
  5639  01086C  EF2C  F084         	goto	u2115
  5640  010870  C02D  F03D         	movff	??_xtoa,xtoa@n
  5641  010874  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  5642  010878  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  5643  01087C  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  5644  010880  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  5645  010884  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  5646  010888  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  5647  01088C  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  5648  010890                     l3417:
  5649                           
  5650                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5651  010890  BE46               	btfsc	(xtoa@i+1)^0,7,c
  5652  010892  EF54  F084         	goto	u2121
  5653  010896  5046               	movf	(xtoa@i+1)^0,w,c
  5654  010898  E109               	bnz	u2120
  5655  01089A  0E02               	movlw	2
  5656  01089C  5C45               	subwf	xtoa@i^0,w,c
  5657  01089E  A0D8               	btfss	status,0,c
  5658  0108A0  EF54  F084         	goto	u2121
  5659  0108A4  EF56  F084         	goto	u2120
  5660  0108A8                     u2121:
  5661  0108A8  EF86  F084         	goto	l1644
  5662  0108AC                     u2120:
  5663  0108AC  503D               	movf	xtoa@n^0,w,c
  5664  0108AE  103E               	iorwf	(xtoa@n+1)^0,w,c
  5665  0108B0  103F               	iorwf	(xtoa@n+2)^0,w,c
  5666  0108B2  1040               	iorwf	(xtoa@n+3)^0,w,c
  5667  0108B4  1041               	iorwf	(xtoa@n+4)^0,w,c
  5668  0108B6  1042               	iorwf	(xtoa@n+5)^0,w,c
  5669  0108B8  1043               	iorwf	(xtoa@n+6)^0,w,c
  5670  0108BA  1044               	iorwf	(xtoa@n+7)^0,w,c
  5671  0108BC  A4D8               	btfss	status,2,c
  5672  0108BE  EF63  F084         	goto	u2131
  5673  0108C2  EF65  F084         	goto	u2130
  5674  0108C6                     u2131:
  5675  0108C6  EF95  F083         	goto	l3387
  5676  0108CA                     u2130:
  5677  0108CA  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  5678  0108CC  EF72  F084         	goto	u2140
  5679  0108D0  503A               	movf	(xtoa@p+1)^0,w,c
  5680  0108D2  E106               	bnz	u2141
  5681  0108D4  0439               	decf	xtoa@p^0,w,c
  5682  0108D6  B0D8               	btfsc	status,0,c
  5683  0108D8  EF70  F084         	goto	u2141
  5684  0108DC  EF72  F084         	goto	u2140
  5685  0108E0                     u2141:
  5686  0108E0  EF95  F083         	goto	l3387
  5687  0108E4                     u2140:
  5688  0108E4  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  5689  0108E6  EF7D  F084         	goto	u2151
  5690  0108EA  503C               	movf	(xtoa@w+1)^0,w,c
  5691  0108EC  E108               	bnz	u2150
  5692  0108EE  043B               	decf	xtoa@w^0,w,c
  5693  0108F0  A0D8               	btfss	status,0,c
  5694  0108F2  EF7D  F084         	goto	u2151
  5695  0108F6  EF7F  F084         	goto	u2150
  5696  0108FA                     u2151:
  5697  0108FA  EF86  F084         	goto	l1644
  5698  0108FE                     u2150:
  5699  0108FE  B255               	btfsc	_flags^0,1,c
  5700  010900  EF84  F084         	goto	u2161
  5701  010904  EF86  F084         	goto	u2160
  5702  010908                     u2161:
  5703  010908  EF95  F083         	goto	l3387
  5704  01090C                     u2160:
  5705  01090C                     l1644:
  5706                           
  5707                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5708  01090C  A855               	btfss	_flags^0,4,c
  5709  01090E  EF8B  F084         	goto	u2171
  5710  010912  EF8D  F084         	goto	u2170
  5711  010916                     u2171:
  5712  010916  EFA3  F084         	goto	l3433
  5713  01091A                     u2170:
  5714  01091A                     
  5715                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 679:         --i;
  5716  01091A  0645               	decf	xtoa@i^0,f,c
  5717  01091C  A0D8               	btfss	status,0,c
  5718  01091E  0646               	decf	(xtoa@i+1)^0,f,c
  5719  010920                     
  5720                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5721  010920  0EB4               	movlw	low _dbuf
  5722  010922  2445               	addwf	xtoa@i^0,w,c
  5723  010924  6ED9               	movwf	fsr2l,c
  5724  010926  0E00               	movlw	high _dbuf
  5725  010928  2046               	addwfc	(xtoa@i+1)^0,w,c
  5726  01092A  6EDA               	movwf	fsr2h,c
  5727  01092C  C02C  FFDF         	movff	xtoa@x,indf2
  5728  010930                     
  5729                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 681:         --i;
  5730  010930  0645               	decf	xtoa@i^0,f,c
  5731  010932  A0D8               	btfss	status,0,c
  5732  010934  0646               	decf	(xtoa@i+1)^0,f,c
  5733                           
  5734                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5735  010936  0EB4               	movlw	low _dbuf
  5736  010938  2445               	addwf	xtoa@i^0,w,c
  5737  01093A  6ED9               	movwf	fsr2l,c
  5738  01093C  0E00               	movlw	high _dbuf
  5739  01093E  2046               	addwfc	(xtoa@i+1)^0,w,c
  5740  010940  6EDA               	movwf	fsr2h,c
  5741  010942  0E30               	movlw	48
  5742  010944  6EDF               	movwf	indf2,c
  5743  010946                     l3433:
  5744                           
  5745                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5746  010946  C022  F017         	movff	xtoa@fp,pad@fp
  5747  01094A  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  5748  01094E  0EB4               	movlw	low _dbuf
  5749  010950  2445               	addwf	xtoa@i^0,w,c
  5750  010952  6E19               	movwf	pad@buf^0,c
  5751  010954  0E00               	movlw	high _dbuf
  5752  010956  2046               	addwfc	(xtoa@i+1)^0,w,c
  5753  010958  6E1A               	movwf	(pad@buf+1)^0,c
  5754  01095A  C03B  F01B         	movff	xtoa@w,pad@p
  5755  01095E  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  5756  010962  ECD7  F089         	call	_pad	;wreg free
  5757  010966  C017  F022         	movff	?_pad,?_xtoa
  5758  01096A  C018  F023         	movff	?_pad+1,?_xtoa+1
  5759  01096E  0012               	return		;funcret
  5760  010970                     __end_of_xtoa:
  5761                           	callstack 0
  5762                           
  5763 ;; *************** function _toupper *****************
  5764 ;; Defined at:
  5765 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\toupper.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  c               2   12[COMRAM] int 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  2   12[COMRAM] int 
  5772 ;; Registers used:
  5773 ;;		wreg, status,2, status,0
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5781 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5782 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5783 ;;Total ram usage:        8 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    5
  5786 ;; This function calls:
  5787 ;;		_islower
  5788 ;; This function is called by:
  5789 ;;		_xtoa
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text40
  5794  0117F8                     __ptext40:
  5795                           	callstack 0
  5796  0117F8                     _toupper:
  5797                           	callstack 19
  5798  0117F8  0E9F               	movlw	159
  5799  0117FA  6E0F               	movwf	??_toupper^0,c
  5800  0117FC  0EFF               	movlw	255
  5801  0117FE  6E10               	movwf	(??_toupper+1)^0,c
  5802  011800  C00D  F011         	movff	toupper@c,??_toupper+2
  5803  011804  C00E  F012         	movff	toupper@c+1,??_toupper+3
  5804  011808  500F               	movf	??_toupper^0,w,c
  5805  01180A  2611               	addwf	(??_toupper+2)^0,f,c
  5806  01180C  5010               	movf	(??_toupper+1)^0,w,c
  5807  01180E  2212               	addwfc	(??_toupper+3)^0,f,c
  5808  011810  5012               	movf	(??_toupper+3)^0,w,c
  5809  011812  E10A               	bnz	u1780
  5810  011814  0E1A               	movlw	26
  5811  011816  5C11               	subwf	(??_toupper+2)^0,w,c
  5812  011818  A0D8               	btfss	status,0,c
  5813  01181A  EF11  F08C         	goto	u1781
  5814  01181E  EF14  F08C         	goto	u1780
  5815  011822                     u1781:
  5816  011822  0E01               	movlw	1
  5817  011824  EF15  F08C         	goto	u1790
  5818  011828                     u1780:
  5819  011828  0E00               	movlw	0
  5820  01182A                     u1790:
  5821  01182A  6E13               	movwf	_toupper$2764^0,c
  5822  01182C  6A14               	clrf	(_toupper$2764+1)^0,c
  5823  01182E  5013               	movf	_toupper$2764^0,w,c
  5824  011830  1014               	iorwf	(_toupper$2764+1)^0,w,c
  5825  011832  B4D8               	btfsc	status,2,c
  5826  011834  EF1E  F08C         	goto	u1801
  5827  011838  EF20  F08C         	goto	u1800
  5828  01183C                     u1801:
  5829  01183C  EF26  F08C         	goto	l1771
  5830  011840                     u1800:
  5831  011840  0E5F               	movlw	95
  5832  011842  140D               	andwf	toupper@c^0,w,c
  5833  011844  6E0D               	movwf	?_toupper^0,c
  5834  011846  6A0E               	clrf	(?_toupper+1)^0,c
  5835  011848  EF2A  F08C         	goto	l1776
  5836  01184C                     l1771:
  5837  01184C  C00D  F00D         	movff	toupper@c,?_toupper
  5838  011850  C00E  F00E         	movff	toupper@c+1,?_toupper+1
  5839  011854                     l1776:
  5840  011854  0012               	return		;funcret
  5841  011856                     __end_of_toupper:
  5842                           	callstack 0
  5843                           
  5844 ;; *************** function _islower *****************
  5845 ;; Defined at:
  5846 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\islower.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  c               2    6[COMRAM] int 
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;		None
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  2    6[COMRAM] int 
  5853 ;; Registers used:
  5854 ;;		wreg, status,2, status,0
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5862 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5863 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5864 ;;Total ram usage:        6 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:    4
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_toupper
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text41
  5875  011BC6                     __ptext41:
  5876                           	callstack 0
  5877  011BC6                     _islower:
  5878                           	callstack 19
  5879  011BC6  0E9F               	movlw	159
  5880  011BC8  6E09               	movwf	??_islower^0,c
  5881  011BCA  0EFF               	movlw	255
  5882  011BCC  6E0A               	movwf	(??_islower+1)^0,c
  5883  011BCE  C007  F00B         	movff	islower@c,??_islower+2
  5884  011BD2  C008  F00C         	movff	islower@c+1,??_islower+3
  5885  011BD6  5009               	movf	??_islower^0,w,c
  5886  011BD8  260B               	addwf	(??_islower+2)^0,f,c
  5887  011BDA  500A               	movf	(??_islower+1)^0,w,c
  5888  011BDC  220C               	addwfc	(??_islower+3)^0,f,c
  5889  011BDE  500C               	movf	(??_islower+3)^0,w,c
  5890  011BE0  E10A               	bnz	u1540
  5891  011BE2  0E1A               	movlw	26
  5892  011BE4  5C0B               	subwf	(??_islower+2)^0,w,c
  5893  011BE6  A0D8               	btfss	status,0,c
  5894  011BE8  EFF8  F08D         	goto	u1541
  5895  011BEC  EFFB  F08D         	goto	u1540
  5896  011BF0                     u1541:
  5897  011BF0  0E01               	movlw	1
  5898  011BF2  EFFC  F08D         	goto	u1550
  5899  011BF6                     u1540:
  5900  011BF6  0E00               	movlw	0
  5901  011BF8                     u1550:
  5902  011BF8  6E07               	movwf	?_islower^0,c
  5903  011BFA  6A08               	clrf	(?_islower+1)^0,c
  5904  011BFC  0012               	return		;funcret
  5905  011BFE                     __end_of_islower:
  5906                           	callstack 0
  5907                           
  5908 ;; *************** function _isupper *****************
  5909 ;; Defined at:
  5910 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  c               2    6[COMRAM] int 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  2    6[COMRAM] int 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;Total ram usage:        6 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    4
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		_xtoa
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text42
  5939  011BFE                     __ptext42:
  5940                           	callstack 0
  5941  011BFE                     _isupper:
  5942                           	callstack 20
  5943  011BFE  0EBF               	movlw	191
  5944  011C00  6E09               	movwf	??_isupper^0,c
  5945  011C02  0EFF               	movlw	255
  5946  011C04  6E0A               	movwf	(??_isupper+1)^0,c
  5947  011C06  C007  F00B         	movff	isupper@c,??_isupper+2
  5948  011C0A  C008  F00C         	movff	isupper@c+1,??_isupper+3
  5949  011C0E  5009               	movf	??_isupper^0,w,c
  5950  011C10  260B               	addwf	(??_isupper+2)^0,f,c
  5951  011C12  500A               	movf	(??_isupper+1)^0,w,c
  5952  011C14  220C               	addwfc	(??_isupper+3)^0,f,c
  5953  011C16  500C               	movf	(??_isupper+3)^0,w,c
  5954  011C18  E10A               	bnz	u1740
  5955  011C1A  0E1A               	movlw	26
  5956  011C1C  5C0B               	subwf	(??_isupper+2)^0,w,c
  5957  011C1E  A0D8               	btfss	status,0,c
  5958  011C20  EF14  F08E         	goto	u1741
  5959  011C24  EF17  F08E         	goto	u1740
  5960  011C28                     u1741:
  5961  011C28  0E01               	movlw	1
  5962  011C2A  EF18  F08E         	goto	u1750
  5963  011C2E                     u1740:
  5964  011C2E  0E00               	movlw	0
  5965  011C30                     u1750:
  5966  011C30  6E07               	movwf	?_isupper^0,c
  5967  011C32  6A08               	clrf	(?_isupper+1)^0,c
  5968  011C34  0012               	return		;funcret
  5969  011C36                     __end_of_isupper:
  5970                           	callstack 0
  5971                           
  5972 ;; *************** function _isalpha *****************
  5973 ;; Defined at:
  5974 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isalpha.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  c               2    6[COMRAM] int 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;		None
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  2    6[COMRAM] int 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5990 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5992 ;;Total ram usage:        6 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    4
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_xtoa
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text43
  6003  011ADE                     __ptext43:
  6004                           	callstack 0
  6005  011ADE                     _isalpha:
  6006                           	callstack 20
  6007  011ADE  0E9F               	movlw	159
  6008  011AE0  6E09               	movwf	??_isalpha^0,c
  6009  011AE2  0EFF               	movlw	255
  6010  011AE4  6E0A               	movwf	(??_isalpha+1)^0,c
  6011  011AE6  0E20               	movlw	32
  6012  011AE8  1007               	iorwf	isalpha@c^0,w,c
  6013  011AEA  6E0B               	movwf	(??_isalpha+2)^0,c
  6014  011AEC  0E00               	movlw	0
  6015  011AEE  1008               	iorwf	(isalpha@c+1)^0,w,c
  6016  011AF0  6E0C               	movwf	(??_isalpha+3)^0,c
  6017  011AF2  5009               	movf	??_isalpha^0,w,c
  6018  011AF4  260B               	addwf	(??_isalpha+2)^0,f,c
  6019  011AF6  500A               	movf	(??_isalpha+1)^0,w,c
  6020  011AF8  220C               	addwfc	(??_isalpha+3)^0,f,c
  6021  011AFA  500C               	movf	(??_isalpha+3)^0,w,c
  6022  011AFC  E10A               	bnz	u1760
  6023  011AFE  0E1A               	movlw	26
  6024  011B00  5C0B               	subwf	(??_isalpha+2)^0,w,c
  6025  011B02  A0D8               	btfss	status,0,c
  6026  011B04  EF86  F08D         	goto	u1761
  6027  011B08  EF89  F08D         	goto	u1760
  6028  011B0C                     u1761:
  6029  011B0C  0E01               	movlw	1
  6030  011B0E  EF8A  F08D         	goto	u1770
  6031  011B12                     u1760:
  6032  011B12  0E00               	movlw	0
  6033  011B14                     u1770:
  6034  011B14  6E07               	movwf	?_isalpha^0,c
  6035  011B16  6A08               	clrf	(?_isalpha+1)^0,c
  6036  011B18  0012               	return		;funcret
  6037  011B1A                     __end_of_isalpha:
  6038                           	callstack 0
  6039                           
  6040 ;; *************** function _dtoa *****************
  6041 ;; Defined at:
  6042 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6045 ;;		 -> sprintf@f(6), 
  6046 ;;  d               8   35[COMRAM] long long 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  n               8   59[COMRAM] long long 
  6049 ;;  i               2   67[COMRAM] int 
  6050 ;;  s               2   57[COMRAM] int 
  6051 ;;  w               2   55[COMRAM] int 
  6052 ;;  p               2   53[COMRAM] int 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  2   33[COMRAM] int 
  6055 ;; Registers used:
  6056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6062 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6063 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6064 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6065 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6066 ;;Total ram usage:       36 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    8
  6069 ;; This function calls:
  6070 ;;		___aodiv
  6071 ;;		___aomod
  6072 ;;		_abs
  6073 ;;		_pad
  6074 ;; This function is called by:
  6075 ;;		_vfpfcnvrt
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text44
  6080  0103BE                     __ptext44:
  6081                           	callstack 0
  6082  0103BE                     _dtoa:
  6083                           	callstack 17
  6084  0103BE                     
  6085                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6086  0103BE  C024  F03C         	movff	dtoa@d,dtoa@n
  6087  0103C2  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  6088  0103C6  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  6089  0103CA  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  6090  0103CE  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  6091  0103D2  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  6092  0103D6  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  6093  0103DA  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  6094  0103DE                     
  6095                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6096  0103DE  BE43               	btfsc	(dtoa@n+7)^0,7,c
  6097  0103E0  EFF4  F081         	goto	u1861
  6098  0103E4  EFF7  F081         	goto	u1860
  6099  0103E8                     u1861:
  6100  0103E8  0E01               	movlw	1
  6101  0103EA  EFF8  F081         	goto	u1870
  6102  0103EE                     u1860:
  6103  0103EE  0E00               	movlw	0
  6104  0103F0                     u1870:
  6105  0103F0  6E3A               	movwf	dtoa@s^0,c
  6106  0103F2  6A3B               	clrf	(dtoa@s+1)^0,c
  6107                           
  6108                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6109  0103F4  503A               	movf	dtoa@s^0,w,c
  6110  0103F6  103B               	iorwf	(dtoa@s+1)^0,w,c
  6111  0103F8  B4D8               	btfsc	status,2,c
  6112  0103FA  EF01  F082         	goto	u1881
  6113  0103FE  EF03  F082         	goto	u1880
  6114  010402                     u1881:
  6115  010402  EF13  F082         	goto	l3315
  6116  010406                     u1880:
  6117  010406                     
  6118                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6119  010406  1E43               	comf	(dtoa@n+7)^0,f,c
  6120  010408  1E42               	comf	(dtoa@n+6)^0,f,c
  6121  01040A  1E41               	comf	(dtoa@n+5)^0,f,c
  6122  01040C  1E40               	comf	(dtoa@n+4)^0,f,c
  6123  01040E  1E3F               	comf	(dtoa@n+3)^0,f,c
  6124  010410  1E3E               	comf	(dtoa@n+2)^0,f,c
  6125  010412  1E3D               	comf	(dtoa@n+1)^0,f,c
  6126  010414  6C3C               	negf	dtoa@n^0,c
  6127  010416  0E00               	movlw	0
  6128  010418  223D               	addwfc	(dtoa@n+1)^0,f,c
  6129  01041A  223E               	addwfc	(dtoa@n+2)^0,f,c
  6130  01041C  223F               	addwfc	(dtoa@n+3)^0,f,c
  6131  01041E  2240               	addwfc	(dtoa@n+4)^0,f,c
  6132  010420  2241               	addwfc	(dtoa@n+5)^0,f,c
  6133  010422  2242               	addwfc	(dtoa@n+6)^0,f,c
  6134  010424  2243               	addwfc	(dtoa@n+7)^0,f,c
  6135  010426                     l3315:
  6136                           
  6137                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6138  010426  BE54               	btfsc	(_prec+1)^0,7,c
  6139  010428  EF18  F082         	goto	u1891
  6140  01042C  EF1A  F082         	goto	u1890
  6141  010430                     u1891:
  6142  010430  EF1B  F082         	goto	l3319
  6143  010434                     u1890:
  6144  010434                     
  6145                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6146  010434  9255               	bcf	_flags^0,1,c
  6147  010436                     l3319:
  6148                           
  6149                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6150  010436  BE54               	btfsc	(_prec+1)^0,7,c
  6151  010438  EF28  F082         	goto	u1900
  6152  01043C  5054               	movf	(_prec+1)^0,w,c
  6153  01043E  E106               	bnz	u1901
  6154  010440  0453               	decf	_prec^0,w,c
  6155  010442  B0D8               	btfsc	status,0,c
  6156  010444  EF26  F082         	goto	u1901
  6157  010448  EF28  F082         	goto	u1900
  6158  01044C                     u1901:
  6159  01044C  EF2E  F082         	goto	l1596
  6160  010450                     u1900:
  6161  010450  0E00               	movlw	0
  6162  010452  6E37               	movwf	(dtoa@p+1)^0,c
  6163  010454  0E01               	movlw	1
  6164  010456  6E36               	movwf	dtoa@p^0,c
  6165  010458  EF32  F082         	goto	l1598
  6166  01045C                     l1596:
  6167  01045C  C053  F036         	movff	_prec,dtoa@p
  6168  010460  C054  F037         	movff	_prec+1,dtoa@p+1
  6169  010464                     l1598:
  6170                           
  6171                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6172  010464  C0AD  F038         	movff	_width,dtoa@w
  6173  010468  C0AE  F039         	movff	_width+1,dtoa@w+1
  6174  01046C                     
  6175                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6176  01046C  503A               	movf	dtoa@s^0,w,c
  6177  01046E  103B               	iorwf	(dtoa@s+1)^0,w,c
  6178  010470  A4D8               	btfss	status,2,c
  6179  010472  EF3D  F082         	goto	u1911
  6180  010476  EF3F  F082         	goto	u1910
  6181  01047A                     u1911:
  6182  01047A  EF46  F082         	goto	l3327
  6183  01047E                     u1910:
  6184  01047E  A455               	btfss	_flags^0,2,c
  6185  010480  EF44  F082         	goto	u1921
  6186  010484  EF46  F082         	goto	u1920
  6187  010488                     u1921:
  6188  010488  EF49  F082         	goto	l3329
  6189  01048C                     u1920:
  6190  01048C                     l3327:
  6191                           
  6192                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  6193  01048C  0638               	decf	dtoa@w^0,f,c
  6194  01048E  A0D8               	btfss	status,0,c
  6195  010490  0639               	decf	(dtoa@w+1)^0,f,c
  6196  010492                     l3329:
  6197                           
  6198                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6199  010492  0E00               	movlw	0
  6200  010494  6E45               	movwf	(dtoa@i+1)^0,c
  6201  010496  0E1F               	movlw	31
  6202  010498  6E44               	movwf	dtoa@i^0,c
  6203  01049A                     
  6204                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6205  01049A  0E00               	movlw	0
  6206  01049C  0100               	movlb	0	; () banked
  6207  01049E  6FD3               	movwf	(_dbuf+31)& (0+255),b
  6208                           
  6209                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6210  0104A0  EFCE  F082         	goto	l3343
  6211  0104A4                     l3333:
  6212                           
  6213                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  6214  0104A4  0644               	decf	dtoa@i^0,f,c
  6215  0104A6  A0D8               	btfss	status,0,c
  6216  0104A8  0645               	decf	(dtoa@i+1)^0,f,c
  6217  0104AA                     
  6218                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6219  0104AA  0EB4               	movlw	low _dbuf
  6220  0104AC  2444               	addwf	dtoa@i^0,w,c
  6221  0104AE  6ED9               	movwf	fsr2l,c
  6222  0104B0  0E00               	movlw	high _dbuf
  6223  0104B2  2045               	addwfc	(dtoa@i+1)^0,w,c
  6224  0104B4  6EDA               	movwf	fsr2h,c
  6225  0104B6  C03C  F007         	movff	dtoa@n,___aomod@dividend
  6226  0104BA  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  6227  0104BE  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  6228  0104C2  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  6229  0104C6  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  6230  0104CA  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  6231  0104CE  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  6232  0104D2  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  6233  0104D6  0E0A               	movlw	10
  6234  0104D8  6E0F               	movwf	___aomod@divisor^0,c
  6235  0104DA  0E00               	movlw	0
  6236  0104DC  6E10               	movwf	(___aomod@divisor+1)^0,c
  6237  0104DE  0E00               	movlw	0
  6238  0104E0  6E11               	movwf	(___aomod@divisor+2)^0,c
  6239  0104E2  0E00               	movlw	0
  6240  0104E4  6E12               	movwf	(___aomod@divisor+3)^0,c
  6241  0104E6  0E00               	movlw	0
  6242  0104E8  6E13               	movwf	(___aomod@divisor+4)^0,c
  6243  0104EA  0E00               	movlw	0
  6244  0104EC  6E14               	movwf	(___aomod@divisor+5)^0,c
  6245  0104EE  0E00               	movlw	0
  6246  0104F0  6E15               	movwf	(___aomod@divisor+6)^0,c
  6247  0104F2  0E00               	movlw	0
  6248  0104F4  6E16               	movwf	(___aomod@divisor+7)^0,c
  6249  0104F6  ECB0  F087         	call	___aomod	;wreg free
  6250  0104FA  C007  F02C         	movff	?___aomod,??_dtoa
  6251  0104FE  C008  F02D         	movff	?___aomod+1,??_dtoa+1
  6252  010502  C009  F02E         	movff	?___aomod+2,??_dtoa+2
  6253  010506  C00A  F02F         	movff	?___aomod+3,??_dtoa+3
  6254  01050A  C00B  F030         	movff	?___aomod+4,??_dtoa+4
  6255  01050E  C00C  F031         	movff	?___aomod+5,??_dtoa+5
  6256  010512  C00D  F032         	movff	?___aomod+6,??_dtoa+6
  6257  010516  C00E  F033         	movff	?___aomod+7,??_dtoa+7
  6258  01051A  C02C  F019         	movff	??_dtoa,abs@a
  6259  01051E  C02E  F01A         	movff	??_dtoa+2,abs@a+1
  6260  010522  EC31  F08D         	call	_abs	;wreg free
  6261  010526  5019               	movf	?_abs^0,w,c
  6262  010528  0F30               	addlw	48
  6263  01052A  6EDF               	movwf	indf2,c
  6264  01052C                     
  6265                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  6266  01052C  0636               	decf	dtoa@p^0,f,c
  6267  01052E  A0D8               	btfss	status,0,c
  6268  010530  0637               	decf	(dtoa@p+1)^0,f,c
  6269  010532                     
  6270                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  6271  010532  0638               	decf	dtoa@w^0,f,c
  6272  010534  A0D8               	btfss	status,0,c
  6273  010536  0639               	decf	(dtoa@w+1)^0,f,c
  6274  010538                     
  6275                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6276  010538  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  6277  01053C  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  6278  010540  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  6279  010544  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  6280  010548  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  6281  01054C  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  6282  010550  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  6283  010554  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  6284  010558  0E0A               	movlw	10
  6285  01055A  6E0F               	movwf	___aodiv@divisor^0,c
  6286  01055C  0E00               	movlw	0
  6287  01055E  6E10               	movwf	(___aodiv@divisor+1)^0,c
  6288  010560  0E00               	movlw	0
  6289  010562  6E11               	movwf	(___aodiv@divisor+2)^0,c
  6290  010564  0E00               	movlw	0
  6291  010566  6E12               	movwf	(___aodiv@divisor+3)^0,c
  6292  010568  0E00               	movlw	0
  6293  01056A  6E13               	movwf	(___aodiv@divisor+4)^0,c
  6294  01056C  0E00               	movlw	0
  6295  01056E  6E14               	movwf	(___aodiv@divisor+5)^0,c
  6296  010570  0E00               	movlw	0
  6297  010572  6E15               	movwf	(___aodiv@divisor+6)^0,c
  6298  010574  0E00               	movlw	0
  6299  010576  6E16               	movwf	(___aodiv@divisor+7)^0,c
  6300  010578  ECEC  F086         	call	___aodiv	;wreg free
  6301  01057C  C007  F03C         	movff	?___aodiv,dtoa@n
  6302  010580  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  6303  010584  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  6304  010588  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  6305  01058C  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  6306  010590  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  6307  010594  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  6308  010598  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  6309  01059C                     l3343:
  6310                           
  6311                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6312  01059C  BE45               	btfsc	(dtoa@i+1)^0,7,c
  6313  01059E  EFD9  F082         	goto	u1931
  6314  0105A2  5045               	movf	(dtoa@i+1)^0,w,c
  6315  0105A4  E108               	bnz	u1930
  6316  0105A6  0444               	decf	dtoa@i^0,w,c
  6317  0105A8  A0D8               	btfss	status,0,c
  6318  0105AA  EFD9  F082         	goto	u1931
  6319  0105AE  EFDB  F082         	goto	u1930
  6320  0105B2                     u1931:
  6321  0105B2  EF0B  F083         	goto	l3353
  6322  0105B6                     u1930:
  6323  0105B6  503C               	movf	dtoa@n^0,w,c
  6324  0105B8  103D               	iorwf	(dtoa@n+1)^0,w,c
  6325  0105BA  103E               	iorwf	(dtoa@n+2)^0,w,c
  6326  0105BC  103F               	iorwf	(dtoa@n+3)^0,w,c
  6327  0105BE  1040               	iorwf	(dtoa@n+4)^0,w,c
  6328  0105C0  1041               	iorwf	(dtoa@n+5)^0,w,c
  6329  0105C2  1042               	iorwf	(dtoa@n+6)^0,w,c
  6330  0105C4  1043               	iorwf	(dtoa@n+7)^0,w,c
  6331  0105C6  A4D8               	btfss	status,2,c
  6332  0105C8  EFE8  F082         	goto	u1941
  6333  0105CC  EFEA  F082         	goto	u1940
  6334  0105D0                     u1941:
  6335  0105D0  EF52  F082         	goto	l3333
  6336  0105D4                     u1940:
  6337  0105D4  BE37               	btfsc	(dtoa@p+1)^0,7,c
  6338  0105D6  EFF7  F082         	goto	u1950
  6339  0105DA  5037               	movf	(dtoa@p+1)^0,w,c
  6340  0105DC  E106               	bnz	u1951
  6341  0105DE  0436               	decf	dtoa@p^0,w,c
  6342  0105E0  B0D8               	btfsc	status,0,c
  6343  0105E2  EFF5  F082         	goto	u1951
  6344  0105E6  EFF7  F082         	goto	u1950
  6345  0105EA                     u1951:
  6346  0105EA  EF52  F082         	goto	l3333
  6347  0105EE                     u1950:
  6348  0105EE  BE39               	btfsc	(dtoa@w+1)^0,7,c
  6349  0105F0  EF02  F083         	goto	u1961
  6350  0105F4  5039               	movf	(dtoa@w+1)^0,w,c
  6351  0105F6  E108               	bnz	u1960
  6352  0105F8  0438               	decf	dtoa@w^0,w,c
  6353  0105FA  A0D8               	btfss	status,0,c
  6354  0105FC  EF02  F083         	goto	u1961
  6355  010600  EF04  F083         	goto	u1960
  6356  010604                     u1961:
  6357  010604  EF0B  F083         	goto	l3353
  6358  010608                     u1960:
  6359  010608  B255               	btfsc	_flags^0,1,c
  6360  01060A  EF09  F083         	goto	u1971
  6361  01060E  EF0B  F083         	goto	u1970
  6362  010612                     u1971:
  6363  010612  EF52  F082         	goto	l3333
  6364  010616                     u1970:
  6365  010616                     l3353:
  6366                           
  6367                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6368  010616  503A               	movf	dtoa@s^0,w,c
  6369  010618  103B               	iorwf	(dtoa@s+1)^0,w,c
  6370  01061A  A4D8               	btfss	status,2,c
  6371  01061C  EF12  F083         	goto	u1981
  6372  010620  EF14  F083         	goto	u1980
  6373  010624                     u1981:
  6374  010624  EF1B  F083         	goto	l3357
  6375  010628                     u1980:
  6376  010628  A455               	btfss	_flags^0,2,c
  6377  01062A  EF19  F083         	goto	u1991
  6378  01062E  EF1B  F083         	goto	u1990
  6379  010632                     u1991:
  6380  010632  EF39  F083         	goto	l3367
  6381  010636                     u1990:
  6382  010636                     l3357:
  6383                           
  6384                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  6385  010636  0644               	decf	dtoa@i^0,f,c
  6386  010638  A0D8               	btfss	status,0,c
  6387  01063A  0645               	decf	(dtoa@i+1)^0,f,c
  6388  01063C                     
  6389                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6390  01063C  503A               	movf	dtoa@s^0,w,c
  6391  01063E  103B               	iorwf	(dtoa@s+1)^0,w,c
  6392  010640  A4D8               	btfss	status,2,c
  6393  010642  EF25  F083         	goto	u2001
  6394  010646  EF27  F083         	goto	u2000
  6395  01064A                     u2001:
  6396  01064A  EF2D  F083         	goto	l3363
  6397  01064E                     u2000:
  6398  01064E  0E00               	movlw	0
  6399  010650  6E35               	movwf	(_dtoa$2636+1)^0,c
  6400  010652  0E2B               	movlw	43
  6401  010654  6E34               	movwf	_dtoa$2636^0,c
  6402  010656  EF31  F083         	goto	l3365
  6403  01065A                     l3363:
  6404  01065A  0E00               	movlw	0
  6405  01065C  6E35               	movwf	(_dtoa$2636+1)^0,c
  6406  01065E  0E2D               	movlw	45
  6407  010660  6E34               	movwf	_dtoa$2636^0,c
  6408  010662                     l3365:
  6409  010662  0EB4               	movlw	low _dbuf
  6410  010664  2444               	addwf	dtoa@i^0,w,c
  6411  010666  6ED9               	movwf	fsr2l,c
  6412  010668  0E00               	movlw	high _dbuf
  6413  01066A  2045               	addwfc	(dtoa@i+1)^0,w,c
  6414  01066C  6EDA               	movwf	fsr2h,c
  6415  01066E  C034  FFDF         	movff	_dtoa$2636,indf2
  6416  010672                     l3367:
  6417                           
  6418                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6419  010672  C022  F017         	movff	dtoa@fp,pad@fp
  6420  010676  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  6421  01067A  0EB4               	movlw	low _dbuf
  6422  01067C  2444               	addwf	dtoa@i^0,w,c
  6423  01067E  6E19               	movwf	pad@buf^0,c
  6424  010680  0E00               	movlw	high _dbuf
  6425  010682  2045               	addwfc	(dtoa@i+1)^0,w,c
  6426  010684  6E1A               	movwf	(pad@buf+1)^0,c
  6427  010686  C038  F01B         	movff	dtoa@w,pad@p
  6428  01068A  C039  F01C         	movff	dtoa@w+1,pad@p+1
  6429  01068E  ECD7  F089         	call	_pad	;wreg free
  6430  010692  C017  F022         	movff	?_pad,?_dtoa
  6431  010696  C018  F023         	movff	?_pad+1,?_dtoa+1
  6432  01069A  0012               	return		;funcret
  6433  01069C                     __end_of_dtoa:
  6434                           	callstack 0
  6435                           
  6436 ;; *************** function _pad *****************
  6437 ;; Defined at:
  6438 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  6441 ;;		 -> sprintf@f(6), 
  6442 ;;  buf             2   24[COMRAM] PTR unsigned char 
  6443 ;;		 -> dbuf(32), 
  6444 ;;  p               2   26[COMRAM] int 
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;  w               2   31[COMRAM] int 
  6447 ;;  i               2   29[COMRAM] int 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  2   22[COMRAM] int 
  6450 ;; Registers used:
  6451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6457 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6458 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6460 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6461 ;;Total ram usage:       11 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    7
  6464 ;; This function calls:
  6465 ;;		_fputc
  6466 ;;		_fputs
  6467 ;;		_strlen
  6468 ;; This function is called by:
  6469 ;;		_dtoa
  6470 ;;		_xtoa
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text45
  6475  0113AE                     __ptext45:
  6476                           	callstack 0
  6477  0113AE                     _pad:
  6478                           	callstack 17
  6479  0113AE                     
  6480                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6481  0113AE  A055               	btfss	_flags^0,0,c
  6482  0113B0  EFDC  F089         	goto	u1691
  6483  0113B4  EFDE  F089         	goto	u1690
  6484  0113B8                     u1691:
  6485  0113B8  EFE8  F089         	goto	l3245
  6486  0113BC                     u1690:
  6487  0113BC                     
  6488                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6489  0113BC  C019  F010         	movff	pad@buf,fputs@s
  6490  0113C0  C01A  F011         	movff	pad@buf+1,fputs@s+1
  6491  0113C4  C017  F012         	movff	pad@fp,fputs@fp
  6492  0113C8  C018  F013         	movff	pad@fp+1,fputs@fp+1
  6493  0113CC  ECEE  F08C         	call	_fputs	;wreg free
  6494  0113D0                     l3245:
  6495                           
  6496                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6497  0113D0  BE1C               	btfsc	(pad@p+1)^0,7,c
  6498  0113D2  EFED  F089         	goto	u1701
  6499  0113D6  EFEF  F089         	goto	u1700
  6500  0113DA                     u1701:
  6501  0113DA  EFF5  F089         	goto	l3249
  6502  0113DE                     u1700:
  6503  0113DE  C01B  F020         	movff	pad@p,pad@w
  6504  0113E2  C01C  F021         	movff	pad@p+1,pad@w+1
  6505  0113E6  EFF9  F089         	goto	l1585
  6506  0113EA                     l3249:
  6507  0113EA  0E00               	movlw	0
  6508  0113EC  6E21               	movwf	(pad@w+1)^0,c
  6509  0113EE  0E00               	movlw	0
  6510  0113F0  6E20               	movwf	pad@w^0,c
  6511  0113F2                     l1585:
  6512                           
  6513                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6514  0113F2  0E00               	movlw	0
  6515  0113F4  6E1F               	movwf	(pad@i+1)^0,c
  6516  0113F6  0E00               	movlw	0
  6517  0113F8  6E1E               	movwf	pad@i^0,c
  6518                           
  6519                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6520  0113FA  EF0B  F08A         	goto	l3255
  6521  0113FE                     l3251:
  6522                           
  6523                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6524  0113FE  0E00               	movlw	0
  6525  011400  6E08               	movwf	(fputc@c+1)^0,c
  6526  011402  0E20               	movlw	32
  6527  011404  6E07               	movwf	fputc@c^0,c
  6528  011406  C017  F009         	movff	pad@fp,fputc@fp
  6529  01140A  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  6530  01140E  EC72  F089         	call	_fputc	;wreg free
  6531  011412                     
  6532                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6533  011412  4A1E               	infsnz	pad@i^0,f,c
  6534  011414  2A1F               	incf	(pad@i+1)^0,f,c
  6535  011416                     l3255:
  6536                           
  6537                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6538  011416  5020               	movf	pad@w^0,w,c
  6539  011418  5C1E               	subwf	pad@i^0,w,c
  6540  01141A  501F               	movf	(pad@i+1)^0,w,c
  6541  01141C  0A80               	xorlw	128
  6542  01141E  6E1D               	movwf	??_pad^0,c
  6543  011420  5021               	movf	(pad@w+1)^0,w,c
  6544  011422  0A80               	xorlw	128
  6545  011424  581D               	subwfb	??_pad^0,w,c
  6546  011426  A0D8               	btfss	status,0,c
  6547  011428  EF18  F08A         	goto	u1711
  6548  01142C  EF1A  F08A         	goto	u1710
  6549  011430                     u1711:
  6550  011430  EFFF  F089         	goto	l3251
  6551  011434                     u1710:
  6552  011434                     
  6553                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6554  011434  B055               	btfsc	_flags^0,0,c
  6555  011436  EF1F  F08A         	goto	u1721
  6556  01143A  EF21  F08A         	goto	u1720
  6557  01143E                     u1721:
  6558  01143E  EF2B  F08A         	goto	l3259
  6559  011442                     u1720:
  6560  011442                     
  6561                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6562  011442  C019  F010         	movff	pad@buf,fputs@s
  6563  011446  C01A  F011         	movff	pad@buf+1,fputs@s+1
  6564  01144A  C017  F012         	movff	pad@fp,fputs@fp
  6565  01144E  C018  F013         	movff	pad@fp+1,fputs@fp+1
  6566  011452  ECEE  F08C         	call	_fputs	;wreg free
  6567  011456                     l3259:
  6568                           
  6569                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6570  011456  C019  F007         	movff	pad@buf,strlen@s
  6571  01145A  C01A  F008         	movff	pad@buf+1,strlen@s+1
  6572  01145E  EC52  F08E         	call	_strlen	;wreg free
  6573  011462  5020               	movf	pad@w^0,w,c
  6574  011464  2407               	addwf	?_strlen^0,w,c
  6575  011466  6E17               	movwf	?_pad^0,c
  6576  011468  5021               	movf	(pad@w+1)^0,w,c
  6577  01146A  2008               	addwfc	(?_strlen+1)^0,w,c
  6578  01146C  6E18               	movwf	(?_pad+1)^0,c
  6579  01146E  0012               	return		;funcret
  6580  011470                     __end_of_pad:
  6581                           	callstack 0
  6582                           
  6583 ;; *************** function _strlen *****************
  6584 ;; Defined at:
  6585 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6588 ;;		 -> dbuf(32), 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  a               2    8[COMRAM] PTR const unsigned char 
  6591 ;;		 -> dbuf(32), 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  2    6[COMRAM] unsigned int 
  6594 ;; Registers used:
  6595 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6605 ;;Total ram usage:        4 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:    4
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_pad
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text46
  6616  011CA4                     __ptext46:
  6617                           	callstack 0
  6618  011CA4                     _strlen:
  6619                           	callstack 19
  6620  011CA4  C007  F009         	movff	strlen@s,strlen@a
  6621  011CA8  C008  F00A         	movff	strlen@s+1,strlen@a+1
  6622  011CAC  EF5A  F08E         	goto	l3129
  6623  011CB0                     l3127:
  6624  011CB0  4A07               	infsnz	strlen@s^0,f,c
  6625  011CB2  2A08               	incf	(strlen@s+1)^0,f,c
  6626  011CB4                     l3129:
  6627  011CB4  C007  FFD9         	movff	strlen@s,fsr2l
  6628  011CB8  C008  FFDA         	movff	strlen@s+1,fsr2h
  6629  011CBC  50DF               	movf	indf2,w,c
  6630  011CBE  A4D8               	btfss	status,2,c
  6631  011CC0  EF64  F08E         	goto	u1531
  6632  011CC4  EF66  F08E         	goto	u1530
  6633  011CC8                     u1531:
  6634  011CC8  EF58  F08E         	goto	l3127
  6635  011CCC                     u1530:
  6636  011CCC  5009               	movf	strlen@a^0,w,c
  6637  011CCE  5C07               	subwf	strlen@s^0,w,c
  6638  011CD0  6E07               	movwf	?_strlen^0,c
  6639  011CD2  500A               	movf	(strlen@a+1)^0,w,c
  6640  011CD4  5808               	subwfb	(strlen@s+1)^0,w,c
  6641  011CD6  6E08               	movwf	(?_strlen+1)^0,c
  6642  011CD8  0012               	return		;funcret
  6643  011CDA                     __end_of_strlen:
  6644                           	callstack 0
  6645                           
  6646 ;; *************** function _fputs *****************
  6647 ;; Defined at:
  6648 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6651 ;;		 -> dbuf(32), 
  6652 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  6653 ;;		 -> sprintf@f(6), 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  i               2   20[COMRAM] int 
  6656 ;;  c               1   19[COMRAM] unsigned char 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  2   15[COMRAM] int 
  6659 ;; Registers used:
  6660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6667 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6669 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6670 ;;Total ram usage:        7 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; Hardware stack levels required when called:    6
  6673 ;; This function calls:
  6674 ;;		_fputc
  6675 ;; This function is called by:
  6676 ;;		_pad
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text47
  6681  0119DC                     __ptext47:
  6682                           	callstack 0
  6683  0119DC                     _fputs:
  6684                           	callstack 17
  6685  0119DC  0E00               	movlw	0
  6686  0119DE  6E16               	movwf	(fputs@i+1)^0,c
  6687  0119E0  0E00               	movlw	0
  6688  0119E2  6E15               	movwf	fputs@i^0,c
  6689  0119E4  EFFF  F08C         	goto	l3123
  6690  0119E8                     l3119:
  6691  0119E8  C014  F007         	movff	fputs@c,fputc@c
  6692  0119EC  6A08               	clrf	(fputc@c+1)^0,c
  6693  0119EE  C012  F009         	movff	fputs@fp,fputc@fp
  6694  0119F2  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  6695  0119F6  EC72  F089         	call	_fputc	;wreg free
  6696  0119FA  4A15               	infsnz	fputs@i^0,f,c
  6697  0119FC  2A16               	incf	(fputs@i+1)^0,f,c
  6698  0119FE                     l3123:
  6699  0119FE  5015               	movf	fputs@i^0,w,c
  6700  011A00  2410               	addwf	fputs@s^0,w,c
  6701  011A02  6ED9               	movwf	fsr2l,c
  6702  011A04  5016               	movf	(fputs@i+1)^0,w,c
  6703  011A06  2011               	addwfc	(fputs@s+1)^0,w,c
  6704  011A08  6EDA               	movwf	fsr2h,c
  6705  011A0A  50DF               	movf	indf2,w,c
  6706  011A0C  6E14               	movwf	fputs@c^0,c
  6707  011A0E  5014               	movf	fputs@c^0,w,c
  6708  011A10  A4D8               	btfss	status,2,c
  6709  011A12  EF0D  F08D         	goto	u1521
  6710  011A16  EF0F  F08D         	goto	u1520
  6711  011A1A                     u1521:
  6712  011A1A  EFF4  F08C         	goto	l3119
  6713  011A1E                     u1520:
  6714  011A1E  0012               	return		;funcret
  6715  011A20                     __end_of_fputs:
  6716                           	callstack 0
  6717                           
  6718 ;; *************** function _fputc *****************
  6719 ;; Defined at:
  6720 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;  c               2    6[COMRAM] int 
  6723 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  6724 ;;		 -> sprintf@f(6), 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  2    6[COMRAM] int 
  6729 ;; Registers used:
  6730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6738 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6739 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6740 ;;Total ram usage:        9 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:    5
  6743 ;; This function calls:
  6744 ;;		_putch
  6745 ;; This function is called by:
  6746 ;;		_pad
  6747 ;;		_vfpfcnvrt
  6748 ;;		_fputs
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text48
  6753  0112E4                     __ptext48:
  6754                           	callstack 0
  6755  0112E4                     _fputc:
  6756                           	callstack 17
  6757  0112E4  5009               	movf	fputc@fp^0,w,c
  6758  0112E6  100A               	iorwf	(fputc@fp+1)^0,w,c
  6759  0112E8  B4D8               	btfsc	status,2,c
  6760  0112EA  EF79  F089         	goto	u1471
  6761  0112EE  EF7B  F089         	goto	u1470
  6762  0112F2                     u1471:
  6763  0112F2  EF84  F089         	goto	l3083
  6764  0112F6                     u1470:
  6765  0112F6  5009               	movf	fputc@fp^0,w,c
  6766  0112F8  100A               	iorwf	(fputc@fp+1)^0,w,c
  6767  0112FA  A4D8               	btfss	status,2,c
  6768  0112FC  EF82  F089         	goto	u1481
  6769  011300  EF84  F089         	goto	u1480
  6770  011304                     u1481:
  6771  011304  EF89  F089         	goto	l3085
  6772  011308                     u1480:
  6773  011308                     l3083:
  6774  011308  5007               	movf	fputc@c^0,w,c
  6775  01130A  ECC6  F090         	call	_putch
  6776  01130E  EFD6  F089         	goto	l1749
  6777  011312                     l3085:
  6778  011312  EE20 F004          	lfsr	2,4
  6779  011316  5009               	movf	fputc@fp^0,w,c
  6780  011318  26D9               	addwf	fsr2l,f,c
  6781  01131A  500A               	movf	(fputc@fp+1)^0,w,c
  6782  01131C  22DA               	addwfc	fsr2h,f,c
  6783  01131E  50DE               	movf	postinc2,w,c
  6784  011320  10DE               	iorwf	postinc2,w,c
  6785  011322  B4D8               	btfsc	status,2,c
  6786  011324  EF96  F089         	goto	u1491
  6787  011328  EF98  F089         	goto	u1490
  6788  01132C                     u1491:
  6789  01132C  EFB3  F089         	goto	l3089
  6790  011330                     u1490:
  6791  011330  EE20 F004          	lfsr	2,4
  6792  011334  5009               	movf	fputc@fp^0,w,c
  6793  011336  26D9               	addwf	fsr2l,f,c
  6794  011338  500A               	movf	(fputc@fp+1)^0,w,c
  6795  01133A  22DA               	addwfc	fsr2h,f,c
  6796  01133C  EE10 F002          	lfsr	1,2
  6797  011340  5009               	movf	fputc@fp^0,w,c
  6798  011342  26E1               	addwf	fsr1l,f,c
  6799  011344  500A               	movf	(fputc@fp+1)^0,w,c
  6800  011346  22E2               	addwfc	fsr1h,f,c
  6801  011348  50DE               	movf	postinc2,w,c
  6802  01134A  5CE6               	subwf	postinc1,w,c
  6803  01134C  50E6               	movf	postinc1,w,c
  6804  01134E  0A80               	xorlw	128
  6805  011350  6E0F               	movwf	(??_fputc+4)^0,c
  6806  011352  50DE               	movf	postinc2,w,c
  6807  011354  0A80               	xorlw	128
  6808  011356  580F               	subwfb	(??_fputc+4)^0,w,c
  6809  011358  B0D8               	btfsc	status,0,c
  6810  01135A  EFB1  F089         	goto	u1501
  6811  01135E  EFB3  F089         	goto	u1500
  6812  011362                     u1501:
  6813  011362  EFD6  F089         	goto	l1749
  6814  011366                     u1500:
  6815  011366                     l3089:
  6816  011366  EE20 F002          	lfsr	2,2
  6817  01136A  5009               	movf	fputc@fp^0,w,c
  6818  01136C  26D9               	addwf	fsr2l,f,c
  6819  01136E  500A               	movf	(fputc@fp+1)^0,w,c
  6820  011370  22DA               	addwfc	fsr2h,f,c
  6821  011372  CFDE F00B          	movff	postinc2,??_fputc
  6822  011376  CFDD F00C          	movff	postdec2,??_fputc+1
  6823  01137A  C009  FFD9         	movff	fputc@fp,fsr2l
  6824  01137E  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  6825  011382  CFDE F00D          	movff	postinc2,??_fputc+2
  6826  011386  CFDD F00E          	movff	postdec2,??_fputc+3
  6827  01138A  500B               	movf	??_fputc^0,w,c
  6828  01138C  240D               	addwf	(??_fputc+2)^0,w,c
  6829  01138E  6ED9               	movwf	fsr2l,c
  6830  011390  500C               	movf	(??_fputc+1)^0,w,c
  6831  011392  200E               	addwfc	(??_fputc+3)^0,w,c
  6832  011394  6EDA               	movwf	fsr2h,c
  6833  011396  C007  FFDF         	movff	fputc@c,indf2
  6834  01139A  EE20 F002          	lfsr	2,2
  6835  01139E  5009               	movf	fputc@fp^0,w,c
  6836  0113A0  26D9               	addwf	fsr2l,f,c
  6837  0113A2  500A               	movf	(fputc@fp+1)^0,w,c
  6838  0113A4  22DA               	addwfc	fsr2h,f,c
  6839  0113A6  2ADE               	incf	postinc2,f,c
  6840  0113A8  0E00               	movlw	0
  6841  0113AA  22DD               	addwfc	postdec2,f,c
  6842  0113AC                     l1749:
  6843  0113AC  0012               	return		;funcret
  6844  0113AE                     __end_of_fputc:
  6845                           	callstack 0
  6846                           
  6847 ;; *************** function _putch *****************
  6848 ;; Defined at:
  6849 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  c               1    wreg     unsigned char 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;  c               1    0[COMRAM] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    4
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_fputc
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text49
  6878  01218C                     __ptext49:
  6879                           	callstack 0
  6880  01218C                     _putch:
  6881                           	callstack 17
  6882  01218C  0012               	return		;funcret
  6883  01218E                     __end_of_putch:
  6884                           	callstack 0
  6885                           
  6886 ;; *************** function _abs *****************
  6887 ;; Defined at:
  6888 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  a               2   24[COMRAM] int 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;		None
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  2   24[COMRAM] int 
  6895 ;; Registers used:
  6896 ;;		wreg, status,2, status,0
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6905 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6906 ;;Total ram usage:        4 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:    4
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_dtoa
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text50
  6917  011A62                     __ptext50:
  6918                           	callstack 0
  6919  011A62                     _abs:
  6920                           	callstack 20
  6921  011A62  BE1A               	btfsc	(abs@a+1)^0,7,c
  6922  011A64  EF3E  F08D         	goto	u1730
  6923  011A68  501A               	movf	(abs@a+1)^0,w,c
  6924  011A6A  E106               	bnz	u1731
  6925  011A6C  0419               	decf	abs@a^0,w,c
  6926  011A6E  B0D8               	btfsc	status,0,c
  6927  011A70  EF3C  F08D         	goto	u1731
  6928  011A74  EF3E  F08D         	goto	u1730
  6929  011A78                     u1731:
  6930  011A78  EF4C  F08D         	goto	l1677
  6931  011A7C                     u1730:
  6932  011A7C  C019  F01B         	movff	abs@a,??_abs
  6933  011A80  C01A  F01C         	movff	abs@a+1,??_abs+1
  6934  011A84  1E1B               	comf	??_abs^0,f,c
  6935  011A86  1E1C               	comf	(??_abs+1)^0,f,c
  6936  011A88  4A1B               	infsnz	??_abs^0,f,c
  6937  011A8A  2A1C               	incf	(??_abs+1)^0,f,c
  6938  011A8C  C01B  F019         	movff	??_abs,?_abs
  6939  011A90  C01C  F01A         	movff	??_abs+1,?_abs+1
  6940  011A94  EF50  F08D         	goto	l1680
  6941  011A98                     l1677:
  6942  011A98  C019  F019         	movff	abs@a,?_abs
  6943  011A9C  C01A  F01A         	movff	abs@a+1,?_abs+1
  6944  011AA0                     l1680:
  6945  011AA0  0012               	return		;funcret
  6946  011AA2                     __end_of_abs:
  6947                           	callstack 0
  6948                           
  6949 ;; *************** function ___aomod *****************
  6950 ;; Defined at:
  6951 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  dividend        8    6[COMRAM] long long 
  6954 ;;  divisor         8   14[COMRAM] long long 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  sign            1   23[COMRAM] unsigned char 
  6957 ;;  counter         1   22[COMRAM] unsigned char 
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  8    6[COMRAM] long long 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2, status,0
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6967 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;Total ram usage:       18 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:    4
  6974 ;; This function calls:
  6975 ;;		Nothing
  6976 ;; This function is called by:
  6977 ;;		_dtoa
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text51
  6982  010F60                     __ptext51:
  6983                           	callstack 0
  6984  010F60                     ___aomod:
  6985                           	callstack 20
  6986  010F60  0E00               	movlw	0
  6987  010F62  6E18               	movwf	___aomod@sign^0,c
  6988  010F64  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  6989  010F66  EFB9  F087         	goto	u1630
  6990  010F6A  EFB7  F087         	goto	u1631
  6991  010F6E                     u1631:
  6992  010F6E  EFCB  F087         	goto	l3213
  6993  010F72                     u1630:
  6994  010F72  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  6995  010F74  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  6996  010F76  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  6997  010F78  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  6998  010F7A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  6999  010F7C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  7000  010F7E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  7001  010F80  6C07               	negf	___aomod@dividend^0,c
  7002  010F82  0E00               	movlw	0
  7003  010F84  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  7004  010F86  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  7005  010F88  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  7006  010F8A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  7007  010F8C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  7008  010F8E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  7009  010F90  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  7010  010F92  0E01               	movlw	1
  7011  010F94  6E18               	movwf	___aomod@sign^0,c
  7012  010F96                     l3213:
  7013  010F96  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  7014  010F98  EFD2  F087         	goto	u1640
  7015  010F9C  EFD0  F087         	goto	u1641
  7016  010FA0                     u1641:
  7017  010FA0  EFE2  F087         	goto	l3217
  7018  010FA4                     u1640:
  7019  010FA4  1E16               	comf	(___aomod@divisor+7)^0,f,c
  7020  010FA6  1E15               	comf	(___aomod@divisor+6)^0,f,c
  7021  010FA8  1E14               	comf	(___aomod@divisor+5)^0,f,c
  7022  010FAA  1E13               	comf	(___aomod@divisor+4)^0,f,c
  7023  010FAC  1E12               	comf	(___aomod@divisor+3)^0,f,c
  7024  010FAE  1E11               	comf	(___aomod@divisor+2)^0,f,c
  7025  010FB0  1E10               	comf	(___aomod@divisor+1)^0,f,c
  7026  010FB2  6C0F               	negf	___aomod@divisor^0,c
  7027  010FB4  0E00               	movlw	0
  7028  010FB6  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  7029  010FB8  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  7030  010FBA  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  7031  010FBC  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  7032  010FBE  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  7033  010FC0  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  7034  010FC2  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  7035  010FC4                     l3217:
  7036  010FC4  500F               	movf	___aomod@divisor^0,w,c
  7037  010FC6  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  7038  010FC8  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  7039  010FCA  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  7040  010FCC  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  7041  010FCE  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  7042  010FD0  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  7043  010FD2  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  7044  010FD4  B4D8               	btfsc	status,2,c
  7045  010FD6  EFEF  F087         	goto	u1651
  7046  010FDA  EFF1  F087         	goto	u1650
  7047  010FDE                     u1651:
  7048  010FDE  EF39  F088         	goto	l3233
  7049  010FE2                     u1650:
  7050  010FE2  0E01               	movlw	1
  7051  010FE4  6E17               	movwf	___aomod@counter^0,c
  7052  010FE6  EFFF  F087         	goto	l3223
  7053  010FEA                     l3221:
  7054  010FEA  90D8               	bcf	status,0,c
  7055  010FEC  360F               	rlcf	___aomod@divisor^0,f,c
  7056  010FEE  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  7057  010FF0  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  7058  010FF2  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  7059  010FF4  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  7060  010FF6  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  7061  010FF8  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  7062  010FFA  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  7063  010FFC  2A17               	incf	___aomod@counter^0,f,c
  7064  010FFE                     l3223:
  7065  010FFE  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  7066  011000  EF04  F088         	goto	u1661
  7067  011004  EF06  F088         	goto	u1660
  7068  011008                     u1661:
  7069  011008  EFF5  F087         	goto	l3221
  7070  01100C                     u1660:
  7071  01100C                     l3225:
  7072  01100C  500F               	movf	___aomod@divisor^0,w,c
  7073  01100E  5C07               	subwf	___aomod@dividend^0,w,c
  7074  011010  5010               	movf	(___aomod@divisor+1)^0,w,c
  7075  011012  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  7076  011014  5011               	movf	(___aomod@divisor+2)^0,w,c
  7077  011016  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  7078  011018  5012               	movf	(___aomod@divisor+3)^0,w,c
  7079  01101A  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  7080  01101C  5013               	movf	(___aomod@divisor+4)^0,w,c
  7081  01101E  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  7082  011020  5014               	movf	(___aomod@divisor+5)^0,w,c
  7083  011022  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  7084  011024  5015               	movf	(___aomod@divisor+6)^0,w,c
  7085  011026  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  7086  011028  5016               	movf	(___aomod@divisor+7)^0,w,c
  7087  01102A  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  7088  01102C  A0D8               	btfss	status,0,c
  7089  01102E  EF1B  F088         	goto	u1671
  7090  011032  EF1D  F088         	goto	u1670
  7091  011036                     u1671:
  7092  011036  EF2D  F088         	goto	l3229
  7093  01103A                     u1670:
  7094  01103A  500F               	movf	___aomod@divisor^0,w,c
  7095  01103C  5E07               	subwf	___aomod@dividend^0,f,c
  7096  01103E  5010               	movf	(___aomod@divisor+1)^0,w,c
  7097  011040  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  7098  011042  5011               	movf	(___aomod@divisor+2)^0,w,c
  7099  011044  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  7100  011046  5012               	movf	(___aomod@divisor+3)^0,w,c
  7101  011048  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  7102  01104A  5013               	movf	(___aomod@divisor+4)^0,w,c
  7103  01104C  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  7104  01104E  5014               	movf	(___aomod@divisor+5)^0,w,c
  7105  011050  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  7106  011052  5015               	movf	(___aomod@divisor+6)^0,w,c
  7107  011054  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  7108  011056  5016               	movf	(___aomod@divisor+7)^0,w,c
  7109  011058  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  7110  01105A                     l3229:
  7111  01105A  90D8               	bcf	status,0,c
  7112  01105C  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  7113  01105E  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  7114  011060  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  7115  011062  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  7116  011064  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  7117  011066  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  7118  011068  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  7119  01106A  320F               	rrcf	___aomod@divisor^0,f,c
  7120  01106C  2E17               	decfsz	___aomod@counter^0,f,c
  7121  01106E  EF06  F088         	goto	l3225
  7122  011072                     l3233:
  7123  011072  5018               	movf	___aomod@sign^0,w,c
  7124  011074  B4D8               	btfsc	status,2,c
  7125  011076  EF3F  F088         	goto	u1681
  7126  01107A  EF41  F088         	goto	u1680
  7127  01107E                     u1681:
  7128  01107E  EF51  F088         	goto	l3237
  7129  011082                     u1680:
  7130  011082  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  7131  011084  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  7132  011086  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  7133  011088  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  7134  01108A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  7135  01108C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  7136  01108E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  7137  011090  6C07               	negf	___aomod@dividend^0,c
  7138  011092  0E00               	movlw	0
  7139  011094  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  7140  011096  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  7141  011098  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  7142  01109A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  7143  01109C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  7144  01109E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  7145  0110A0  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  7146  0110A2                     l3237:
  7147  0110A2  C007  F007         	movff	___aomod@dividend,?___aomod
  7148  0110A6  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  7149  0110AA  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  7150  0110AE  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  7151  0110B2  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  7152  0110B6  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  7153  0110BA  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  7154  0110BE  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  7155  0110C2  0012               	return		;funcret
  7156  0110C4                     __end_of___aomod:
  7157                           	callstack 0
  7158                           
  7159 ;; *************** function ___aodiv *****************
  7160 ;; Defined at:
  7161 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  dividend        8    6[COMRAM] long long 
  7164 ;;  divisor         8   14[COMRAM] long long 
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;  quotient        8   24[COMRAM] long long 
  7167 ;;  sign            1   23[COMRAM] unsigned char 
  7168 ;;  counter         1   22[COMRAM] unsigned char 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  8    6[COMRAM] long long 
  7171 ;; Registers used:
  7172 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7178 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7179 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7181 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7182 ;;Total ram usage:       26 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    4
  7185 ;; This function calls:
  7186 ;;		Nothing
  7187 ;; This function is called by:
  7188 ;;		_dtoa
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           	psect	text52
  7193  010DD8                     __ptext52:
  7194                           	callstack 0
  7195  010DD8                     ___aodiv:
  7196                           	callstack 20
  7197  010DD8  0E00               	movlw	0
  7198  010DDA  6E18               	movwf	___aodiv@sign^0,c
  7199  010DDC  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  7200  010DDE  EFF5  F086         	goto	u1560
  7201  010DE2  EFF3  F086         	goto	u1561
  7202  010DE6                     u1561:
  7203  010DE6  EF07  F087         	goto	l3169
  7204  010DEA                     u1560:
  7205  010DEA  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  7206  010DEC  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  7207  010DEE  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  7208  010DF0  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  7209  010DF2  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  7210  010DF4  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  7211  010DF6  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  7212  010DF8  6C0F               	negf	___aodiv@divisor^0,c
  7213  010DFA  0E00               	movlw	0
  7214  010DFC  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  7215  010DFE  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  7216  010E00  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  7217  010E02  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  7218  010E04  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  7219  010E06  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  7220  010E08  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  7221  010E0A  0E01               	movlw	1
  7222  010E0C  6E18               	movwf	___aodiv@sign^0,c
  7223  010E0E                     l3169:
  7224  010E0E  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  7225  010E10  EF0E  F087         	goto	u1570
  7226  010E14  EF0C  F087         	goto	u1571
  7227  010E18                     u1571:
  7228  010E18  EF20  F087         	goto	l3175
  7229  010E1C                     u1570:
  7230  010E1C  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  7231  010E1E  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  7232  010E20  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  7233  010E22  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  7234  010E24  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  7235  010E26  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  7236  010E28  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  7237  010E2A  6C07               	negf	___aodiv@dividend^0,c
  7238  010E2C  0E00               	movlw	0
  7239  010E2E  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  7240  010E30  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  7241  010E32  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  7242  010E34  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  7243  010E36  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  7244  010E38  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  7245  010E3A  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  7246  010E3C  0E01               	movlw	1
  7247  010E3E  1A18               	xorwf	___aodiv@sign^0,f,c
  7248  010E40                     l3175:
  7249  010E40  EE20  F019         	lfsr	2,___aodiv@quotient
  7250  010E44  0E07               	movlw	7
  7251  010E46                     u1581:
  7252  010E46  6ADE               	clrf	postinc2,c
  7253  010E48  06E8               	decf	wreg,f,c
  7254  010E4A  E2FD               	bc	u1581
  7255  010E4C  500F               	movf	___aodiv@divisor^0,w,c
  7256  010E4E  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  7257  010E50  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  7258  010E52  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  7259  010E54  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  7260  010E56  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  7261  010E58  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  7262  010E5A  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  7263  010E5C  B4D8               	btfsc	status,2,c
  7264  010E5E  EF33  F087         	goto	u1591
  7265  010E62  EF35  F087         	goto	u1590
  7266  010E66                     u1591:
  7267  010E66  EF87  F087         	goto	l3197
  7268  010E6A                     u1590:
  7269  010E6A  0E01               	movlw	1
  7270  010E6C  6E17               	movwf	___aodiv@counter^0,c
  7271  010E6E  EF43  F087         	goto	l3183
  7272  010E72                     l3181:
  7273  010E72  90D8               	bcf	status,0,c
  7274  010E74  360F               	rlcf	___aodiv@divisor^0,f,c
  7275  010E76  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  7276  010E78  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  7277  010E7A  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  7278  010E7C  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  7279  010E7E  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  7280  010E80  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  7281  010E82  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  7282  010E84  2A17               	incf	___aodiv@counter^0,f,c
  7283  010E86                     l3183:
  7284  010E86  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  7285  010E88  EF48  F087         	goto	u1601
  7286  010E8C  EF4A  F087         	goto	u1600
  7287  010E90                     u1601:
  7288  010E90  EF39  F087         	goto	l3181
  7289  010E94                     u1600:
  7290  010E94                     l3185:
  7291  010E94  90D8               	bcf	status,0,c
  7292  010E96  3619               	rlcf	___aodiv@quotient^0,f,c
  7293  010E98  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  7294  010E9A  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  7295  010E9C  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  7296  010E9E  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  7297  010EA0  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  7298  010EA2  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  7299  010EA4  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  7300  010EA6  500F               	movf	___aodiv@divisor^0,w,c
  7301  010EA8  5C07               	subwf	___aodiv@dividend^0,w,c
  7302  010EAA  5010               	movf	(___aodiv@divisor+1)^0,w,c
  7303  010EAC  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  7304  010EAE  5011               	movf	(___aodiv@divisor+2)^0,w,c
  7305  010EB0  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  7306  010EB2  5012               	movf	(___aodiv@divisor+3)^0,w,c
  7307  010EB4  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  7308  010EB6  5013               	movf	(___aodiv@divisor+4)^0,w,c
  7309  010EB8  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  7310  010EBA  5014               	movf	(___aodiv@divisor+5)^0,w,c
  7311  010EBC  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  7312  010EBE  5015               	movf	(___aodiv@divisor+6)^0,w,c
  7313  010EC0  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  7314  010EC2  5016               	movf	(___aodiv@divisor+7)^0,w,c
  7315  010EC4  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  7316  010EC6  A0D8               	btfss	status,0,c
  7317  010EC8  EF68  F087         	goto	u1611
  7318  010ECC  EF6A  F087         	goto	u1610
  7319  010ED0                     u1611:
  7320  010ED0  EF7B  F087         	goto	l3193
  7321  010ED4                     u1610:
  7322  010ED4  500F               	movf	___aodiv@divisor^0,w,c
  7323  010ED6  5E07               	subwf	___aodiv@dividend^0,f,c
  7324  010ED8  5010               	movf	(___aodiv@divisor+1)^0,w,c
  7325  010EDA  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  7326  010EDC  5011               	movf	(___aodiv@divisor+2)^0,w,c
  7327  010EDE  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  7328  010EE0  5012               	movf	(___aodiv@divisor+3)^0,w,c
  7329  010EE2  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  7330  010EE4  5013               	movf	(___aodiv@divisor+4)^0,w,c
  7331  010EE6  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  7332  010EE8  5014               	movf	(___aodiv@divisor+5)^0,w,c
  7333  010EEA  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  7334  010EEC  5015               	movf	(___aodiv@divisor+6)^0,w,c
  7335  010EEE  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  7336  010EF0  5016               	movf	(___aodiv@divisor+7)^0,w,c
  7337  010EF2  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  7338  010EF4  8019               	bsf	___aodiv@quotient^0,0,c
  7339  010EF6                     l3193:
  7340  010EF6  90D8               	bcf	status,0,c
  7341  010EF8  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  7342  010EFA  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  7343  010EFC  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  7344  010EFE  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  7345  010F00  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  7346  010F02  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  7347  010F04  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  7348  010F06  320F               	rrcf	___aodiv@divisor^0,f,c
  7349  010F08  2E17               	decfsz	___aodiv@counter^0,f,c
  7350  010F0A  EF4A  F087         	goto	l3185
  7351  010F0E                     l3197:
  7352  010F0E  5018               	movf	___aodiv@sign^0,w,c
  7353  010F10  B4D8               	btfsc	status,2,c
  7354  010F12  EF8D  F087         	goto	u1621
  7355  010F16  EF8F  F087         	goto	u1620
  7356  010F1A                     u1621:
  7357  010F1A  EF9F  F087         	goto	l3201
  7358  010F1E                     u1620:
  7359  010F1E  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  7360  010F20  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  7361  010F22  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  7362  010F24  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  7363  010F26  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  7364  010F28  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  7365  010F2A  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  7366  010F2C  6C19               	negf	___aodiv@quotient^0,c
  7367  010F2E  0E00               	movlw	0
  7368  010F30  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  7369  010F32  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  7370  010F34  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  7371  010F36  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  7372  010F38  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  7373  010F3A  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  7374  010F3C  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  7375  010F3E                     l3201:
  7376  010F3E  C019  F007         	movff	___aodiv@quotient,?___aodiv
  7377  010F42  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  7378  010F46  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  7379  010F4A  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  7380  010F4E  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  7381  010F52  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  7382  010F56  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  7383  010F5A  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  7384  010F5E  0012               	return		;funcret
  7385  010F60                     __end_of___aodiv:
  7386                           	callstack 0
  7387                           
  7388 ;; *************** function _atoi *****************
  7389 ;; Defined at:
  7390 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7393 ;;		 -> STR_16(18), STR_15(18), 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;  n               2   26[COMRAM] int 
  7396 ;;  neg             2   19[COMRAM] int 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  2   13[COMRAM] int 
  7399 ;; Registers used:
  7400 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7407 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7409 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7410 ;;Total ram usage:       15 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    5
  7413 ;; This function calls:
  7414 ;;		___wmul
  7415 ;;		_isdigit
  7416 ;;		_isspace
  7417 ;; This function is called by:
  7418 ;;		_vfpfcnvrt
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text53
  7423  010C34                     __ptext53:
  7424                           	callstack 0
  7425  010C34                     _atoi:
  7426                           	callstack 20
  7427  010C34  0E00               	movlw	0
  7428  010C36  6E1C               	movwf	(atoi@n+1)^0,c
  7429  010C38  0E00               	movlw	0
  7430  010C3A  6E1B               	movwf	atoi@n^0,c
  7431  010C3C  0E00               	movlw	0
  7432  010C3E  6E15               	movwf	(atoi@neg+1)^0,c
  7433  010C40  0E00               	movlw	0
  7434  010C42  6E14               	movwf	atoi@neg^0,c
  7435  010C44  EF26  F086         	goto	l3441
  7436  010C48                     l3439:
  7437  010C48  4A0E               	infsnz	atoi@s^0,f,c
  7438  010C4A  2A0F               	incf	(atoi@s+1)^0,f,c
  7439  010C4C                     l3441:
  7440  010C4C  0E01               	movlw	1
  7441  010C4E  6E1A               	movwf	_atoi$2684^0,c
  7442  010C50  C00E  FFF6         	movff	atoi@s,tblptrl
  7443  010C54  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7444  010C58                     	if	0	;tblptru may be non-zero
  7445  010C58                     	endif
  7446  010C58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7447  010C58  0E00               	movlw	low (__mediumconst shr (0+16))
  7448  010C5A  6EF8               	movwf	tblptru,c
  7449  010C5C                     	endif
  7450  010C5C  0008               	tblrd		*
  7451  010C5E  50F5               	movf	tablat,w,c
  7452  010C60  0A20               	xorlw	32
  7453  010C62  B4D8               	btfsc	status,2,c
  7454  010C64  EF36  F086         	goto	u2181
  7455  010C68  EF38  F086         	goto	u2180
  7456  010C6C                     u2181:
  7457  010C6C  EF57  F086         	goto	l3449
  7458  010C70                     u2180:
  7459  010C70  0EF7               	movlw	247
  7460  010C72  6E10               	movwf	??_atoi^0,c
  7461  010C74  0EFF               	movlw	255
  7462  010C76  6E11               	movwf	(??_atoi+1)^0,c
  7463  010C78  C00E  FFF6         	movff	atoi@s,tblptrl
  7464  010C7C  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7465  010C80                     	if	0	;tblptru may be non-zero
  7466  010C80                     	endif
  7467  010C80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7468  010C80  0E00               	movlw	low (__mediumconst shr (0+16))
  7469  010C82  6EF8               	movwf	tblptru,c
  7470  010C84                     	endif
  7471  010C84  0008               	tblrd		*
  7472  010C86  50F5               	movf	tablat,w,c
  7473  010C88  6E12               	movwf	(??_atoi+2)^0,c
  7474  010C8A  6A13               	clrf	(??_atoi+3)^0,c
  7475  010C8C  5010               	movf	??_atoi^0,w,c
  7476  010C8E  2612               	addwf	(??_atoi+2)^0,f,c
  7477  010C90  5011               	movf	(??_atoi+1)^0,w,c
  7478  010C92  2213               	addwfc	(??_atoi+3)^0,f,c
  7479  010C94  5013               	movf	(??_atoi+3)^0,w,c
  7480  010C96  E109               	bnz	u2190
  7481  010C98  0E05               	movlw	5
  7482  010C9A  5C12               	subwf	(??_atoi+2)^0,w,c
  7483  010C9C  A0D8               	btfss	status,0,c
  7484  010C9E  EF53  F086         	goto	u2191
  7485  010CA2  EF55  F086         	goto	u2190
  7486  010CA6                     u2191:
  7487  010CA6  EF57  F086         	goto	l3449
  7488  010CAA                     u2190:
  7489  010CAA  0E00               	movlw	0
  7490  010CAC  6E1A               	movwf	_atoi$2684^0,c
  7491  010CAE                     l3449:
  7492  010CAE  C01A  F016         	movff	_atoi$2684,_atoi$2683
  7493  010CB2  6A17               	clrf	(_atoi$2683+1)^0,c
  7494  010CB4  5016               	movf	_atoi$2683^0,w,c
  7495  010CB6  1017               	iorwf	(_atoi$2683+1)^0,w,c
  7496  010CB8  A4D8               	btfss	status,2,c
  7497  010CBA  EF61  F086         	goto	u2201
  7498  010CBE  EF63  F086         	goto	u2200
  7499  010CC2                     u2201:
  7500  010CC2  EF24  F086         	goto	l3439
  7501  010CC6                     u2200:
  7502  010CC6  EF6D  F086         	goto	l3459
  7503  010CCA                     l3455:
  7504  010CCA  0E00               	movlw	0
  7505  010CCC  6E15               	movwf	(atoi@neg+1)^0,c
  7506  010CCE  0E01               	movlw	1
  7507  010CD0  6E14               	movwf	atoi@neg^0,c
  7508  010CD2                     l3457:
  7509  010CD2  4A0E               	infsnz	atoi@s^0,f,c
  7510  010CD4  2A0F               	incf	(atoi@s+1)^0,f,c
  7511  010CD6  EFA6  F086         	goto	l3465
  7512  010CDA                     l3459:
  7513  010CDA  C00E  FFF6         	movff	atoi@s,tblptrl
  7514  010CDE  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7515  010CE2                     	if	0	;tblptru may be non-zero
  7516  010CE2                     	endif
  7517  010CE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7518  010CE2  0E00               	movlw	low (__mediumconst shr (0+16))
  7519  010CE4  6EF8               	movwf	tblptru,c
  7520  010CE6                     	endif
  7521  010CE6  0008               	tblrd		*
  7522  010CE8  50F5               	movf	tablat,w,c
  7523  010CEA  6E10               	movwf	??_atoi^0,c
  7524  010CEC  6A11               	clrf	(??_atoi+1)^0,c
  7525                           
  7526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7527                           ; Switch size 1, requested type "simple"
  7528                           ; Number of cases is 1, Range of values is 0 to 0
  7529                           ; switch strategies available:
  7530                           ; Name         Instructions Cycles
  7531                           ; simple_byte            4     3 (average)
  7532                           ;	Chosen strategy is simple_byte
  7533  010CEE  5011               	movf	(??_atoi+1)^0,w,c
  7534  010CF0  0A00               	xorlw	0	; case 0
  7535  010CF2  B4D8               	btfsc	status,2,c
  7536  010CF4  EF7E  F086         	goto	l4387
  7537  010CF8  EFA6  F086         	goto	l3465
  7538  010CFC                     l4387:
  7539                           
  7540                           ; Switch size 1, requested type "simple"
  7541                           ; Number of cases is 2, Range of values is 43 to 45
  7542                           ; switch strategies available:
  7543                           ; Name         Instructions Cycles
  7544                           ; simple_byte            7     4 (average)
  7545                           ;	Chosen strategy is simple_byte
  7546  010CFC  5010               	movf	??_atoi^0,w,c
  7547  010CFE  0A2B               	xorlw	43	; case 43
  7548  010D00  B4D8               	btfsc	status,2,c
  7549  010D02  EF69  F086         	goto	l3457
  7550  010D06  0A06               	xorlw	6	; case 45
  7551  010D08  B4D8               	btfsc	status,2,c
  7552  010D0A  EF65  F086         	goto	l3455
  7553  010D0E  EFA6  F086         	goto	l3465
  7554  010D12                     l3461:
  7555  010D12  C01B  F007         	movff	atoi@n,___wmul@multiplier
  7556  010D16  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  7557  010D1A  0E00               	movlw	0
  7558  010D1C  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  7559  010D1E  0E0A               	movlw	10
  7560  010D20  6E09               	movwf	___wmul@multiplicand^0,c
  7561  010D22  ECB4  F08F         	call	___wmul	;wreg free
  7562  010D26  C00E  FFF6         	movff	atoi@s,tblptrl
  7563  010D2A  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7564  010D2E                     	if	0	;tblptru may be non-zero
  7565  010D2E                     	endif
  7566  010D2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7567  010D2E  0E00               	movlw	low (__mediumconst shr (0+16))
  7568  010D30  6EF8               	movwf	tblptru,c
  7569  010D32                     	endif
  7570  010D32  0008               	tblrd		*
  7571  010D34  50F5               	movf	tablat,w,c
  7572  010D36  5E07               	subwf	?___wmul^0,f,c
  7573  010D38  0E00               	movlw	0
  7574  010D3A  5A08               	subwfb	(?___wmul+1)^0,f,c
  7575  010D3C  0E30               	movlw	48
  7576  010D3E  2407               	addwf	?___wmul^0,w,c
  7577  010D40  6E1B               	movwf	atoi@n^0,c
  7578  010D42  0E00               	movlw	0
  7579  010D44  2008               	addwfc	(?___wmul+1)^0,w,c
  7580  010D46  6E1C               	movwf	(atoi@n+1)^0,c
  7581  010D48  EF69  F086         	goto	l3457
  7582  010D4C                     l3465:
  7583  010D4C  0ED0               	movlw	208
  7584  010D4E  6E10               	movwf	??_atoi^0,c
  7585  010D50  0EFF               	movlw	255
  7586  010D52  6E11               	movwf	(??_atoi+1)^0,c
  7587  010D54  C00E  FFF6         	movff	atoi@s,tblptrl
  7588  010D58  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7589  010D5C                     	if	0	;tblptru may be non-zero
  7590  010D5C                     	endif
  7591  010D5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7592  010D5C  0E00               	movlw	low (__mediumconst shr (0+16))
  7593  010D5E  6EF8               	movwf	tblptru,c
  7594  010D60                     	endif
  7595  010D60  0008               	tblrd		*
  7596  010D62  50F5               	movf	tablat,w,c
  7597  010D64  6E12               	movwf	(??_atoi+2)^0,c
  7598  010D66  6A13               	clrf	(??_atoi+3)^0,c
  7599  010D68  5010               	movf	??_atoi^0,w,c
  7600  010D6A  2612               	addwf	(??_atoi+2)^0,f,c
  7601  010D6C  5011               	movf	(??_atoi+1)^0,w,c
  7602  010D6E  2213               	addwfc	(??_atoi+3)^0,f,c
  7603  010D70  5013               	movf	(??_atoi+3)^0,w,c
  7604  010D72  E10A               	bnz	u2210
  7605  010D74  0E0A               	movlw	10
  7606  010D76  5C12               	subwf	(??_atoi+2)^0,w,c
  7607  010D78  A0D8               	btfss	status,0,c
  7608  010D7A  EFC1  F086         	goto	u2211
  7609  010D7E  EFC4  F086         	goto	u2210
  7610  010D82                     u2211:
  7611  010D82  0E01               	movlw	1
  7612  010D84  EFC5  F086         	goto	u2220
  7613  010D88                     u2210:
  7614  010D88  0E00               	movlw	0
  7615  010D8A                     u2220:
  7616  010D8A  6E18               	movwf	_atoi$2685^0,c
  7617  010D8C  6A19               	clrf	(_atoi$2685+1)^0,c
  7618  010D8E  5018               	movf	_atoi$2685^0,w,c
  7619  010D90  1019               	iorwf	(_atoi$2685+1)^0,w,c
  7620  010D92  A4D8               	btfss	status,2,c
  7621  010D94  EFCE  F086         	goto	u2231
  7622  010D98  EFD0  F086         	goto	u2230
  7623  010D9C                     u2231:
  7624  010D9C  EF89  F086         	goto	l3461
  7625  010DA0                     u2230:
  7626  010DA0  5014               	movf	atoi@neg^0,w,c
  7627  010DA2  1015               	iorwf	(atoi@neg+1)^0,w,c
  7628  010DA4  A4D8               	btfss	status,2,c
  7629  010DA6  EFD7  F086         	goto	u2241
  7630  010DAA  EFD9  F086         	goto	u2240
  7631  010DAE                     u2241:
  7632  010DAE  EFE7  F086         	goto	l1708
  7633  010DB2                     u2240:
  7634  010DB2  C01B  F010         	movff	atoi@n,??_atoi
  7635  010DB6  C01C  F011         	movff	atoi@n+1,??_atoi+1
  7636  010DBA  1E10               	comf	??_atoi^0,f,c
  7637  010DBC  1E11               	comf	(??_atoi+1)^0,f,c
  7638  010DBE  4A10               	infsnz	??_atoi^0,f,c
  7639  010DC0  2A11               	incf	(??_atoi+1)^0,f,c
  7640  010DC2  C010  F00E         	movff	??_atoi,?_atoi
  7641  010DC6  C011  F00F         	movff	??_atoi+1,?_atoi+1
  7642  010DCA  EFEB  F086         	goto	l1711
  7643  010DCE                     l1708:
  7644  010DCE  C01B  F00E         	movff	atoi@n,?_atoi
  7645  010DD2  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  7646  010DD6                     l1711:
  7647  010DD6  0012               	return		;funcret
  7648  010DD8                     __end_of_atoi:
  7649                           	callstack 0
  7650                           
  7651 ;; *************** function _isspace *****************
  7652 ;; Defined at:
  7653 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;  c               2    6[COMRAM] int 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  2    6[COMRAM] int 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2, status,0
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7669 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7670 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7671 ;;Total ram usage:        7 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:    4
  7674 ;; This function calls:
  7675 ;;		Nothing
  7676 ;; This function is called by:
  7677 ;;		_atoi
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           	psect	text54
  7682  0118FA                     __ptext54:
  7683                           	callstack 0
  7684  0118FA                     _isspace:
  7685                           	callstack 20
  7686  0118FA  0E01               	movlw	1
  7687  0118FC  6E0D               	movwf	_isspace$2710^0,c
  7688  0118FE  0E20               	movlw	32
  7689  011900  1807               	xorwf	isspace@c^0,w,c
  7690  011902  1008               	iorwf	(isspace@c+1)^0,w,c
  7691  011904  B4D8               	btfsc	status,2,c
  7692  011906  EF87  F08C         	goto	u1831
  7693  01190A  EF89  F08C         	goto	u1830
  7694  01190E                     u1831:
  7695  01190E  EFA2  F08C         	goto	l3297
  7696  011912                     u1830:
  7697  011912  0EF7               	movlw	247
  7698  011914  6E09               	movwf	??_isspace^0,c
  7699  011916  0EFF               	movlw	255
  7700  011918  6E0A               	movwf	(??_isspace+1)^0,c
  7701  01191A  C007  F00B         	movff	isspace@c,??_isspace+2
  7702  01191E  C008  F00C         	movff	isspace@c+1,??_isspace+3
  7703  011922  5009               	movf	??_isspace^0,w,c
  7704  011924  260B               	addwf	(??_isspace+2)^0,f,c
  7705  011926  500A               	movf	(??_isspace+1)^0,w,c
  7706  011928  220C               	addwfc	(??_isspace+3)^0,f,c
  7707  01192A  500C               	movf	(??_isspace+3)^0,w,c
  7708  01192C  E109               	bnz	u1840
  7709  01192E  0E05               	movlw	5
  7710  011930  5C0B               	subwf	(??_isspace+2)^0,w,c
  7711  011932  A0D8               	btfss	status,0,c
  7712  011934  EF9E  F08C         	goto	u1841
  7713  011938  EFA0  F08C         	goto	u1840
  7714  01193C                     u1841:
  7715  01193C  EFA2  F08C         	goto	l3297
  7716  011940                     u1840:
  7717  011940  0E00               	movlw	0
  7718  011942  6E0D               	movwf	_isspace$2710^0,c
  7719  011944                     l3297:
  7720  011944  C00D  F007         	movff	_isspace$2710,?_isspace
  7721  011948  6A08               	clrf	(?_isspace+1)^0,c
  7722  01194A  0012               	return		;funcret
  7723  01194C                     __end_of_isspace:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function _isdigit *****************
  7727 ;; Defined at:
  7728 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  c               2    6[COMRAM] int 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;		None
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  2    6[COMRAM] int 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7744 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7746 ;;Total ram usage:        6 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    4
  7749 ;; This function calls:
  7750 ;;		Nothing
  7751 ;; This function is called by:
  7752 ;;		_vfpfcnvrt
  7753 ;;		_atoi
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text55
  7758  011C36                     __ptext55:
  7759                           	callstack 0
  7760  011C36                     _isdigit:
  7761                           	callstack 21
  7762  011C36  0ED0               	movlw	208
  7763  011C38  6E09               	movwf	??_isdigit^0,c
  7764  011C3A  0EFF               	movlw	255
  7765  011C3C  6E0A               	movwf	(??_isdigit+1)^0,c
  7766  011C3E  C007  F00B         	movff	isdigit@c,??_isdigit+2
  7767  011C42  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  7768  011C46  5009               	movf	??_isdigit^0,w,c
  7769  011C48  260B               	addwf	(??_isdigit+2)^0,f,c
  7770  011C4A  500A               	movf	(??_isdigit+1)^0,w,c
  7771  011C4C  220C               	addwfc	(??_isdigit+3)^0,f,c
  7772  011C4E  500C               	movf	(??_isdigit+3)^0,w,c
  7773  011C50  E10A               	bnz	u1810
  7774  011C52  0E0A               	movlw	10
  7775  011C54  5C0B               	subwf	(??_isdigit+2)^0,w,c
  7776  011C56  A0D8               	btfss	status,0,c
  7777  011C58  EF30  F08E         	goto	u1811
  7778  011C5C  EF33  F08E         	goto	u1810
  7779  011C60                     u1811:
  7780  011C60  0E01               	movlw	1
  7781  011C62  EF34  F08E         	goto	u1820
  7782  011C66                     u1810:
  7783  011C66  0E00               	movlw	0
  7784  011C68                     u1820:
  7785  011C68  6E07               	movwf	?_isdigit^0,c
  7786  011C6A  6A08               	clrf	(?_isdigit+1)^0,c
  7787  011C6C  0012               	return		;funcret
  7788  011C6E                     __end_of_isdigit:
  7789                           	callstack 0
  7790                           
  7791 ;; *************** function ___wmul *****************
  7792 ;; Defined at:
  7793 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  multiplier      2    6[COMRAM] unsigned int 
  7796 ;;  multiplicand    2    8[COMRAM] unsigned int 
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;  product         2   10[COMRAM] unsigned int 
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  2    6[COMRAM] unsigned int 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0, prodl, prodh
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7809 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7811 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7812 ;;Total ram usage:        6 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    4
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_atoi
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text56
  7823  011F68                     __ptext56:
  7824                           	callstack 0
  7825  011F68                     ___wmul:
  7826                           	callstack 20
  7827  011F68  5007               	movf	___wmul@multiplier^0,w,c
  7828  011F6A  0209               	mulwf	___wmul@multiplicand^0,c
  7829  011F6C  CFF3 F00B          	movff	prodl,___wmul@product
  7830  011F70  CFF4 F00C          	movff	prodh,___wmul@product+1
  7831  011F74  5007               	movf	___wmul@multiplier^0,w,c
  7832  011F76  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  7833  011F78  50F3               	movf	243,w,c
  7834  011F7A  260C               	addwf	(___wmul@product+1)^0,f,c
  7835  011F7C  5008               	movf	(___wmul@multiplier+1)^0,w,c
  7836  011F7E  0209               	mulwf	___wmul@multiplicand^0,c
  7837  011F80  50F3               	movf	243,w,c
  7838  011F82  260C               	addwf	(___wmul@product+1)^0,f,c
  7839  011F84  C00B  F007         	movff	___wmul@product,?___wmul
  7840  011F88  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  7841  011F8C  0012               	return		;funcret
  7842  011F8E                     __end_of___wmul:
  7843                           	callstack 0
  7844                           
  7845 ;; *************** function _lcd_writeString *****************
  7846 ;; Defined at:
  7847 ;;		line 72 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  string          2   28[COMRAM] PTR unsigned char 
  7850 ;;		 -> STR_21(17), STR_20(17), STR_19(17), STR_18(17), 
  7851 ;;		 -> STR_17(17), ControlAction@displayString1(17), STR_14(17), STR_13(17), 
  7852 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  7853 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  7854 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  7855 ;;		 -> lcd_example@row1_disp(16), lcd_example@row0_disp(16), 
  7856 ;;  row             1   30[COMRAM] unsigned char 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  i               1   33[COMRAM] unsigned char 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      void 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7868 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7871 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;Total ram usage:        6 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:   11
  7875 ;; This function calls:
  7876 ;;		_lcd_returnHome
  7877 ;;		_lcd_setAddr
  7878 ;;		_lcd_writeChar
  7879 ;; This function is called by:
  7880 ;;		_ApplicationTask
  7881 ;;		_ControlAction
  7882 ;;		_Init_display
  7883 ;;		_lcd_example
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text57
  7888  011678                     __ptext57:
  7889                           	callstack 0
  7890  011678                     _lcd_writeString:
  7891                           	callstack 18
  7892  011678                     
  7893                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 73:     lcd_setAddr(row, 0);
  7894  011678  0E00               	movlw	0
  7895  01167A  6E1B               	movwf	lcd_setAddr@character^0,c
  7896  01167C  501F               	movf	lcd_writeString@row^0,w,c
  7897  01167E  EC82  F090         	call	_lcd_setAddr
  7898  011682                     
  7899                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 75:     for (i = 0; i < 16; i++) {
  7900  011682  0E00               	movlw	0
  7901  011684  6E22               	movwf	lcd_writeString@i^0,c
  7902  011686                     l3643:
  7903                           
  7904                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 76:         if (string[i]) {
  7905  011686  5022               	movf	lcd_writeString@i^0,w,c
  7906  011688  241D               	addwf	lcd_writeString@string^0,w,c
  7907  01168A  6E20               	movwf	??_lcd_writeString^0,c
  7908  01168C  0E00               	movlw	0
  7909  01168E  201E               	addwfc	(lcd_writeString@string+1)^0,w,c
  7910  011690  6E21               	movwf	(??_lcd_writeString+1)^0,c
  7911  011692  C020  FFF6         	movff	??_lcd_writeString,tblptrl
  7912  011696  C021  FFF7         	movff	??_lcd_writeString+1,tblptrh
  7913  01169A  0E00               	movlw	low (__mediumconst shr (0+16))
  7914  01169C  6EF8               	movwf	tblptru,c
  7915  01169E  0E0E               	movlw	(high __ramtop+-1)
  7916  0116A0  64F7               	cpfsgt	tblptrh,c
  7917  0116A2  D003               	bra	u2387
  7918  0116A4  0008               	tblrd		*
  7919  0116A6  50F5               	movf	tablat,w,c
  7920  0116A8  D005               	bra	u2380
  7921  0116AA                     u2387:
  7922  0116AA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7923  0116AE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7924  0116B2  50E7               	movf	indf1,w,c
  7925  0116B4                     u2380:
  7926  0116B4  0900               	iorlw	0
  7927  0116B6  B4D8               	btfsc	status,2,c
  7928  0116B8  EF60  F08B         	goto	u2391
  7929  0116BC  EF62  F08B         	goto	u2390
  7930  0116C0                     u2391:
  7931  0116C0  EF7B  F08B         	goto	l3647
  7932  0116C4                     u2390:
  7933  0116C4                     
  7934                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 77:             lcd_writeChar(string[i]);
  7935  0116C4  5022               	movf	lcd_writeString@i^0,w,c
  7936  0116C6  241D               	addwf	lcd_writeString@string^0,w,c
  7937  0116C8  6E20               	movwf	??_lcd_writeString^0,c
  7938  0116CA  0E00               	movlw	0
  7939  0116CC  201E               	addwfc	(lcd_writeString@string+1)^0,w,c
  7940  0116CE  6E21               	movwf	(??_lcd_writeString+1)^0,c
  7941  0116D0  C020  FFF6         	movff	??_lcd_writeString,tblptrl
  7942  0116D4  C021  FFF7         	movff	??_lcd_writeString+1,tblptrh
  7943  0116D8  0E00               	movlw	low (__mediumconst shr (0+16))
  7944  0116DA  6EF8               	movwf	tblptru,c
  7945  0116DC  0E0E               	movlw	(high __ramtop+-1)
  7946  0116DE  64F7               	cpfsgt	tblptrh,c
  7947  0116E0  D003               	bra	u2407
  7948  0116E2  0008               	tblrd		*
  7949  0116E4  50F5               	movf	tablat,w,c
  7950  0116E6  D005               	bra	u2400
  7951  0116E8                     u2407:
  7952  0116E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7953  0116EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7954  0116F0  50E7               	movf	indf1,w,c
  7955  0116F2                     u2400:
  7956  0116F2  EC9B  F090         	call	_lcd_writeChar
  7957  0116F6                     l3647:
  7958                           
  7959                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 79:     }
  7960  0116F6  2A22               	incf	lcd_writeString@i^0,f,c
  7961  0116F8  0E0F               	movlw	15
  7962  0116FA  6422               	cpfsgt	lcd_writeString@i^0,c
  7963  0116FC  EF82  F08B         	goto	u2411
  7964  011700  EF84  F08B         	goto	u2410
  7965  011704                     u2411:
  7966  011704  EF43  F08B         	goto	l3643
  7967  011708                     u2410:
  7968  011708                     
  7969                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 80:     lcd_returnHome();
  7970  011708  EC49  F090         	call	_lcd_returnHome	;wreg free
  7971  01170C  0012               	return		;funcret
  7972  01170E                     __end_of_lcd_writeString:
  7973                           	callstack 0
  7974                           
  7975 ;; *************** function _lcd_writeChar *****************
  7976 ;; Defined at:
  7977 ;;		line 68 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;  character       1    wreg     unsigned char 
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;  character       1   26[COMRAM] unsigned char 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;Total ram usage:        1 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:   10
  7998 ;; This function calls:
  7999 ;;		_lcd_sendByte
  8000 ;; This function is called by:
  8001 ;;		_lcd_writeString
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text58
  8006  012136                     __ptext58:
  8007                           	callstack 0
  8008  012136                     _lcd_writeChar:
  8009                           	callstack 18
  8010                           
  8011                           ;incstack = 0
  8012                           ;lcd_writeChar@character stored from wreg
  8013  012136  6E1B               	movwf	lcd_writeChar@character^0,c
  8014  012138                     
  8015                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 69:     lcd_sendByte(character, 1);
  8016  012138  0E01               	movlw	1
  8017  01213A  6E14               	movwf	lcd_sendByte@RSbit^0,c
  8018  01213C  501B               	movf	lcd_writeChar@character^0,w,c
  8019  01213E  EC87  F08B         	call	_lcd_sendByte
  8020  012142  0012               	return		;funcret
  8021  012144                     __end_of_lcd_writeChar:
  8022                           	callstack 0
  8023                           
  8024 ;; *************** function _lcd_setAddr *****************
  8025 ;; Defined at:
  8026 ;;		line 64 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;  row             1    wreg     unsigned char 
  8029 ;;  character       1   26[COMRAM] unsigned char 
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;  row             1   27[COMRAM] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      void 
  8034 ;; Registers used:
  8035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8041 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8044 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8045 ;;Total ram usage:        2 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:   10
  8048 ;; This function calls:
  8049 ;;		_lcd_sendByte
  8050 ;; This function is called by:
  8051 ;;		_lcd_writeString
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           	psect	text59
  8056  012104                     __ptext59:
  8057                           	callstack 0
  8058  012104                     _lcd_setAddr:
  8059                           	callstack 18
  8060                           
  8061                           ;incstack = 0
  8062                           ;lcd_setAddr@row stored from wreg
  8063  012104  6E1C               	movwf	lcd_setAddr@row^0,c
  8064  012106                     
  8065                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 65:     lcd_sendByte(0x80 | (character + (row
      +                          *40)), 0);
  8066  012106  0E00               	movlw	0
  8067  012108  6E14               	movwf	lcd_sendByte@RSbit^0,c
  8068  01210A  501C               	movf	lcd_setAddr@row^0,w,c
  8069  01210C  0D28               	mullw	40
  8070  01210E  50F3               	movf	243,w,c
  8071  012110  241B               	addwf	lcd_setAddr@character^0,w,c
  8072  012112  0980               	iorlw	128
  8073  012114  EC87  F08B         	call	_lcd_sendByte
  8074  012118  0012               	return		;funcret
  8075  01211A                     __end_of_lcd_setAddr:
  8076                           	callstack 0
  8077                           
  8078 ;; *************** function _lcd_returnHome *****************
  8079 ;; Defined at:
  8080 ;;		line 54 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;		None
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;		None
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8098 ;;Total ram usage:        0 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:   10
  8101 ;; This function calls:
  8102 ;;		_DELAY_milliseconds
  8103 ;;		_lcd_sendByte
  8104 ;; This function is called by:
  8105 ;;		_lcd_writeString
  8106 ;;		_lcd_setup
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text60
  8111  012092                     __ptext60:
  8112                           	callstack 0
  8113  012092                     _lcd_returnHome:
  8114                           	callstack 18
  8115  012092                     
  8116                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 55:     lcd_sendByte(0b10, 0);
  8117  012092  0E00               	movlw	0
  8118  012094  6E14               	movwf	lcd_sendByte@RSbit^0,c
  8119  012096  0E02               	movlw	2
  8120  012098  EC87  F08B         	call	_lcd_sendByte
  8121  01209C                     
  8122                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 56:     DELAY_milliseconds(2);
  8123  01209C  0E00               	movlw	0
  8124  01209E  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  8125  0120A0  0E02               	movlw	2
  8126  0120A2  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  8127  0120A4  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  8128  0120A8  0012               	return		;funcret
  8129  0120AA                     __end_of_lcd_returnHome:
  8130                           	callstack 0
  8131                           
  8132 ;; *************** function _lcd_sendByte *****************
  8133 ;; Defined at:
  8134 ;;		line 38 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  byte            1    wreg     unsigned char 
  8137 ;;  RSbit           1   19[COMRAM] _Bool 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;  byte            1   23[COMRAM] unsigned char 
  8140 ;;  packetLow       1   25[COMRAM] unsigned char 
  8141 ;;  packetHigh      1   24[COMRAM] unsigned char 
  8142 ;;  nibbleLow       1   22[COMRAM] unsigned char 
  8143 ;;  nibbleHigh      1   21[COMRAM] unsigned char 
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  1    wreg      void 
  8146 ;; Registers used:
  8147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8154 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8156 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;Total ram usage:        7 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:    9
  8160 ;; This function calls:
  8161 ;;		_DELAY_milliseconds
  8162 ;;		_expander_setOutput
  8163 ;; This function is called by:
  8164 ;;		_lcd_returnHome
  8165 ;;		_lcd_clearDisplay
  8166 ;;		_lcd_setAddr
  8167 ;;		_lcd_writeChar
  8168 ;;		_lcd_setup
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           	psect	text61
  8173  01170E                     __ptext61:
  8174                           	callstack 0
  8175  01170E                     _lcd_sendByte:
  8176                           	callstack 19
  8177                           
  8178                           ;incstack = 0
  8179                           ;lcd_sendByte@byte stored from wreg
  8180  01170E  6E18               	movwf	lcd_sendByte@byte^0,c
  8181  011710                     
  8182                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 39:     uint8_t nibbleHigh = byte >> 4;
  8183  011710  3818               	swapf	lcd_sendByte@byte^0,w,c
  8184  011712  0B0F               	andlw	15
  8185  011714  6E16               	movwf	lcd_sendByte@nibbleHigh^0,c
  8186                           
  8187                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 40:     uint8_t nibbleLow = byte & 0xF;
  8188  011716  5018               	movf	lcd_sendByte@byte^0,w,c
  8189  011718  0B0F               	andlw	15
  8190  01171A  6E17               	movwf	lcd_sendByte@nibbleLow^0,c
  8191                           
  8192                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 41:     uint8_t packetHigh = (nibbleHigh << 4
      +                          ) | (RSbit << 2);
  8193  01171C  C014  F015         	movff	lcd_sendByte@RSbit,??_lcd_sendByte
  8194  011720  90D8               	bcf	status,0,c
  8195  011722  3615               	rlcf	??_lcd_sendByte^0,f,c
  8196  011724  90D8               	bcf	status,0,c
  8197  011726  3615               	rlcf	??_lcd_sendByte^0,f,c
  8198  011728  3816               	swapf	lcd_sendByte@nibbleHigh^0,w,c
  8199  01172A  0BF0               	andlw	240
  8200  01172C  1015               	iorwf	??_lcd_sendByte^0,w,c
  8201  01172E  6E19               	movwf	lcd_sendByte@packetHigh^0,c
  8202                           
  8203                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 42:     uint8_t packetLow = (nibbleLow << 4) 
      +                          | (RSbit << 2);
  8204  011730  C014  F015         	movff	lcd_sendByte@RSbit,??_lcd_sendByte
  8205  011734  90D8               	bcf	status,0,c
  8206  011736  3615               	rlcf	??_lcd_sendByte^0,f,c
  8207  011738  90D8               	bcf	status,0,c
  8208  01173A  3615               	rlcf	??_lcd_sendByte^0,f,c
  8209  01173C  3817               	swapf	lcd_sendByte@nibbleLow^0,w,c
  8210  01173E  0BF0               	andlw	240
  8211  011740  1015               	iorwf	??_lcd_sendByte^0,w,c
  8212  011742  6E1A               	movwf	lcd_sendByte@packetLow^0,c
  8213  011744                     
  8214                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 44:     expander_setOutput(packetHigh);
  8215  011744  5019               	movf	lcd_sendByte@packetHigh^0,w,c
  8216  011746  ECA2  F090         	call	_expander_setOutput
  8217  01174A                     
  8218                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 45:     DELAY_milliseconds(2);
  8219  01174A  0E00               	movlw	0
  8220  01174C  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  8221  01174E  0E02               	movlw	2
  8222  011750  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  8223  011752  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  8224  011756                     
  8225                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 46:     expander_setOutput(packetHigh | (1<<3
      +                          ));
  8226  011756  5019               	movf	lcd_sendByte@packetHigh^0,w,c
  8227  011758  0908               	iorlw	8
  8228  01175A  ECA2  F090         	call	_expander_setOutput
  8229  01175E                     
  8230                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 47:     DELAY_milliseconds(2);
  8231  01175E  0E00               	movlw	0
  8232  011760  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  8233  011762  0E02               	movlw	2
  8234  011764  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  8235  011766  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  8236  01176A                     
  8237                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 48:     expander_setOutput(packetLow);
  8238  01176A  501A               	movf	lcd_sendByte@packetLow^0,w,c
  8239  01176C  ECA2  F090         	call	_expander_setOutput
  8240  011770                     
  8241                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 49:     DELAY_milliseconds(2);
  8242  011770  0E00               	movlw	0
  8243  011772  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  8244  011774  0E02               	movlw	2
  8245  011776  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  8246  011778  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  8247  01177C                     
  8248                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 50:     expander_setOutput(packetLow | (1<<3)
      +                          );
  8249  01177C  501A               	movf	lcd_sendByte@packetLow^0,w,c
  8250  01177E  0908               	iorlw	8
  8251  011780  ECA2  F090         	call	_expander_setOutput
  8252  011784                     
  8253                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 51:     DELAY_milliseconds(40);
  8254  011784  0E00               	movlw	0
  8255  011786  6E08               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  8256  011788  0E28               	movlw	40
  8257  01178A  6E07               	movwf	DELAY_milliseconds@milliseconds^0,c
  8258  01178C  EC1D  F08F         	call	_DELAY_milliseconds	;wreg free
  8259  011790  0012               	return		;funcret
  8260  011792                     __end_of_lcd_sendByte:
  8261                           	callstack 0
  8262                           
  8263 ;; *************** function _expander_setOutput *****************
  8264 ;; Defined at:
  8265 ;;		line 48 in file "mcc_generated_files/LCDMiniDrivers/expander.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  output          1    wreg     unsigned char 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  output          1   18[COMRAM] unsigned char 
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8282 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8283 ;;Total ram usage:        1 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    8
  8286 ;; This function calls:
  8287 ;;		_expander_sendByte
  8288 ;; This function is called by:
  8289 ;;		_lcd_sendNibble
  8290 ;;		_lcd_sendByte
  8291 ;;		_lcd_setup
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text62
  8296  012144                     __ptext62:
  8297                           	callstack 0
  8298  012144                     _expander_setOutput:
  8299                           	callstack 19
  8300                           
  8301                           ;incstack = 0
  8302                           ;expander_setOutput@output stored from wreg
  8303  012144  6E13               	movwf	expander_setOutput@output^0,c
  8304  012146                     
  8305                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 49:     expander_sendByte(0x15, output);
  8306  012146  C013  F00E         	movff	expander_setOutput@output,expander_sendByte@byte
  8307  01214A  0E15               	movlw	21
  8308  01214C  ECA2  F08E         	call	_expander_sendByte
  8309  012150  0012               	return		;funcret
  8310  012152                     __end_of_expander_setOutput:
  8311                           	callstack 0
  8312                           
  8313 ;; *************** function _expander_sendByte *****************
  8314 ;; Defined at:
  8315 ;;		line 32 in file "mcc_generated_files/LCDMiniDrivers/expander.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  addr            1    wreg     unsigned char 
  8318 ;;  byte            1   13[COMRAM] unsigned char 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  addr            1   14[COMRAM] unsigned char 
  8321 ;;  cmd             3   15[COMRAM] unsigned char [3]
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8331 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8334 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8335 ;;Total ram usage:        5 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    7
  8338 ;; This function calls:
  8339 ;;		_SPI1_Close
  8340 ;;		_SPI1_WriteBlock
  8341 ;;		_spi_master_open
  8342 ;; This function is called by:
  8343 ;;		_expander_setup
  8344 ;;		_expander_setOutput
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text63
  8349  011D44                     __ptext63:
  8350                           	callstack 0
  8351  011D44                     _expander_sendByte:
  8352                           	callstack 19
  8353                           
  8354                           ;incstack = 0
  8355                           ;expander_sendByte@addr stored from wreg
  8356  011D44  6E0F               	movwf	expander_sendByte@addr^0,c
  8357  011D46                     
  8358                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 33:     spi_master_open(LCD);
  8359  011D46  0E00               	movlw	0
  8360  011D48  ECBB  F08E         	call	_spi_master_open
  8361  011D4C                     
  8362                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 34:     LATDbits.LATD7 = 0;
  8363  011D4C  9E85               	bcf	133,7,c	;volatile
  8364  011D4E                     
  8365                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 35:     uint8_t cmd[3];;mcc_generated_fi
      +                          les/LCDMiniDrivers/expander.c: 36:     cmd[0] = 0b01000000;
  8366  011D4E  0E40               	movlw	64
  8367  011D50  6E10               	movwf	expander_sendByte@cmd^0,c
  8368  011D52                     
  8369                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 37:     cmd[1] = addr;
  8370  011D52  C00F  F011         	movff	expander_sendByte@addr,expander_sendByte@cmd+1
  8371  011D56                     
  8372                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 38:     cmd[2] = byte;
  8373  011D56  C00E  F012         	movff	expander_sendByte@byte,expander_sendByte@cmd+2
  8374  011D5A                     
  8375                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 39:     SPI1_WriteBlock(cmd, 3);
  8376  011D5A  0E10               	movlw	low expander_sendByte@cmd
  8377  011D5C  6E08               	movwf	SPI1_WriteBlock@block^0,c
  8378  011D5E  0E00               	movlw	high expander_sendByte@cmd
  8379  011D60  6E09               	movwf	(SPI1_WriteBlock@block+1)^0,c
  8380  011D62  0E00               	movlw	0
  8381  011D64  6E0B               	movwf	(SPI1_WriteBlock@blockSize+1)^0,c
  8382  011D66  0E03               	movlw	3
  8383  011D68  6E0A               	movwf	SPI1_WriteBlock@blockSize^0,c
  8384  011D6A  ECAA  F08D         	call	_SPI1_WriteBlock	;wreg free
  8385  011D6E                     
  8386                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 40:     LATDbits.LATD7 = 1;
  8387  011D6E  8E85               	bsf	133,7,c	;volatile
  8388  011D70                     
  8389                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 41:     SPI1_Close();
  8390  011D70  ECC2  F090         	call	_SPI1_Close	;wreg free
  8391  011D74  0012               	return		;funcret
  8392  011D76                     __end_of_expander_sendByte:
  8393                           	callstack 0
  8394                           
  8395 ;; *************** function _spi_master_open *****************
  8396 ;; Defined at:
  8397 ;;		line 53 in file "mcc_generated_files/drivers/spi_master.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;  config          1    wreg     enum E377
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;  config          1   10[COMRAM] enum E377
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      _Bool 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8414 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8415 ;;Total ram usage:        3 bytes
  8416 ;; Hardware stack levels used:    1
  8417 ;; Hardware stack levels required when called:    6
  8418 ;; This function calls:
  8419 ;;		_LCD_open
  8420 ;; This function is called by:
  8421 ;;		_digipot_setWiper
  8422 ;;		_expander_sendByte
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text64
  8427  011D76                     __ptext64:
  8428                           	callstack 0
  8429  011D76                     _spi_master_open:
  8430                           	callstack 19
  8431                           
  8432                           ;incstack = 0
  8433                           ;spi_master_open@config stored from wreg
  8434  011D76  6E0B               	movwf	spi_master_open@config^0,c
  8435  011D78                     
  8436                           ;mcc_generated_files/drivers/spi_master.c: 54:     switch(config){
  8437  011D78  EFC2  F08E         	goto	l3101
  8438  011D7C                     l3095:
  8439                           
  8440                           ;mcc_generated_files/drivers/spi_master.c: 56:             return LCD_open();;	Return va
      +                          lue of _spi_master_open is never used
  8441  011D7C  ECB8  F090         	call	_LCD_open	;wreg free
  8442  011D80  EFD3  F08E         	goto	l28
  8443  011D84                     l3101:
  8444  011D84  500B               	movf	spi_master_open@config^0,w,c
  8445  011D86  6E09               	movwf	??_spi_master_open^0,c
  8446  011D88  6A0A               	clrf	(??_spi_master_open+1)^0,c
  8447                           
  8448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8449                           ; Switch size 1, requested type "simple"
  8450                           ; Number of cases is 1, Range of values is 0 to 0
  8451                           ; switch strategies available:
  8452                           ; Name         Instructions Cycles
  8453                           ; simple_byte            4     3 (average)
  8454                           ;	Chosen strategy is simple_byte
  8455  011D8A  500A               	movf	(??_spi_master_open+1)^0,w,c
  8456  011D8C  0A00               	xorlw	0	; case 0
  8457  011D8E  B4D8               	btfsc	status,2,c
  8458  011D90  EFCC  F08E         	goto	l4389
  8459  011D94  EFD3  F08E         	goto	l28
  8460  011D98                     l4389:
  8461                           
  8462                           ; Switch size 1, requested type "simple"
  8463                           ; Number of cases is 1, Range of values is 0 to 0
  8464                           ; switch strategies available:
  8465                           ; Name         Instructions Cycles
  8466                           ; simple_byte            4     3 (average)
  8467                           ;	Chosen strategy is simple_byte
  8468  011D98  5009               	movf	??_spi_master_open^0,w,c
  8469  011D9A  0A00               	xorlw	0	; case 0
  8470  011D9C  B4D8               	btfsc	status,2,c
  8471  011D9E  EFBE  F08E         	goto	l3095
  8472  011DA2  EFD3  F08E         	goto	l28
  8473  011DA6                     l28:
  8474  011DA6  0012               	return		;funcret
  8475  011DA8                     __end_of_spi_master_open:
  8476                           	callstack 0
  8477                           
  8478 ;; *************** function _LCD_open *****************
  8479 ;; Defined at:
  8480 ;;		line 40 in file "mcc_generated_files/drivers/spi_master.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;		None
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      _Bool 
  8487 ;; Registers used:
  8488 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8498 ;;Total ram usage:        0 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    5
  8501 ;; This function calls:
  8502 ;;		_SPI1_Open
  8503 ;; This function is called by:
  8504 ;;		_spi_master_open
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text65
  8509  012170                     __ptext65:
  8510                           	callstack 0
  8511  012170                     _LCD_open:
  8512                           	callstack 19
  8513  012170                     
  8514                           ;mcc_generated_files/drivers/spi_master.c: 41:     return SPI1_Open(LCD_CONFIG);
  8515  012170  0E00               	movlw	0
  8516  012172  EC38  F08A         	call	_SPI1_Open
  8517  012176  0012               	return		;funcret
  8518  012178                     __end_of_LCD_open:
  8519                           	callstack 0
  8520                           
  8521 ;; *************** function _SPI1_Open *****************
  8522 ;; Defined at:
  8523 ;;		line 78 in file "mcc_generated_files/spi1.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  spi1UniqueCo    1    wreg     enum E355
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;  spi1UniqueCo    1    7[COMRAM] enum E355
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      _Bool 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8541 ;;Total ram usage:        2 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    4
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_LCD_open
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text66
  8552  011470                     __ptext66:
  8553                           	callstack 0
  8554  011470                     _SPI1_Open:
  8555                           	callstack 19
  8556                           
  8557                           ;incstack = 0
  8558                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  8559  011470  6E08               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
  8560  011472                     
  8561                           ;mcc_generated_files/spi1.c: 78: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 79: {;mcc_generated_files/spi1.c: 80:     if(!SSP1CON1bits.SS
      +                          PEN)
  8562  011472  BA95               	btfsc	149,5,c	;volatile
  8563  011474  EF3E  F08A         	goto	u1451
  8564  011478  EF40  F08A         	goto	u1450
  8565  01147C                     u1451:
  8566  01147C  EF92  F08A         	goto	l3069
  8567  011480                     u1450:
  8568  011480                     
  8569                           ;mcc_generated_files/spi1.c: 81:     {;mcc_generated_files/spi1.c: 82:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  8570  011480  5008               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  8571  011482  0D04               	mullw	4
  8572  011484  0E01               	movlw	1
  8573  011486  26F3               	addwf	243,f,c
  8574  011488  0E00               	movlw	0
  8575  01148A  22F4               	addwfc	244,f,c
  8576  01148C  0E17               	movlw	low _spi1_configuration
  8577  01148E  24F3               	addwf	243,w,c
  8578  011490  6EF6               	movwf	tblptrl,c
  8579  011492  0EFF               	movlw	high _spi1_configuration
  8580  011494  20F4               	addwfc	244,w,c
  8581  011496  6EF7               	movwf	tblptrh,c
  8582  011498                     	if	1	;There are 3 active tblptr bytes
  8583  011498  6AF8               	clrf	tblptru,c
  8584  01149A  0E00               	movlw	low (__mediumconst shr (0+16))
  8585  01149C  22F8               	addwfc	tblptru,f,c
  8586  01149E                     	endif
  8587  01149E  0008               	tblrd		*
  8588  0114A0  CFF5 FF94          	movff	tablat,3988	;volatile
  8589                           
  8590                           ;mcc_generated_files/spi1.c: 83:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  8591  0114A4  5008               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  8592  0114A6  0D04               	mullw	4
  8593  0114A8  0E17               	movlw	low _spi1_configuration
  8594  0114AA  24F3               	addwf	243,w,c
  8595  0114AC  6EF6               	movwf	tblptrl,c
  8596  0114AE  0EFF               	movlw	high _spi1_configuration
  8597  0114B0  20F4               	addwfc	244,w,c
  8598  0114B2  6EF7               	movwf	tblptrh,c
  8599  0114B4                     	if	1	;There are 3 active tblptr bytes
  8600  0114B4  6AF8               	clrf	tblptru,c
  8601  0114B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8602  0114B8  22F8               	addwfc	tblptru,f,c
  8603  0114BA                     	endif
  8604  0114BA  0008               	tblrd		*
  8605  0114BC  CFF5 FF95          	movff	tablat,3989	;volatile
  8606  0114C0                     
  8607                           ;mcc_generated_files/spi1.c: 84:         SSP1CON2 = 0x00;
  8608  0114C0  0E00               	movlw	0
  8609  0114C2  6E96               	movwf	150,c	;volatile
  8610  0114C4                     
  8611                           ;mcc_generated_files/spi1.c: 85:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  8612  0114C4  5008               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  8613  0114C6  0D04               	mullw	4
  8614  0114C8  0E02               	movlw	2
  8615  0114CA  26F3               	addwf	243,f,c
  8616  0114CC  0E00               	movlw	0
  8617  0114CE  22F4               	addwfc	244,f,c
  8618  0114D0  0E17               	movlw	low _spi1_configuration
  8619  0114D2  24F3               	addwf	243,w,c
  8620  0114D4  6EF6               	movwf	tblptrl,c
  8621  0114D6  0EFF               	movlw	high _spi1_configuration
  8622  0114D8  20F4               	addwfc	244,w,c
  8623  0114DA  6EF7               	movwf	tblptrh,c
  8624  0114DC                     	if	1	;There are 3 active tblptr bytes
  8625  0114DC  6AF8               	clrf	tblptru,c
  8626  0114DE  0E00               	movlw	low (__mediumconst shr (0+16))
  8627  0114E0  22F8               	addwfc	tblptru,f,c
  8628  0114E2                     	endif
  8629  0114E2  0008               	tblrd		*
  8630  0114E4  CFF5 FF92          	movff	tablat,3986	;volatile
  8631  0114E8                     
  8632                           ;mcc_generated_files/spi1.c: 86:         TRISCbits.TRISC6 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  8633  0114E8  5008               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  8634  0114EA  0D04               	mullw	4
  8635  0114EC  0E03               	movlw	3
  8636  0114EE  26F3               	addwf	243,f,c
  8637  0114F0  0E00               	movlw	0
  8638  0114F2  22F4               	addwfc	244,f,c
  8639  0114F4  0E17               	movlw	low _spi1_configuration
  8640  0114F6  24F3               	addwf	243,w,c
  8641  0114F8  6EF6               	movwf	tblptrl,c
  8642  0114FA  0EFF               	movlw	high _spi1_configuration
  8643  0114FC  20F4               	addwfc	244,w,c
  8644  0114FE  6EF7               	movwf	tblptrh,c
  8645  011500                     	if	1	;There are 3 active tblptr bytes
  8646  011500  6AF8               	clrf	tblptru,c
  8647  011502  0E00               	movlw	low (__mediumconst shr (0+16))
  8648  011504  22F8               	addwfc	tblptru,f,c
  8649  011506                     	endif
  8650  011506  0008               	tblrd		*
  8651  011508  CFF5 F007          	movff	tablat,??_SPI1_Open
  8652  01150C  3A07               	swapf	??_SPI1_Open^0,f,c
  8653  01150E  4607               	rlncf	??_SPI1_Open^0,f,c
  8654  011510  4607               	rlncf	??_SPI1_Open^0,f,c
  8655  011512  5089               	movf	137,w,c	;volatile
  8656  011514  1807               	xorwf	??_SPI1_Open^0,w,c
  8657  011516  0BBF               	andlw	-65
  8658  011518  1807               	xorwf	??_SPI1_Open^0,w,c
  8659  01151A  6E89               	movwf	137,c	;volatile
  8660  01151C                     
  8661                           ;mcc_generated_files/spi1.c: 87:         SSP1CON1bits.SSPEN = 1;
  8662  01151C  8A95               	bsf	149,5,c	;volatile
  8663  01151E                     
  8664                           ;mcc_generated_files/spi1.c: 88:         return 1;
  8665  01151E  0E01               	movlw	1
  8666  011520  EF93  F08A         	goto	l133
  8667  011524                     l3069:
  8668                           
  8669                           ;mcc_generated_files/spi1.c: 90:     return 0;
  8670  011524  0E00               	movlw	0
  8671  011526                     l133:
  8672  011526  0012               	return		;funcret
  8673  011528                     __end_of_SPI1_Open:
  8674                           	callstack 0
  8675                           
  8676 ;; *************** function _SPI1_WriteBlock *****************
  8677 ;; Defined at:
  8678 ;;		line 119 in file "mcc_generated_files/spi1.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;  block           2    7[COMRAM] PTR void 
  8681 ;;		 -> expander_sendByte@cmd(3), digipot_setWiper@cmd(2), 
  8682 ;;  blockSize       2    9[COMRAM] unsigned int 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  data            2   11[COMRAM] PTR unsigned char 
  8685 ;;		 -> expander_sendByte@cmd(3), digipot_setWiper@cmd(2), 
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8699 ;;Total ram usage:        6 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; Hardware stack levels required when called:    5
  8702 ;; This function calls:
  8703 ;;		_SPI1_ExchangeByte
  8704 ;; This function is called by:
  8705 ;;		_digipot_setWiper
  8706 ;;		_expander_sendByte
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text67
  8711  011B54                     __ptext67:
  8712                           	callstack 0
  8713  011B54                     _SPI1_WriteBlock:
  8714                           	callstack 20
  8715  011B54                     
  8716                           ;mcc_generated_files/spi1.c: 119: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 120: {;mcc_generated_files/spi1.c: 121:     uint8_t *data = bl
      +                          ock;
  8717  011B54  C008  F00C         	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
  8718  011B58  C009  F00D         	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
  8719                           
  8720                           ;mcc_generated_files/spi1.c: 122:     while(blockSize--)
  8721  011B5C  EFB9  F08D         	goto	l3113
  8722  011B60                     l3109:
  8723                           
  8724                           ;mcc_generated_files/spi1.c: 123:     {;mcc_generated_files/spi1.c: 124:         SPI1_Ex
      +                          changeByte(*data++);
  8725  011B60  C00C  FFD9         	movff	SPI1_WriteBlock@data,fsr2l
  8726  011B64  C00D  FFDA         	movff	SPI1_WriteBlock@data+1,fsr2h
  8727  011B68  50DF               	movf	indf2,w,c
  8728  011B6A  EC15  F090         	call	_SPI1_ExchangeByte
  8729  011B6E  4A0C               	infsnz	SPI1_WriteBlock@data^0,f,c
  8730  011B70  2A0D               	incf	(SPI1_WriteBlock@data+1)^0,f,c
  8731  011B72                     l3113:
  8732                           
  8733                           ;mcc_generated_files/spi1.c: 122:     while(blockSize--)
  8734  011B72  060A               	decf	SPI1_WriteBlock@blockSize^0,f,c
  8735  011B74  A0D8               	btfss	status,0,c
  8736  011B76  060B               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
  8737  011B78  280A               	incf	SPI1_WriteBlock@blockSize^0,w,c
  8738  011B7A  E106               	bnz	u1511
  8739  011B7C  280B               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
  8740  011B7E  A4D8               	btfss	status,2,c
  8741  011B80  EFC4  F08D         	goto	u1511
  8742  011B84  EFC6  F08D         	goto	u1510
  8743  011B88                     u1511:
  8744  011B88  EFB0  F08D         	goto	l3109
  8745  011B8C                     u1510:
  8746  011B8C  0012               	return		;funcret
  8747  011B8E                     __end_of_SPI1_WriteBlock:
  8748                           	callstack 0
  8749                           
  8750 ;; *************** function _SPI1_ExchangeByte *****************
  8751 ;; Defined at:
  8752 ;;		line 98 in file "mcc_generated_files/spi1.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  data            1    wreg     unsigned char 
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;  data            1    6[COMRAM] unsigned char 
  8757 ;; Return value:  Size  Location     Type
  8758 ;;                  1    wreg      unsigned char 
  8759 ;; Registers used:
  8760 ;;		wreg, status,2
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8770 ;;Total ram usage:        1 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; Hardware stack levels required when called:    4
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_SPI1_WriteBlock
  8777 ;;		_SPI1_ReadBlock
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text68
  8782  01202A                     __ptext68:
  8783                           	callstack 0
  8784  01202A                     _SPI1_ExchangeByte:
  8785                           	callstack 20
  8786                           
  8787                           ;incstack = 0
  8788                           ;SPI1_ExchangeByte@data stored from wreg
  8789  01202A  6E07               	movwf	SPI1_ExchangeByte@data^0,c
  8790  01202C                     
  8791                           ;mcc_generated_files/spi1.c: 98: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 99: {;mcc_generated_files/spi1.c: 100:     SSP1BUF = data;
  8792  01202C  C007  FF91         	movff	SPI1_ExchangeByte@data,3985	;volatile
  8793  012030                     l139:
  8794  012030  010E               	movlb	14	; () banked
  8795  012032  A1C8               	btfss	200,0,b	;volatile
  8796  012034  EF1E  F090         	goto	u1461
  8797  012038  EF20  F090         	goto	u1460
  8798  01203C                     u1461:
  8799  01203C  EF18  F090         	goto	l139
  8800  012040                     u1460:
  8801  012040                     
  8802                           ; BSR set to: 14
  8803                           ;mcc_generated_files/spi1.c: 102:     PIR3bits.SSP1IF = 0;
  8804  012040  91C8               	bcf	200,0,b	;volatile
  8805                           
  8806                           ;mcc_generated_files/spi1.c: 103:     return SSP1BUF;
  8807  012042  5091               	movf	145,w,c	;volatile
  8808  012044                     
  8809                           ; BSR set to: 14
  8810  012044  0012               	return		;funcret
  8811  012046                     __end_of_SPI1_ExchangeByte:
  8812                           	callstack 0
  8813                           
  8814 ;; *************** function _SPI1_Close *****************
  8815 ;; Defined at:
  8816 ;;		line 93 in file "mcc_generated_files/spi1.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;		None
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;		None
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  1    wreg      void 
  8823 ;; Registers used:
  8824 ;;		None
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8834 ;;Total ram usage:        0 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; Hardware stack levels required when called:    4
  8837 ;; This function calls:
  8838 ;;		Nothing
  8839 ;; This function is called by:
  8840 ;;		_digipot_setWiper
  8841 ;;		_expander_sendByte
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           	psect	text69
  8846  012184                     __ptext69:
  8847                           	callstack 0
  8848  012184                     _SPI1_Close:
  8849                           	callstack 21
  8850  012184                     
  8851                           ;mcc_generated_files/spi1.c: 95:     SSP1CON1bits.SSPEN = 0;
  8852  012184  9A95               	bcf	149,5,c	;volatile
  8853  012186  0012               	return		;funcret
  8854  012188                     __end_of_SPI1_Close:
  8855                           	callstack 0
  8856                           
  8857 ;; *************** function _DELAY_milliseconds *****************
  8858 ;; Defined at:
  8859 ;;		line 35 in file "mcc_generated_files/delay.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  milliseconds    2    6[COMRAM] unsigned short 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;		None
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      void 
  8866 ;; Registers used:
  8867 ;;		wreg, status,2, status,0
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8876 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8877 ;;Total ram usage:        3 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:    4
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_lcd_sendNibble
  8884 ;;		_lcd_sendByte
  8885 ;;		_lcd_returnHome
  8886 ;;		_lcd_clearDisplay
  8887 ;;		_lcd_setup
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text70
  8892  011E3A                     __ptext70:
  8893                           	callstack 0
  8894  011E3A                     _DELAY_milliseconds:
  8895                           	callstack 23
  8896  011E3A                     
  8897                           ;mcc_generated_files/delay.c: 36:     while(milliseconds--){
  8898  011E3A  EF27  F08F         	goto	l3307
  8899  011E3E                     l3305:
  8900                           
  8901                           ;mcc_generated_files/delay.c: 37:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
  8902  011E3E  0E0B               	movlw	11
  8903  011E40  6E09               	movwf	??_DELAY_milliseconds^0,c
  8904  011E42  0E62               	movlw	98
  8905  011E44                     u2957:
  8906  011E44  2EE8               	decfsz	wreg,f,c
  8907  011E46  D7FE               	bra	u2957
  8908  011E48  2E09               	decfsz	??_DELAY_milliseconds^0,f,c
  8909  011E4A  D7FC               	bra	u2957
  8910  011E4C  D000               	nop2	
  8911  011E4E                     l3307:
  8912                           
  8913                           ;mcc_generated_files/delay.c: 36:     while(milliseconds--){
  8914  011E4E  0607               	decf	DELAY_milliseconds@milliseconds^0,f,c
  8915  011E50  A0D8               	btfss	status,0,c
  8916  011E52  0608               	decf	(DELAY_milliseconds@milliseconds+1)^0,f,c
  8917  011E54  2807               	incf	DELAY_milliseconds@milliseconds^0,w,c
  8918  011E56  E106               	bnz	u1851
  8919  011E58  2808               	incf	(DELAY_milliseconds@milliseconds+1)^0,w,c
  8920  011E5A  A4D8               	btfss	status,2,c
  8921  011E5C  EF32  F08F         	goto	u1851
  8922  011E60  EF34  F08F         	goto	u1850
  8923  011E64                     u1851:
  8924  011E64  EF1F  F08F         	goto	l3305
  8925  011E68                     u1850:
  8926  011E68  0012               	return		;funcret
  8927  011E6A                     __end_of_DELAY_milliseconds:
  8928                           	callstack 0
  8929                           
  8930 ;; *************** function _PWM3_LoadDutyValue *****************
  8931 ;; Defined at:
  8932 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  dutyValue       2    6[COMRAM] unsigned short 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;		None
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  1    wreg      void 
  8939 ;; Registers used:
  8940 ;;		wreg, status,2, status,0
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8950 ;;Total ram usage:        4 bytes
  8951 ;; Hardware stack levels used:    1
  8952 ;; Hardware stack levels required when called:    4
  8953 ;; This function calls:
  8954 ;;		Nothing
  8955 ;; This function is called by:
  8956 ;;		_ControlAction
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text71
  8961  011D10                     __ptext71:
  8962                           	callstack 0
  8963  011D10                     _PWM3_LoadDutyValue:
  8964                           	callstack 24
  8965  011D10                     
  8966                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  8967  011D10  C007  F009         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  8968  011D14  C008  F00A         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
  8969  011D18  90D8               	bcf	status,0,c
  8970  011D1A  320A               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
  8971  011D1C  3209               	rrcf	??_PWM3_LoadDutyValue^0,f,c
  8972  011D1E  90D8               	bcf	status,0,c
  8973  011D20  320A               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
  8974  011D22  3209               	rrcf	??_PWM3_LoadDutyValue^0,f,c
  8975  011D24  5009               	movf	??_PWM3_LoadDutyValue^0,w,c
  8976  011D26  6EA3               	movwf	163,c	;volatile
  8977                           
  8978                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  8979  011D28  C007  F009         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  8980  011D2C  0E03               	movlw	3
  8981  011D2E  1609               	andwf	??_PWM3_LoadDutyValue^0,f,c
  8982  011D30  0E06               	movlw	6
  8983  011D32  6E0A               	movwf	(??_PWM3_LoadDutyValue+1)^0,c
  8984  011D34                     u2425:
  8985  011D34  90D8               	bcf	status,0,c
  8986  011D36  3609               	rlcf	??_PWM3_LoadDutyValue^0,f,c
  8987  011D38  2E0A               	decfsz	(??_PWM3_LoadDutyValue+1)^0,f,c
  8988  011D3A  EF9A  F08E         	goto	u2425
  8989  011D3E  5009               	movf	??_PWM3_LoadDutyValue^0,w,c
  8990  011D40  6EA2               	movwf	162,c	;volatile
  8991  011D42  0012               	return		;funcret
  8992  011D44                     __end_of_PWM3_LoadDutyValue:
  8993                           	callstack 0
  8994                           
  8995 ;; *************** function _INTERRUPT_InterruptManager *****************
  8996 ;; Defined at:
  8997 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  8998 ;; Parameters:    Size  Location     Type
  8999 ;;		None
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;		None
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  1    wreg      void 
  9004 ;; Registers used:
  9005 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;Total ram usage:        2 bytes
  9016 ;; Hardware stack levels used:    1
  9017 ;; Hardware stack levels required when called:    3
  9018 ;; This function calls:
  9019 ;;		_CCP1_CaptureISR
  9020 ;;		_TMR2_ISR
  9021 ;; This function is called by:
  9022 ;;		Interrupt level 2
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	intcode
  9027  000008                     __pintcode:
  9028                           	callstack 0
  9029  000008                     _INTERRUPT_InterruptManager:
  9030                           	callstack 17
  9031                           
  9032                           ;incstack = 0
  9033  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9034  00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
  9035  00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9036  000012                     
  9037                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  9038  000012  ACF2               	btfss	242,6,c	;volatile
  9039  000014  EF0E  F000         	goto	i2u274_41
  9040  000018  EF10  F000         	goto	i2u274_40
  9041  00001C                     i2u274_41:
  9042  00001C  EF35  F000         	goto	i2l197
  9043  000020                     i2u274_40:
  9044  000020                     
  9045                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
  9046  000020  010E               	movlb	14	; () banked
  9047  000022  A3C1               	btfss	193,1,b	;volatile
  9048  000024  EF16  F000         	goto	i2u275_41
  9049  000028  EF18  F000         	goto	i2u275_40
  9050  00002C                     i2u275_41:
  9051  00002C  EF23  F000         	goto	i2l192
  9052  000030                     i2u275_40:
  9053  000030                     
  9054                           ; BSR set to: 14
  9055  000030  A3C9               	btfss	201,1,b	;volatile
  9056  000032  EF1D  F000         	goto	i2u276_41
  9057  000036  EF1F  F000         	goto	i2u276_40
  9058  00003A                     i2u276_41:
  9059  00003A  EF23  F000         	goto	i2l192
  9060  00003E                     i2u276_40:
  9061  00003E                     
  9062                           ; BSR set to: 14
  9063                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR2_ISR();
  9064  00003E  EC6D  F08E         	call	_TMR2_ISR	;wreg free
  9065                           
  9066                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  9067  000042  EF35  F000         	goto	i2l197
  9068  000046                     i2l192:
  9069                           
  9070                           ; BSR set to: 14
  9071  000046  A1C3               	btfss	195,0,b	;volatile
  9072  000048  EF28  F000         	goto	i2u277_41
  9073  00004C  EF2A  F000         	goto	i2u277_40
  9074  000050                     i2u277_41:
  9075  000050  EF35  F000         	goto	i2l193
  9076  000054                     i2u277_40:
  9077  000054                     
  9078                           ; BSR set to: 14
  9079  000054  A1CB               	btfss	203,0,b	;volatile
  9080  000056  EF2F  F000         	goto	i2u278_41
  9081  00005A  EF31  F000         	goto	i2u278_40
  9082  00005E                     i2u278_41:
  9083  00005E  EF35  F000         	goto	i2l193
  9084  000062                     i2u278_40:
  9085  000062                     
  9086                           ; BSR set to: 14
  9087                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             CCP1_CaptureISR();
  9088  000062  ECD4  F08E         	call	_CCP1_CaptureISR	;wreg free
  9089                           
  9090                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  9091  000066  EF35  F000         	goto	i2l197
  9092  00006A                     i2l193:
  9093  00006A                     i2l197:
  9094  00006A  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9095  00006E  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9096  000072  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9097  000074  0011               	retfie		f
  9098  000076                     __end_of_INTERRUPT_InterruptManager:
  9099                           	callstack 0
  9100                           
  9101 ;; *************** function _TMR2_ISR *****************
  9102 ;; Defined at:
  9103 ;;		line 166 in file "mcc_generated_files/tmr2.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;		None
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:    2
  9124 ;; This function calls:
  9125 ;;		Absolute function
  9126 ;;		_TMR2_DefaultInterruptHandler
  9127 ;;		_TMR2_UserInterruptHandler
  9128 ;; This function is called by:
  9129 ;;		_INTERRUPT_InterruptManager
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           	psect	text73
  9134  011CDA                     __ptext73:
  9135                           	callstack 0
  9136  011CDA                     _TMR2_ISR:
  9137                           	callstack 17
  9138  011CDA                     
  9139                           ;mcc_generated_files/tmr2.c: 170:     PIR4bits.TMR2IF = 0;
  9140  011CDA  010E               	movlb	14	; () banked
  9141  011CDC  93C9               	bcf	201,1,b	;volatile
  9142  011CDE                     
  9143                           ; BSR set to: 14
  9144                           ;mcc_generated_files/tmr2.c: 172:     if(TMR2_InterruptHandler)
  9145  011CDE  0100               	movlb	0	; () banked
  9146  011CE0  51F4               	movf	_TMR2_InterruptHandler& (0+255),w,b
  9147  011CE2  11F5               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  9148  011CE4  11F6               	iorwf	(_TMR2_InterruptHandler+2)& (0+255),w,b
  9149  011CE6  B4D8               	btfsc	status,2,c
  9150  011CE8  EF78  F08E         	goto	i2u259_41
  9151  011CEC  EF7A  F08E         	goto	i2u259_40
  9152  011CF0                     i2u259_41:
  9153  011CF0  EF87  F08E         	goto	i2l613
  9154  011CF4                     i2u259_40:
  9155  011CF4                     
  9156                           ; BSR set to: 0
  9157                           ;mcc_generated_files/tmr2.c: 173:     {;mcc_generated_files/tmr2.c: 174:         TMR2_In
      +                          terruptHandler();
  9158  011CF4  D802               	call	i2u260_48
  9159  011CF6  EF87  F08E         	goto	i2u260_49
  9160  011CFA                     i2u260_48:
  9161  011CFA  0005               	push	
  9162  011CFC  6EFA               	movwf	pclath,c
  9163  011CFE  51F4               	movf	_TMR2_InterruptHandler& (0+255),w,b
  9164  011D00  6EFD               	movwf	tosl,c
  9165  011D02  51F5               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  9166  011D04  6EFE               	movwf	tosh,c
  9167  011D06  51F6               	movf	(_TMR2_InterruptHandler+2)& (0+255),w,b
  9168  011D08  6EFF               	movwf	tosu,c
  9169  011D0A  50FA               	movf	pclath,w,c
  9170  011D0C  0012               	return		;indir
  9171  011D0E                     i2u260_49:
  9172  011D0E                     i2l613:
  9173  011D0E  0012               	return		;funcret
  9174  011D10                     __end_of_TMR2_ISR:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  9178 ;; Defined at:
  9179 ;;		line 183 in file "mcc_generated_files/tmr2.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;		None
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;		None
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  1    wreg      void 
  9186 ;; Registers used:
  9187 ;;		None
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9197 ;;Total ram usage:        0 bytes
  9198 ;; Hardware stack levels used:    1
  9199 ;; This function calls:
  9200 ;;		Nothing
  9201 ;; This function is called by:
  9202 ;;		_TMR2_Initialize
  9203 ;;		_TMR2_ISR
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text74
  9208  01218E                     __ptext74:
  9209                           	callstack 0
  9210  01218E                     _TMR2_DefaultInterruptHandler:
  9211                           	callstack 18
  9212  01218E  0012               	return		;funcret
  9213  012190                     __end_of_TMR2_DefaultInterruptHandler:
  9214                           	callstack 0
  9215                           
  9216 ;; *************** function _TMR2_UserInterruptHandler *****************
  9217 ;; Defined at:
  9218 ;;		line 398 in file "application.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;		None
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;		None
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      void 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2, cstack
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9236 ;;Total ram usage:        0 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:    1
  9239 ;; This function calls:
  9240 ;;		_TMR2_Stop
  9241 ;; This function is called by:
  9242 ;;		_main
  9243 ;;		_TMR2_ISR
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           	psect	text75
  9248  0120AA                     __ptext75:
  9249                           	callstack 0
  9250  0120AA                     _TMR2_UserInterruptHandler:
  9251                           	callstack 17
  9252  0120AA                     
  9253                           ;application.c: 401:      if (!PORTAbits.RA1)
  9254  0120AA  B28C               	btfsc	140,1,c	;volatile
  9255  0120AC  EF5A  F090         	goto	i2u258_41
  9256  0120B0  EF5C  F090         	goto	i2u258_40
  9257  0120B4                     i2u258_41:
  9258  0120B4  EF60  F090         	goto	i2l864
  9259  0120B8                     i2u258_40:
  9260  0120B8                     
  9261                           ;application.c: 402:     {;application.c: 403:         TMR2_Stop();
  9262  0120B8  ECC4  F090         	call	_TMR2_Stop	;wreg free
  9263  0120BC                     
  9264                           ;application.c: 404:         fallingEdgeDetected=1;
  9265  0120BC  0E01               	movlw	1
  9266  0120BE  6E57               	movwf	_fallingEdgeDetected^0,c	;volatile
  9267  0120C0                     i2l864:
  9268  0120C0  0012               	return		;funcret
  9269  0120C2                     __end_of_TMR2_UserInterruptHandler:
  9270                           	callstack 0
  9271                           
  9272 ;; *************** function _TMR2_Stop *****************
  9273 ;; Defined at:
  9274 ;;		line 120 in file "mcc_generated_files/tmr2.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;		None
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;		None
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  1    wreg      void 
  9281 ;; Registers used:
  9282 ;;		None
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9292 ;;Total ram usage:        0 bytes
  9293 ;; Hardware stack levels used:    1
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_TMR2_UserInterruptHandler
  9298 ;;		_TMR2_StopTimer
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text76
  9303  012188                     __ptext76:
  9304                           	callstack 0
  9305  012188                     _TMR2_Stop:
  9306                           	callstack 17
  9307  012188                     
  9308                           ;mcc_generated_files/tmr2.c: 123:     T2CONbits.TMR2ON = 0;
  9309  012188  9EBC               	bcf	188,7,c	;volatile
  9310  01218A  0012               	return		;funcret
  9311  01218C                     __end_of_TMR2_Stop:
  9312                           	callstack 0
  9313                           
  9314 ;; *************** function _CCP1_CaptureISR *****************
  9315 ;; Defined at:
  9316 ;;		line 96 in file "mcc_generated_files/ccp1.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;		None
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;  module          2    2[COMRAM] struct CCPR1Reg_tag
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		wreg, status,2, pclath, tosl, cstack
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9334 ;;Total ram usage:        2 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; Hardware stack levels required when called:    2
  9337 ;; This function calls:
  9338 ;;		Absolute function
  9339 ;;		_CCP1_DefaultCallBack
  9340 ;;		_CCP1_UserInterruptHandler
  9341 ;; This function is called by:
  9342 ;;		_INTERRUPT_InterruptManager
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           	psect	text77
  9347  011DA8                     __ptext77:
  9348                           	callstack 0
  9349  011DA8                     _CCP1_CaptureISR:
  9350                           	callstack 17
  9351  011DA8                     
  9352                           ;mcc_generated_files/ccp1.c: 98:      CCP1_PERIOD_REG_T module;;mcc_generated_files/ccp1
      +                          .c: 101:     PIR6bits.CCP1IF = 0;
  9353  011DA8  010E               	movlb	14	; () banked
  9354  011DAA  91CB               	bcf	203,0,b	;volatile
  9355                           
  9356                           ;mcc_generated_files/ccp1.c: 104:     module.ccpr1l = CCPR1L;
  9357  011DAC  CFA9 F003          	movff	4009,CCP1_CaptureISR@module	;volatile
  9358                           
  9359                           ;mcc_generated_files/ccp1.c: 105:     module.ccpr1h = CCPR1H;
  9360  011DB0  CFAA F004          	movff	4010,CCP1_CaptureISR@module+1	;volatile
  9361  011DB4                     
  9362                           ; BSR set to: 14
  9363                           ;mcc_generated_files/ccp1.c: 108:     CCP1_CallBack(module.ccpr1_16Bit);
  9364  011DB4  C003  F001         	movff	CCP1_CaptureISR@module,CCP1_DefaultCallBack@capturedValue
  9365  011DB8  C004  F002         	movff	CCP1_CaptureISR@module+1,CCP1_DefaultCallBack@capturedValue+1
  9366  011DBC  D802               	call	i2u261_48
  9367  011DBE  EFEC  F08E         	goto	i2u261_49
  9368  011DC2                     i2u261_48:
  9369  011DC2  0005               	push	
  9370  011DC4  6EFA               	movwf	pclath,c
  9371  011DC6  0100               	movlb	0	; () banked
  9372  011DC8  51F7               	movf	_CCP1_CallBack& (0+255),w,b
  9373  011DCA  6EFD               	movwf	tosl,c
  9374  011DCC  51F8               	movf	(_CCP1_CallBack+1)& (0+255),w,b
  9375  011DCE  6EFE               	movwf	tosh,c
  9376  011DD0  51F9               	movf	(_CCP1_CallBack+2)& (0+255),w,b
  9377  011DD2  6EFF               	movwf	tosu,c
  9378  011DD4  50FA               	movf	pclath,w,c
  9379  011DD6  0012               	return		;indir
  9380  011DD8                     i2u261_49:
  9381  011DD8  0012               	return		;funcret
  9382  011DDA                     __end_of_CCP1_CaptureISR:
  9383                           	callstack 0
  9384                           
  9385 ;; *************** function _CCP1_UserInterruptHandler *****************
  9386 ;; Defined at:
  9387 ;;		line 416 in file "application.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;		None
  9390 ;; Auto vars:     Size  Location     Type
  9391 ;;		None
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  1    wreg      void 
  9394 ;; Registers used:
  9395 ;;		wreg, status,2, cstack
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9405 ;;Total ram usage:        0 bytes
  9406 ;; Hardware stack levels used:    1
  9407 ;; Hardware stack levels required when called:    1
  9408 ;; This function calls:
  9409 ;;		i2_TMR1_WriteTimer
  9410 ;; This function is called by:
  9411 ;;		_main
  9412 ;;		_CCP1_CaptureISR
  9413 ;; This function uses a non-reentrant model
  9414 ;;
  9415                           
  9416                           	psect	text78
  9417  012046                     __ptext78:
  9418                           	callstack 0
  9419  012046                     _CCP1_UserInterruptHandler:
  9420                           	callstack 17
  9421  012046                     
  9422                           ;application.c: 418:     TMR1_WriteTimer((uint8_t)0);
  9423  012046  0E00               	movlw	0
  9424  012048  6E02               	movwf	(i2TMR1_WriteTimer@timerVal+1)^0,c
  9425  01204A  0E00               	movlw	0
  9426  01204C  6E01               	movwf	i2TMR1_WriteTimer@timerVal^0,c
  9427  01204E  ECA0  F08F         	call	i2_TMR1_WriteTimer	;wreg free
  9428  012052                     
  9429                           ;application.c: 420:     ccpCapturedVal = CCPR1;
  9430  012052  CFA9 F0AF          	movff	4009,_ccpCapturedVal	;volatile
  9431  012056  CFAA F0B0          	movff	4010,_ccpCapturedVal+1	;volatile
  9432  01205A                     
  9433                           ;application.c: 421:     ccpCapturedFlag=1;
  9434  01205A  0E01               	movlw	1
  9435  01205C  0100               	movlb	0	; () banked
  9436  01205E  6FB3               	movwf	_ccpCapturedFlag& (0+255),b	;volatile
  9437  012060                     
  9438                           ; BSR set to: 0
  9439  012060  0012               	return		;funcret
  9440  012062                     __end_of_CCP1_UserInterruptHandler:
  9441                           	callstack 0
  9442                           
  9443 ;; *************** function i2_TMR1_WriteTimer *****************
  9444 ;; Defined at:
  9445 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  timerVal        2    0[COMRAM] unsigned short 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg, status,2
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9463 ;;Total ram usage:        2 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_CCP1_UserInterruptHandler
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text79
  9473  011F40                     __ptext79:
  9474                           	callstack 0
  9475  011F40                     i2_TMR1_WriteTimer:
  9476                           	callstack 17
  9477  011F40                     
  9478                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  9479  011F40  A4CE               	btfss	206,2,c	;volatile
  9480  011F42  EFA5  F08F         	goto	i2u243_41
  9481  011F46  EFA7  F08F         	goto	i2u243_40
  9482  011F4A                     i2u243_41:
  9483  011F4A  EFAF  F08F         	goto	i2l3701
  9484  011F4E                     i2u243_40:
  9485  011F4E                     
  9486                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  9487  011F4E  90CE               	bcf	206,0,c	;volatile
  9488  011F50                     
  9489                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  9490  011F50  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  9491  011F52  6ECD               	movwf	205,c	;volatile
  9492  011F54                     
  9493                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  9494  011F54  C001  FFCC         	movff	i2TMR1_WriteTimer@timerVal,4044	;volatile
  9495  011F58                     
  9496                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  9497  011F58  80CE               	bsf	206,0,c	;volatile
  9498                           
  9499                           ;mcc_generated_files/tmr1.c: 133:     }
  9500  011F5A  EFB3  F08F         	goto	i2l405
  9501  011F5E                     i2l3701:
  9502                           
  9503                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  9504  011F5E  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  9505  011F60  6ECD               	movwf	205,c	;volatile
  9506  011F62                     
  9507                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  9508  011F62  C001  FFCC         	movff	i2TMR1_WriteTimer@timerVal,4044	;volatile
  9509  011F66                     i2l405:
  9510  011F66  0012               	return		;funcret
  9511  011F68                     __end_ofi2_TMR1_WriteTimer:
  9512                           	callstack 0
  9513                           
  9514 ;; *************** function _CCP1_DefaultCallBack *****************
  9515 ;; Defined at:
  9516 ;;		line 62 in file "mcc_generated_files/ccp1.c"
  9517 ;; Parameters:    Size  Location     Type
  9518 ;;  capturedValu    2    0[COMRAM] unsigned short 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;		None
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  1    wreg      void 
  9523 ;; Registers used:
  9524 ;;		None
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9530 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9533 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9534 ;;Total ram usage:        2 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_CCP1_Initialize
  9540 ;;		_CCP1_CaptureISR
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           	psect	text80
  9545  012190                     __ptext80:
  9546                           	callstack 0
  9547  012190                     _CCP1_DefaultCallBack:
  9548                           	callstack 18
  9549  012190  0012               	return		;funcret
  9550  012192                     __end_of_CCP1_DefaultCallBack:
  9551                           	callstack 0
  9552                           
  9553                           	psect	text81
  9554  000000                     __ptext81:
  9555                           	callstack 0
  9556  000000                     
  9557                           	psect	rparam
  9558  0000                     
  9559                           	psect	temp
  9560  000058                     btemp:
  9561                           	callstack 0
  9562  000058                     	ds	1
  9563  0000                     int$flags	set	btemp
  9564  0000                     wtemp8	set	btemp+1
  9565  0000                     ttemp5	set	btemp+1
  9566  0000                     ttemp6	set	btemp+4
  9567  0000                     ttemp7	set	btemp+8
  9568                           
  9569                           	psect	idloc
  9570                           
  9571                           ;Config register IDLOC0 @ 0x200000
  9572                           ;	unspecified, using default values
  9573  200000                     	org	2097152
  9574  200000  FFFF               	dw	65535
  9575                           
  9576                           ;Config register IDLOC1 @ 0x200002
  9577                           ;	unspecified, using default values
  9578  200002                     	org	2097154
  9579  200002  FFFF               	dw	65535
  9580                           
  9581                           ;Config register IDLOC2 @ 0x200004
  9582                           ;	unspecified, using default values
  9583  200004                     	org	2097156
  9584  200004  FFFF               	dw	65535
  9585                           
  9586                           ;Config register IDLOC3 @ 0x200006
  9587                           ;	unspecified, using default values
  9588  200006                     	org	2097158
  9589  200006  FFFF               	dw	65535
  9590                           
  9591                           ;Config register IDLOC4 @ 0x200008
  9592                           ;	unspecified, using default values
  9593  200008                     	org	2097160
  9594  200008  FFFF               	dw	65535
  9595                           
  9596                           ;Config register IDLOC5 @ 0x20000A
  9597                           ;	unspecified, using default values
  9598  20000A                     	org	2097162
  9599  20000A  FFFF               	dw	65535
  9600                           
  9601                           ;Config register IDLOC6 @ 0x20000C
  9602                           ;	unspecified, using default values
  9603  20000C                     	org	2097164
  9604  20000C  FFFF               	dw	65535
  9605                           
  9606                           ;Config register IDLOC7 @ 0x20000E
  9607                           ;	unspecified, using default values
  9608  20000E                     	org	2097166
  9609  20000E  FFFF               	dw	65535
  9610                           
  9611                           ;Config register IDLOC8 @ 0x200010
  9612                           ;	unspecified, using default values
  9613  200010                     	org	2097168
  9614  200010  FFFF               	dw	65535
  9615                           
  9616                           ;Config register IDLOC9 @ 0x200012
  9617                           ;	unspecified, using default values
  9618  200012                     	org	2097170
  9619  200012  FFFF               	dw	65535
  9620                           
  9621                           ;Config register IDLOC10 @ 0x200014
  9622                           ;	unspecified, using default values
  9623  200014                     	org	2097172
  9624  200014  FFFF               	dw	65535
  9625                           
  9626                           ;Config register IDLOC11 @ 0x200016
  9627                           ;	unspecified, using default values
  9628  200016                     	org	2097174
  9629  200016  FFFF               	dw	65535
  9630                           
  9631                           ;Config register IDLOC12 @ 0x200018
  9632                           ;	unspecified, using default values
  9633  200018                     	org	2097176
  9634  200018  FFFF               	dw	65535
  9635                           
  9636                           ;Config register IDLOC13 @ 0x20001A
  9637                           ;	unspecified, using default values
  9638  20001A                     	org	2097178
  9639  20001A  FFFF               	dw	65535
  9640                           
  9641                           ;Config register IDLOC14 @ 0x20001C
  9642                           ;	unspecified, using default values
  9643  20001C                     	org	2097180
  9644  20001C  FFFF               	dw	65535
  9645                           
  9646                           ;Config register IDLOC15 @ 0x20001E
  9647                           ;	unspecified, using default values
  9648  20001E                     	org	2097182
  9649  20001E  FFFF               	dw	65535
  9650                           
  9651                           ;Config register IDLOC16 @ 0x200020
  9652                           ;	unspecified, using default values
  9653  200020                     	org	2097184
  9654  200020  FFFF               	dw	65535
  9655                           
  9656                           ;Config register IDLOC17 @ 0x200022
  9657                           ;	unspecified, using default values
  9658  200022                     	org	2097186
  9659  200022  FFFF               	dw	65535
  9660                           
  9661                           ;Config register IDLOC18 @ 0x200024
  9662                           ;	unspecified, using default values
  9663  200024                     	org	2097188
  9664  200024  FFFF               	dw	65535
  9665                           
  9666                           ;Config register IDLOC19 @ 0x200026
  9667                           ;	unspecified, using default values
  9668  200026                     	org	2097190
  9669  200026  FFFF               	dw	65535
  9670                           
  9671                           ;Config register IDLOC20 @ 0x200028
  9672                           ;	unspecified, using default values
  9673  200028                     	org	2097192
  9674  200028  FFFF               	dw	65535
  9675                           
  9676                           ;Config register IDLOC21 @ 0x20002A
  9677                           ;	unspecified, using default values
  9678  20002A                     	org	2097194
  9679  20002A  FFFF               	dw	65535
  9680                           
  9681                           ;Config register IDLOC22 @ 0x20002C
  9682                           ;	unspecified, using default values
  9683  20002C                     	org	2097196
  9684  20002C  FFFF               	dw	65535
  9685                           
  9686                           ;Config register IDLOC23 @ 0x20002E
  9687                           ;	unspecified, using default values
  9688  20002E                     	org	2097198
  9689  20002E  FFFF               	dw	65535
  9690                           
  9691                           ;Config register IDLOC24 @ 0x200030
  9692                           ;	unspecified, using default values
  9693  200030                     	org	2097200
  9694  200030  FFFF               	dw	65535
  9695                           
  9696                           ;Config register IDLOC25 @ 0x200032
  9697                           ;	unspecified, using default values
  9698  200032                     	org	2097202
  9699  200032  FFFF               	dw	65535
  9700                           
  9701                           ;Config register IDLOC26 @ 0x200034
  9702                           ;	unspecified, using default values
  9703  200034                     	org	2097204
  9704  200034  FFFF               	dw	65535
  9705                           
  9706                           ;Config register IDLOC27 @ 0x200036
  9707                           ;	unspecified, using default values
  9708  200036                     	org	2097206
  9709  200036  FFFF               	dw	65535
  9710                           
  9711                           ;Config register IDLOC28 @ 0x200038
  9712                           ;	unspecified, using default values
  9713  200038                     	org	2097208
  9714  200038  FFFF               	dw	65535
  9715                           
  9716                           ;Config register IDLOC29 @ 0x20003A
  9717                           ;	unspecified, using default values
  9718  20003A                     	org	2097210
  9719  20003A  FFFF               	dw	65535
  9720                           
  9721                           ;Config register IDLOC30 @ 0x20003C
  9722                           ;	unspecified, using default values
  9723  20003C                     	org	2097212
  9724  20003C  FFFF               	dw	65535
  9725                           
  9726                           ;Config register IDLOC31 @ 0x20003E
  9727                           ;	unspecified, using default values
  9728  20003E                     	org	2097214
  9729  20003E  FFFF               	dw	65535
  9730                           
  9731                           ;Config register IDLOC32 @ 0x200040
  9732                           ;	unspecified, using default values
  9733  200040                     	org	2097216
  9734  200040  FFFF               	dw	65535
  9735                           
  9736                           ;Config register IDLOC33 @ 0x200042
  9737                           ;	unspecified, using default values
  9738  200042                     	org	2097218
  9739  200042  FFFF               	dw	65535
  9740                           
  9741                           ;Config register IDLOC34 @ 0x200044
  9742                           ;	unspecified, using default values
  9743  200044                     	org	2097220
  9744  200044  FFFF               	dw	65535
  9745                           
  9746                           ;Config register IDLOC35 @ 0x200046
  9747                           ;	unspecified, using default values
  9748  200046                     	org	2097222
  9749  200046  FFFF               	dw	65535
  9750                           
  9751                           ;Config register IDLOC36 @ 0x200048
  9752                           ;	unspecified, using default values
  9753  200048                     	org	2097224
  9754  200048  FFFF               	dw	65535
  9755                           
  9756                           ;Config register IDLOC37 @ 0x20004A
  9757                           ;	unspecified, using default values
  9758  20004A                     	org	2097226
  9759  20004A  FFFF               	dw	65535
  9760                           
  9761                           ;Config register IDLOC38 @ 0x20004C
  9762                           ;	unspecified, using default values
  9763  20004C                     	org	2097228
  9764  20004C  FFFF               	dw	65535
  9765                           
  9766                           ;Config register IDLOC39 @ 0x20004E
  9767                           ;	unspecified, using default values
  9768  20004E                     	org	2097230
  9769  20004E  FFFF               	dw	65535
  9770                           
  9771                           ;Config register IDLOC40 @ 0x200050
  9772                           ;	unspecified, using default values
  9773  200050                     	org	2097232
  9774  200050  FFFF               	dw	65535
  9775                           
  9776                           ;Config register IDLOC41 @ 0x200052
  9777                           ;	unspecified, using default values
  9778  200052                     	org	2097234
  9779  200052  FFFF               	dw	65535
  9780                           
  9781                           ;Config register IDLOC42 @ 0x200054
  9782                           ;	unspecified, using default values
  9783  200054                     	org	2097236
  9784  200054  FFFF               	dw	65535
  9785                           
  9786                           ;Config register IDLOC43 @ 0x200056
  9787                           ;	unspecified, using default values
  9788  200056                     	org	2097238
  9789  200056  FFFF               	dw	65535
  9790                           
  9791                           ;Config register IDLOC44 @ 0x200058
  9792                           ;	unspecified, using default values
  9793  200058                     	org	2097240
  9794  200058  FFFF               	dw	65535
  9795                           
  9796                           ;Config register IDLOC45 @ 0x20005A
  9797                           ;	unspecified, using default values
  9798  20005A                     	org	2097242
  9799  20005A  FFFF               	dw	65535
  9800                           
  9801                           ;Config register IDLOC46 @ 0x20005C
  9802                           ;	unspecified, using default values
  9803  20005C                     	org	2097244
  9804  20005C  FFFF               	dw	65535
  9805                           
  9806                           ;Config register IDLOC47 @ 0x20005E
  9807                           ;	unspecified, using default values
  9808  20005E                     	org	2097246
  9809  20005E  FFFF               	dw	65535
  9810                           
  9811                           ;Config register IDLOC48 @ 0x200060
  9812                           ;	unspecified, using default values
  9813  200060                     	org	2097248
  9814  200060  FFFF               	dw	65535
  9815                           
  9816                           ;Config register IDLOC49 @ 0x200062
  9817                           ;	unspecified, using default values
  9818  200062                     	org	2097250
  9819  200062  FFFF               	dw	65535
  9820                           
  9821                           ;Config register IDLOC50 @ 0x200064
  9822                           ;	unspecified, using default values
  9823  200064                     	org	2097252
  9824  200064  FFFF               	dw	65535
  9825                           
  9826                           ;Config register IDLOC51 @ 0x200066
  9827                           ;	unspecified, using default values
  9828  200066                     	org	2097254
  9829  200066  FFFF               	dw	65535
  9830                           
  9831                           ;Config register IDLOC52 @ 0x200068
  9832                           ;	unspecified, using default values
  9833  200068                     	org	2097256
  9834  200068  FFFF               	dw	65535
  9835                           
  9836                           ;Config register IDLOC53 @ 0x20006A
  9837                           ;	unspecified, using default values
  9838  20006A                     	org	2097258
  9839  20006A  FFFF               	dw	65535
  9840                           
  9841                           ;Config register IDLOC54 @ 0x20006C
  9842                           ;	unspecified, using default values
  9843  20006C                     	org	2097260
  9844  20006C  FFFF               	dw	65535
  9845                           
  9846                           ;Config register IDLOC55 @ 0x20006E
  9847                           ;	unspecified, using default values
  9848  20006E                     	org	2097262
  9849  20006E  FFFF               	dw	65535
  9850                           
  9851                           ;Config register IDLOC56 @ 0x200070
  9852                           ;	unspecified, using default values
  9853  200070                     	org	2097264
  9854  200070  FFFF               	dw	65535
  9855                           
  9856                           ;Config register IDLOC57 @ 0x200072
  9857                           ;	unspecified, using default values
  9858  200072                     	org	2097266
  9859  200072  FFFF               	dw	65535
  9860                           
  9861                           ;Config register IDLOC58 @ 0x200074
  9862                           ;	unspecified, using default values
  9863  200074                     	org	2097268
  9864  200074  FFFF               	dw	65535
  9865                           
  9866                           ;Config register IDLOC59 @ 0x200076
  9867                           ;	unspecified, using default values
  9868  200076                     	org	2097270
  9869  200076  FFFF               	dw	65535
  9870                           
  9871                           ;Config register IDLOC60 @ 0x200078
  9872                           ;	unspecified, using default values
  9873  200078                     	org	2097272
  9874  200078  FFFF               	dw	65535
  9875                           
  9876                           ;Config register IDLOC61 @ 0x20007A
  9877                           ;	unspecified, using default values
  9878  20007A                     	org	2097274
  9879  20007A  FFFF               	dw	65535
  9880                           
  9881                           ;Config register IDLOC62 @ 0x20007C
  9882                           ;	unspecified, using default values
  9883  20007C                     	org	2097276
  9884  20007C  FFFF               	dw	65535
  9885                           
  9886                           ;Config register IDLOC63 @ 0x20007E
  9887                           ;	unspecified, using default values
  9888  20007E                     	org	2097278
  9889  20007E  FFFF               	dw	65535
  9890                           
  9891                           ;Config register IDLOC64 @ 0x200080
  9892                           ;	unspecified, using default values
  9893  200080                     	org	2097280
  9894  200080  FFFF               	dw	65535
  9895                           
  9896                           ;Config register IDLOC65 @ 0x200082
  9897                           ;	unspecified, using default values
  9898  200082                     	org	2097282
  9899  200082  FFFF               	dw	65535
  9900                           
  9901                           ;Config register IDLOC66 @ 0x200084
  9902                           ;	unspecified, using default values
  9903  200084                     	org	2097284
  9904  200084  FFFF               	dw	65535
  9905                           
  9906                           ;Config register IDLOC67 @ 0x200086
  9907                           ;	unspecified, using default values
  9908  200086                     	org	2097286
  9909  200086  FFFF               	dw	65535
  9910                           
  9911                           ;Config register IDLOC68 @ 0x200088
  9912                           ;	unspecified, using default values
  9913  200088                     	org	2097288
  9914  200088  FFFF               	dw	65535
  9915                           
  9916                           ;Config register IDLOC69 @ 0x20008A
  9917                           ;	unspecified, using default values
  9918  20008A                     	org	2097290
  9919  20008A  FFFF               	dw	65535
  9920                           
  9921                           ;Config register IDLOC70 @ 0x20008C
  9922                           ;	unspecified, using default values
  9923  20008C                     	org	2097292
  9924  20008C  FFFF               	dw	65535
  9925                           
  9926                           ;Config register IDLOC71 @ 0x20008E
  9927                           ;	unspecified, using default values
  9928  20008E                     	org	2097294
  9929  20008E  FFFF               	dw	65535
  9930                           
  9931                           ;Config register IDLOC72 @ 0x200090
  9932                           ;	unspecified, using default values
  9933  200090                     	org	2097296
  9934  200090  FFFF               	dw	65535
  9935                           
  9936                           ;Config register IDLOC73 @ 0x200092
  9937                           ;	unspecified, using default values
  9938  200092                     	org	2097298
  9939  200092  FFFF               	dw	65535
  9940                           
  9941                           ;Config register IDLOC74 @ 0x200094
  9942                           ;	unspecified, using default values
  9943  200094                     	org	2097300
  9944  200094  FFFF               	dw	65535
  9945                           
  9946                           ;Config register IDLOC75 @ 0x200096
  9947                           ;	unspecified, using default values
  9948  200096                     	org	2097302
  9949  200096  FFFF               	dw	65535
  9950                           
  9951                           ;Config register IDLOC76 @ 0x200098
  9952                           ;	unspecified, using default values
  9953  200098                     	org	2097304
  9954  200098  FFFF               	dw	65535
  9955                           
  9956                           ;Config register IDLOC77 @ 0x20009A
  9957                           ;	unspecified, using default values
  9958  20009A                     	org	2097306
  9959  20009A  FFFF               	dw	65535
  9960                           
  9961                           ;Config register IDLOC78 @ 0x20009C
  9962                           ;	unspecified, using default values
  9963  20009C                     	org	2097308
  9964  20009C  FFFF               	dw	65535
  9965                           
  9966                           ;Config register IDLOC79 @ 0x20009E
  9967                           ;	unspecified, using default values
  9968  20009E                     	org	2097310
  9969  20009E  FFFF               	dw	65535
  9970                           
  9971                           ;Config register IDLOC80 @ 0x2000A0
  9972                           ;	unspecified, using default values
  9973  2000A0                     	org	2097312
  9974  2000A0  FFFF               	dw	65535
  9975                           
  9976                           ;Config register IDLOC81 @ 0x2000A2
  9977                           ;	unspecified, using default values
  9978  2000A2                     	org	2097314
  9979  2000A2  FFFF               	dw	65535
  9980                           
  9981                           ;Config register IDLOC82 @ 0x2000A4
  9982                           ;	unspecified, using default values
  9983  2000A4                     	org	2097316
  9984  2000A4  FFFF               	dw	65535
  9985                           
  9986                           ;Config register IDLOC83 @ 0x2000A6
  9987                           ;	unspecified, using default values
  9988  2000A6                     	org	2097318
  9989  2000A6  FFFF               	dw	65535
  9990                           
  9991                           ;Config register IDLOC84 @ 0x2000A8
  9992                           ;	unspecified, using default values
  9993  2000A8                     	org	2097320
  9994  2000A8  FFFF               	dw	65535
  9995                           
  9996                           ;Config register IDLOC85 @ 0x2000AA
  9997                           ;	unspecified, using default values
  9998  2000AA                     	org	2097322
  9999  2000AA  FFFF               	dw	65535
 10000                           
 10001                           ;Config register IDLOC86 @ 0x2000AC
 10002                           ;	unspecified, using default values
 10003  2000AC                     	org	2097324
 10004  2000AC  FFFF               	dw	65535
 10005                           
 10006                           ;Config register IDLOC87 @ 0x2000AE
 10007                           ;	unspecified, using default values
 10008  2000AE                     	org	2097326
 10009  2000AE  FFFF               	dw	65535
 10010                           
 10011                           ;Config register IDLOC88 @ 0x2000B0
 10012                           ;	unspecified, using default values
 10013  2000B0                     	org	2097328
 10014  2000B0  FFFF               	dw	65535
 10015                           
 10016                           ;Config register IDLOC89 @ 0x2000B2
 10017                           ;	unspecified, using default values
 10018  2000B2                     	org	2097330
 10019  2000B2  FFFF               	dw	65535
 10020                           
 10021                           ;Config register IDLOC90 @ 0x2000B4
 10022                           ;	unspecified, using default values
 10023  2000B4                     	org	2097332
 10024  2000B4  FFFF               	dw	65535
 10025                           
 10026                           ;Config register IDLOC91 @ 0x2000B6
 10027                           ;	unspecified, using default values
 10028  2000B6                     	org	2097334
 10029  2000B6  FFFF               	dw	65535
 10030                           
 10031                           ;Config register IDLOC92 @ 0x2000B8
 10032                           ;	unspecified, using default values
 10033  2000B8                     	org	2097336
 10034  2000B8  FFFF               	dw	65535
 10035                           
 10036                           ;Config register IDLOC93 @ 0x2000BA
 10037                           ;	unspecified, using default values
 10038  2000BA                     	org	2097338
 10039  2000BA  FFFF               	dw	65535
 10040                           
 10041                           ;Config register IDLOC94 @ 0x2000BC
 10042                           ;	unspecified, using default values
 10043  2000BC                     	org	2097340
 10044  2000BC  FFFF               	dw	65535
 10045                           
 10046                           ;Config register IDLOC95 @ 0x2000BE
 10047                           ;	unspecified, using default values
 10048  2000BE                     	org	2097342
 10049  2000BE  FFFF               	dw	65535
 10050                           
 10051                           ;Config register IDLOC96 @ 0x2000C0
 10052                           ;	unspecified, using default values
 10053  2000C0                     	org	2097344
 10054  2000C0  FFFF               	dw	65535
 10055                           
 10056                           ;Config register IDLOC97 @ 0x2000C2
 10057                           ;	unspecified, using default values
 10058  2000C2                     	org	2097346
 10059  2000C2  FFFF               	dw	65535
 10060                           
 10061                           ;Config register IDLOC98 @ 0x2000C4
 10062                           ;	unspecified, using default values
 10063  2000C4                     	org	2097348
 10064  2000C4  FFFF               	dw	65535
 10065                           
 10066                           ;Config register IDLOC99 @ 0x2000C6
 10067                           ;	unspecified, using default values
 10068  2000C6                     	org	2097350
 10069  2000C6  FFFF               	dw	65535
 10070                           
 10071                           ;Config register IDLOC100 @ 0x2000C8
 10072                           ;	unspecified, using default values
 10073  2000C8                     	org	2097352
 10074  2000C8  FFFF               	dw	65535
 10075                           
 10076                           ;Config register IDLOC101 @ 0x2000CA
 10077                           ;	unspecified, using default values
 10078  2000CA                     	org	2097354
 10079  2000CA  FFFF               	dw	65535
 10080                           
 10081                           ;Config register IDLOC102 @ 0x2000CC
 10082                           ;	unspecified, using default values
 10083  2000CC                     	org	2097356
 10084  2000CC  FFFF               	dw	65535
 10085                           
 10086                           ;Config register IDLOC103 @ 0x2000CE
 10087                           ;	unspecified, using default values
 10088  2000CE                     	org	2097358
 10089  2000CE  FFFF               	dw	65535
 10090                           
 10091                           ;Config register IDLOC104 @ 0x2000D0
 10092                           ;	unspecified, using default values
 10093  2000D0                     	org	2097360
 10094  2000D0  FFFF               	dw	65535
 10095                           
 10096                           ;Config register IDLOC105 @ 0x2000D2
 10097                           ;	unspecified, using default values
 10098  2000D2                     	org	2097362
 10099  2000D2  FFFF               	dw	65535
 10100                           
 10101                           ;Config register IDLOC106 @ 0x2000D4
 10102                           ;	unspecified, using default values
 10103  2000D4                     	org	2097364
 10104  2000D4  FFFF               	dw	65535
 10105                           
 10106                           ;Config register IDLOC107 @ 0x2000D6
 10107                           ;	unspecified, using default values
 10108  2000D6                     	org	2097366
 10109  2000D6  FFFF               	dw	65535
 10110                           
 10111                           ;Config register IDLOC108 @ 0x2000D8
 10112                           ;	unspecified, using default values
 10113  2000D8                     	org	2097368
 10114  2000D8  FFFF               	dw	65535
 10115                           
 10116                           ;Config register IDLOC109 @ 0x2000DA
 10117                           ;	unspecified, using default values
 10118  2000DA                     	org	2097370
 10119  2000DA  FFFF               	dw	65535
 10120                           
 10121                           ;Config register IDLOC110 @ 0x2000DC
 10122                           ;	unspecified, using default values
 10123  2000DC                     	org	2097372
 10124  2000DC  FFFF               	dw	65535
 10125                           
 10126                           ;Config register IDLOC111 @ 0x2000DE
 10127                           ;	unspecified, using default values
 10128  2000DE                     	org	2097374
 10129  2000DE  FFFF               	dw	65535
 10130                           
 10131                           ;Config register IDLOC112 @ 0x2000E0
 10132                           ;	unspecified, using default values
 10133  2000E0                     	org	2097376
 10134  2000E0  FFFF               	dw	65535
 10135                           
 10136                           ;Config register IDLOC113 @ 0x2000E2
 10137                           ;	unspecified, using default values
 10138  2000E2                     	org	2097378
 10139  2000E2  FFFF               	dw	65535
 10140                           
 10141                           ;Config register IDLOC114 @ 0x2000E4
 10142                           ;	unspecified, using default values
 10143  2000E4                     	org	2097380
 10144  2000E4  FFFF               	dw	65535
 10145                           
 10146                           ;Config register IDLOC115 @ 0x2000E6
 10147                           ;	unspecified, using default values
 10148  2000E6                     	org	2097382
 10149  2000E6  FFFF               	dw	65535
 10150                           
 10151                           ;Config register IDLOC116 @ 0x2000E8
 10152                           ;	unspecified, using default values
 10153  2000E8                     	org	2097384
 10154  2000E8  FFFF               	dw	65535
 10155                           
 10156                           ;Config register IDLOC117 @ 0x2000EA
 10157                           ;	unspecified, using default values
 10158  2000EA                     	org	2097386
 10159  2000EA  FFFF               	dw	65535
 10160                           
 10161                           ;Config register IDLOC118 @ 0x2000EC
 10162                           ;	unspecified, using default values
 10163  2000EC                     	org	2097388
 10164  2000EC  FFFF               	dw	65535
 10165                           
 10166                           ;Config register IDLOC119 @ 0x2000EE
 10167                           ;	unspecified, using default values
 10168  2000EE                     	org	2097390
 10169  2000EE  FFFF               	dw	65535
 10170                           
 10171                           ;Config register IDLOC120 @ 0x2000F0
 10172                           ;	unspecified, using default values
 10173  2000F0                     	org	2097392
 10174  2000F0  FFFF               	dw	65535
 10175                           
 10176                           ;Config register IDLOC121 @ 0x2000F2
 10177                           ;	unspecified, using default values
 10178  2000F2                     	org	2097394
 10179  2000F2  FFFF               	dw	65535
 10180                           
 10181                           ;Config register IDLOC122 @ 0x2000F4
 10182                           ;	unspecified, using default values
 10183  2000F4                     	org	2097396
 10184  2000F4  FFFF               	dw	65535
 10185                           
 10186                           ;Config register IDLOC123 @ 0x2000F6
 10187                           ;	unspecified, using default values
 10188  2000F6                     	org	2097398
 10189  2000F6  FFFF               	dw	65535
 10190                           
 10191                           ;Config register IDLOC124 @ 0x2000F8
 10192                           ;	unspecified, using default values
 10193  2000F8                     	org	2097400
 10194  2000F8  FFFF               	dw	65535
 10195                           
 10196                           ;Config register IDLOC125 @ 0x2000FA
 10197                           ;	unspecified, using default values
 10198  2000FA                     	org	2097402
 10199  2000FA  FFFF               	dw	65535
 10200                           
 10201                           ;Config register IDLOC126 @ 0x2000FC
 10202                           ;	unspecified, using default values
 10203  2000FC                     	org	2097404
 10204  2000FC  FFFF               	dw	65535
 10205                           
 10206                           ;Config register IDLOC127 @ 0x2000FE
 10207                           ;	unspecified, using default values
 10208  2000FE                     	org	2097406
 10209  2000FE  FFFF               	dw	65535
 10210                           
 10211                           	psect	config
 10212                           
 10213                           ;Config register CONFIG1L @ 0x300000
 10214                           ;	External Oscillator mode Selection bits
 10215                           ;	FEXTOSC = OFF, Oscillator not enabled
 10216                           ;	Power-up default value for COSC bits
 10217                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
 10218  300000                     	org	3145728
 10219  300000  EC                 	db	236
 10220                           
 10221                           ;Config register CONFIG1H @ 0x300001
 10222                           ;	Clock Out Enable bit
 10223                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 10224                           ;	Clock Switch Enable bit
 10225                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10226                           ;	Fail-Safe Clock Monitor Enable bit
 10227                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10228  300001                     	org	3145729
 10229  300001  FF                 	db	255
 10230                           
 10231                           ;Config register CONFIG2L @ 0x300002
 10232                           ;	Master Clear Enable bit
 10233                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
 10234                           ;	Power-up Timer Enable bit
 10235                           ;	PWRTE = OFF, Power up timer disabled
 10236                           ;	Low-power BOR enable bit
 10237                           ;	LPBOREN = OFF, Low power BOR is disabled
 10238                           ;	Brown-out Reset Enable bits
 10239                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 10240  300002                     	org	3145730
 10241  300002  FF                 	db	255
 10242                           
 10243                           ;Config register CONFIG2H @ 0x300003
 10244                           ;	Brown Out Reset Voltage selection bits
 10245                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
 10246                           ;	ZCD Disable bit
 10247                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 10248                           ;	PPSLOCK bit One-Way Set Enable bit
 10249                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 10250                           ;	Stack Full/Underflow Reset Enable bit
 10251                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10252                           ;	Extended Instruction Set Enable bit
 10253                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 10254  300003                     	org	3145731
 10255  300003  FF                 	db	255
 10256                           
 10257                           ;Config register CONFIG3L @ 0x300004
 10258                           ;	WDT Period Select bits
 10259                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10260                           ;	WDT operating mode
 10261                           ;	WDTE = OFF, WDT Disabled
 10262  300004                     	org	3145732
 10263  300004  9F                 	db	159
 10264                           
 10265                           ;Config register CONFIG3H @ 0x300005
 10266                           ;	WDT Window Select bits
 10267                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10268                           ;	WDT input clock selector
 10269                           ;	WDTCCS = SC, Software Control
 10270  300005                     	org	3145733
 10271  300005  FF                 	db	255
 10272                           
 10273                           ;Config register CONFIG4L @ 0x300006
 10274                           ;	Write Protection Block 0
 10275                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10276                           ;	Write Protection Block 1
 10277                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10278                           ;	Write Protection Block 2
 10279                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10280                           ;	Write Protection Block 3
 10281                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 10282                           ;	Write Protection Block 4
 10283                           ;	WRT4 = 0x1, unprogrammed default
 10284                           ;	Write Protection Block 5
 10285                           ;	WRT5 = 0x1, unprogrammed default
 10286                           ;	Write Protection Block 6
 10287                           ;	WRT6 = 0x1, unprogrammed default
 10288                           ;	Write Protection Block 7
 10289                           ;	WRT7 = 0x1, unprogrammed default
 10290  300006                     	org	3145734
 10291  300006  FF                 	db	255
 10292                           
 10293                           ;Config register CONFIG4H @ 0x300007
 10294                           ;	Configuration Register Write Protection bit
 10295                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 10296                           ;	Boot Block Write Protection bit
 10297                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10298                           ;	Data EEPROM Write Protection bit
 10299                           ;	WRTD = OFF, Data EEPROM not write-protected
 10300                           ;	Scanner Enable bit
 10301                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 10302                           ;	Low Voltage Programming Enable bit
 10303                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 10304  300007                     	org	3145735
 10305  300007  FF                 	db	255
 10306                           
 10307                           ;Config register CONFIG5L @ 0x300008
 10308                           ;	UserNVM Program Memory Code Protection bit
 10309                           ;	CP = OFF, UserNVM code protection disabled
 10310                           ;	DataNVM Memory Code Protection bit
 10311                           ;	CPD = OFF, DataNVM code protection disabled
 10312  300008                     	org	3145736
 10313  300008  FF                 	db	255
 10314                           
 10315                           ;Config register CONFIG5H @ 0x300009
 10316                           ;	unspecified, using default values
 10317  300009                     	org	3145737
 10318  300009  FF                 	db	255
 10319                           
 10320                           ;Config register CONFIG6L @ 0x30000A
 10321                           ;	Table Read Protection Block 0
 10322                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10323                           ;	Table Read Protection Block 1
 10324                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10325                           ;	Table Read Protection Block 2
 10326                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10327                           ;	Table Read Protection Block 3
 10328                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10329                           ;	Table Read Protection Block 4
 10330                           ;	EBTR4 = 0x1, unprogrammed default
 10331                           ;	Table Read Protection Block 5
 10332                           ;	EBTR5 = 0x1, unprogrammed default
 10333                           ;	Table Read Protection Block 6
 10334                           ;	EBTR6 = 0x1, unprogrammed default
 10335                           ;	Table Read Protection Block 7
 10336                           ;	EBTR7 = 0x1, unprogrammed default
 10337  30000A                     	org	3145738
 10338  30000A  FF                 	db	255
 10339                           
 10340                           ;Config register CONFIG6H @ 0x30000B
 10341                           ;	Boot Block Table Read Protection bit
 10342                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10343  30000B                     	org	3145739
 10344  30000B  FF                 	db	255
 10345                           tosu	equ	0xFFF
 10346                           tosh	equ	0xFFE
 10347                           tosl	equ	0xFFD
 10348                           stkptr	equ	0xFFC
 10349                           pclatu	equ	0xFFB
 10350                           pclath	equ	0xFFA
 10351                           pcl	equ	0xFF9
 10352                           tblptru	equ	0xFF8
 10353                           tblptrh	equ	0xFF7
 10354                           tblptrl	equ	0xFF6
 10355                           tablat	equ	0xFF5
 10356                           prodh	equ	0xFF4
 10357                           prodl	equ	0xFF3
 10358                           indf0	equ	0xFEF
 10359                           postinc0	equ	0xFEE
 10360                           postdec0	equ	0xFED
 10361                           preinc0	equ	0xFEC
 10362                           plusw0	equ	0xFEB
 10363                           fsr0h	equ	0xFEA
 10364                           fsr0l	equ	0xFE9
 10365                           wreg	equ	0xFE8
 10366                           indf1	equ	0xFE7
 10367                           postinc1	equ	0xFE6
 10368                           postdec1	equ	0xFE5
 10369                           preinc1	equ	0xFE4
 10370                           plusw1	equ	0xFE3
 10371                           fsr1h	equ	0xFE2
 10372                           fsr1l	equ	0xFE1
 10373                           bsr	equ	0xFE0
 10374                           indf2	equ	0xFDF
 10375                           postinc2	equ	0xFDE
 10376                           postdec2	equ	0xFDD
 10377                           preinc2	equ	0xFDC
 10378                           plusw2	equ	0xFDB
 10379                           fsr2h	equ	0xFDA
 10380                           fsr2l	equ	0xFD9
 10381                           status	equ	0xFD8

Data Sizes:
    Strings     223
    Constant    46
    Data        32
    BSS         114
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      87
    BANK0           160     71     156
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    S35$3$0	PTR void  size(2) Largest target is 0

    S35$4$0	PTR void  size(2) Largest target is 3
		 -> expander_sendByte@cmd(COMRAM[3]), digipot_setWiper@cmd(COMRAM[2]), 

    S35$5$0	PTR void  size(2) Largest target is 0

    Absolute function$0	PTR FTN()void  size(3) Largest target is 0

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> ControlAction@displayString1(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_15(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_15(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_15(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_15(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> ControlAction@displayString1(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2538_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> ControlAction@displayString1(BANK0[17]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> ControlAction@displayString1(BANK0[17]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_UserInterruptHandler(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_UserInterruptHandler(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(3) Largest target is 1
		 -> CCP1_UserInterruptHandler(), CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(3) Largest target is 1
		 -> CCP1_UserInterruptHandler(), CCP1_DefaultCallBack(), Absolute function(), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 3
		 -> expander_sendByte@cmd(COMRAM[3]), digipot_setWiper@cmd(COMRAM[2]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 3
		 -> expander_sendByte@cmd(COMRAM[3]), digipot_setWiper@cmd(COMRAM[2]), 

    lcd_writeString@string	PTR unsigned char  size(2) Largest target is 17
		 -> STR_21(CODE[17]), STR_20(CODE[17]), STR_19(CODE[17]), STR_18(CODE[17]), 
		 -> STR_17(CODE[17]), ControlAction@displayString1(BANK0[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 
		 -> lcd_example@row1_disp(COMRAM[16]), lcd_example@row0_disp(COMRAM[16]), 

    S35$spiISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    S35$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> Absolute function(), 

    S35$readByte	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ReadByte(), 

    S35$writeByte	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_WriteByte(), 

    S35$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S35$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S35$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S35$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S35$spiOpen	PTR FTN()_Bool  size(3) Largest target is 1
		 -> LCD_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(3) Largest target is 1
		 -> LCD_open(), 

    S35$spiClose	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 


Critical Paths under _main in COMRAM

    _lcd_setup->_lcd_sendByte
    _lcd_sendNibble->_expander_setOutput
    _lcd_clearDisplay->_lcd_sendByte
    _expander_setup->_expander_sendByte
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _CCP1_Initialize->_CCP1_SetCallBack
    _Init_display->_lcd_writeString
    _lcd_setContrast->_digipot_setWiper
    _digipot_setWiper->_SPI1_WriteBlock
    _DisableCapture->_TMR1_WriteTimer
    _DecodeCmd->_Reverse
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _lcd_writeString->_lcd_setAddr
    _lcd_writeChar->_lcd_sendByte
    _lcd_setAddr->_lcd_sendByte
    _lcd_returnHome->_lcd_sendByte
    _lcd_sendByte->_expander_setOutput
    _expander_setOutput->_expander_sendByte
    _expander_sendByte->_SPI1_WriteBlock
    _LCD_open->_SPI1_Open
    _SPI1_WriteBlock->_SPI1_ExchangeByte

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_UserInterruptHandler->i2_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_ApplicationTask
    _ApplicationTask->_ControlAction
    _ControlAction->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69960
                    _ApplicationTask
                   _CCP1_SetCallBack
                       _Init_display
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   15071
                    _CCP1_Initialize
                    _CLC1_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                          _lcd_setup
 ---------------------------------------------------------------------------------
 (2) _lcd_setup                                            0     0      0   14723
                 _DELAY_milliseconds
                 _expander_setOutput
                     _expander_setup
                   _lcd_clearDisplay
                     _lcd_returnHome
                       _lcd_sendByte
                     _lcd_sendNibble
 ---------------------------------------------------------------------------------
 (3) _lcd_sendNibble                                       4     3      1    2219
                                             19 COMRAM     4     3      1
                 _DELAY_milliseconds
                 _expander_setOutput
 ---------------------------------------------------------------------------------
 (3) _lcd_clearDisplay                                     0     0      0    3646
                 _DELAY_milliseconds
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (3) _expander_setup                                       0     0      0     772
                  _expander_sendByte
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             3     0      3     174
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0     174
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP1_SetCallBack                                     3     0      3     174
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Init_display                                         0     0      0   13309
                    _lcd_setContrast
                    _lcd_writeString
 ---------------------------------------------------------------------------------
 (2) _lcd_setContrast                                      1     1      0     596
                                             16 COMRAM     1     1      0
                   _digipot_setWiper
 ---------------------------------------------------------------------------------
 (3) _digipot_setWiper                                     3     3      0     574
                                             13 COMRAM     3     3      0
                         _SPI1_Close
                    _SPI1_WriteBlock
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (1) _ApplicationTask                                      4     4      0   41232
                                             67 BANK0      4     4      0
                      _ControlAction
                          _DecodeCmd
                     _DisableCapture
                           _GetEvent
                     _Init4nextFrame
                            _Reverse
            _TMR1_HasOverflowOccured
                    _TMR1_StartTimer
                    _TMR1_WriteTimer
                        _check4Start
                    _lcd_writeString
 ---------------------------------------------------------------------------------
 (2) _check4Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init4nextFrame                                       0     0      0     366
                     _DisableCapture
 ---------------------------------------------------------------------------------
 (3) _DisableCapture                                       0     0      0     366
                     _TMR1_StopTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     366
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetEvent                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DecodeCmd                                            5     5      0     341
                                              9 COMRAM     5     5      0
                            _Reverse
 ---------------------------------------------------------------------------------
 (2) _Reverse                                              3     3      0     157
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ControlAction                                       24    24      0   26793
                                             43 BANK0     24    24      0
                 _PWM3_LoadDutyValue
                    _lcd_writeString
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6   13589
                                             27 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   12911
                                             19 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   12399
                                             72 COMRAM    10     4      6
                                              0 BANK0     19    19      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    4491
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                             12 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4586
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2937
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1336
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     495
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_writeString                                      6     3      3   12713
                                             28 COMRAM     6     3      3
                     _lcd_returnHome
                        _lcd_setAddr
                      _lcd_writeChar
 ---------------------------------------------------------------------------------
 (3) _lcd_writeChar                                        1     1      0    2658
                                             26 COMRAM     1     1      0
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (3) _lcd_setAddr                                          2     1      1    2756
                                             26 COMRAM     2     1      1
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (3) _lcd_returnHome                                       0     0      0    3646
                 _DELAY_milliseconds
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (3) _lcd_sendByte                                         7     6      1    2636
                                             19 COMRAM     7     6      1
                 _DELAY_milliseconds
                 _expander_setOutput
 ---------------------------------------------------------------------------------
 (4) _expander_setOutput                                   1     1      0     794
                                             18 COMRAM     1     1      0
                  _expander_sendByte
 ---------------------------------------------------------------------------------
 (5) _expander_sendByte                                    5     4      1     772
                                             13 COMRAM     5     4      1
                         _SPI1_Close
                    _SPI1_WriteBlock
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (6) _spi_master_open                                      3     3      0     110
                                              8 COMRAM     3     3      0
                           _LCD_open
 ---------------------------------------------------------------------------------
 (7) _LCD_open                                             0     0      0      88
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (8) _SPI1_Open                                            2     2      0      88
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _SPI1_WriteBlock                                      6     2      4     394
                                              7 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SPI1_ExchangeByte                                    1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DELAY_milliseconds                                   3     1      2    1010
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadDutyValue                                   4     2      2     120
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          2     2      0     214
                                              4 COMRAM     2     2      0
                    _CCP1_CaptureISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
          _TMR2_UserInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR2_UserInterruptHandler                           0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (14) _TMR2_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP1_CaptureISR                                     2     2      0     214
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP1_DefaultCallBack *
          _CCP1_UserInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _CCP1_UserInterruptHandler                           0     0      0     114
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _CCP1_DefaultCallBack                                2     0      2      53
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ApplicationTask
     _ControlAction
       _PWM3_LoadDutyValue
       _lcd_writeString
         _lcd_returnHome
           _DELAY_milliseconds
           _lcd_sendByte
             _DELAY_milliseconds
             _expander_setOutput
               _expander_sendByte
                 _SPI1_Close
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
                 _spi_master_open
                   _LCD_open
                     _SPI1_Open
         _lcd_setAddr
           _lcd_sendByte
             _DELAY_milliseconds
             _expander_setOutput
               _expander_sendByte
                 _SPI1_Close
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
                 _spi_master_open
                   _LCD_open
                     _SPI1_Open
         _lcd_writeChar
           _lcd_sendByte
             _DELAY_milliseconds
             _expander_setOutput
               _expander_sendByte
                 _SPI1_Close
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
                 _spi_master_open
                   _LCD_open
                     _SPI1_Open
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _DecodeCmd
       _Reverse
     _DisableCapture
       _TMR1_StopTimer
       _TMR1_WriteTimer
     _GetEvent
     _Init4nextFrame
       _DisableCapture
         _TMR1_StopTimer
         _TMR1_WriteTimer
     _Reverse
     _TMR1_HasOverflowOccured
     _TMR1_StartTimer
     _TMR1_WriteTimer
     _check4Start
     _lcd_writeString
       _lcd_returnHome
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_setAddr
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_writeChar
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
   _CCP1_SetCallBack
   _Init_display
     _lcd_setContrast
       _digipot_setWiper
         _SPI1_Close
         _SPI1_WriteBlock
           _SPI1_ExchangeByte
         _spi_master_open
           _LCD_open
             _SPI1_Open
     _lcd_writeString
       _lcd_returnHome
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_setAddr
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_writeChar
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
   _SYSTEM_Initialize
     _CCP1_Initialize
       _CCP1_SetCallBack
     _CLC1_Initialize
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
     _lcd_setup
       _DELAY_milliseconds
       _expander_setOutput
         _expander_sendByte
           _SPI1_Close
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _spi_master_open
             _LCD_open
               _SPI1_Open
       _expander_setup
         _expander_sendByte
           _SPI1_Close
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _spi_master_open
             _LCD_open
               _SPI1_Open
       _lcd_clearDisplay
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_returnHome
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_sendByte
         _DELAY_milliseconds
         _expander_setOutput
           _expander_sendByte
             _SPI1_Close
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
             _spi_master_open
               _LCD_open
                 _SPI1_Open
       _lcd_sendNibble
         _DELAY_milliseconds
         _expander_setOutput
           _expander_sendByte
             _SPI1_Close
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
             _spi_master_open
               _LCD_open
                 _SPI1_Open
   _TMR2_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _CCP1_CaptureISR
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
     _CCP1_UserInterruptHandler *
       i2_TMR1_WriteTimer
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _TMR2_UserInterruptHandler *
       _TMR2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E1E      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      40       8       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      57       1       92.6%
BITBANK14           1F      0       0      33        0.0%
BANK14              1F      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     133       6        0.0%
DATA                 0      0     133       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 14 14:23:01 2020

                           ?_lcd_sendByte 0014                         _SPI1_ExchangeByte 202A  
        __end_of_TMR2_SetInterruptHandler 2128                        _SPI1_ExchangeBlock 000000  
                                      l23 2176                                        l41 1E96  
                                      l28 1DA6                                        l62 20A8  
                                      l71 2142                                        l80 2166  
                                      l56 19DA                                        l65 2078  
                                      l59 1790                                        l83 1676  
                                      l68 2118                                        l77 170C  
                                      l94 1D74                                        l97 215C  
                      ?_SPI1_ExchangeByte 0001                           ?_lcd_sendNibble 0014  
                     ___wmul@multiplicand 0009                   __end_of_CCP1_Initialize 1E3A  
                                     l100 2150                                       l141 2040  
                                     l133 1526                                       l142 2044  
                                     l136 2186                                       l129 1FB0  
                                     l250 1B52                                       l139 2030  
                                     l157 1B8C                                       l405 1F3E  
                                     l253 2090                                       l351 15D0  
                                     l256 2028                                       l417 2102  
                                     l441 1E38                                       l521 1EEE  
                                     l186 217A                                       l365 20D6  
                                     l447 2134                                       l391 1CA2  
                                     l368 1D42                                       l472 1EC2  
                                     l616 2126                                       l394 217E  
                                     l397 2182                                       l573 1E08  
                                     l646 1FEE                                       l831 11EE  
                                     l832 11F0                                       l488 20EC  
                                     l841 18A6                                       l819 0C32  
                                     l860 1F16                                       l844 1BC4  
                                     l853 200C                                       l694 1E68  
                                     l870 1F8C                                       l838 12E2  
                                     l848 1A60                                       l857 216E  
                                     l984 0F5E                                       l997 10C2  
                                     _PR2 000FBB                                       _PR4 000FB5  
              __end_of_DELAY_milliseconds 1E6A                           _timer1ReloadVal 00FA  
                                     _abs 1A62                          ?_lcd_setContrast 0001  
                     lcd_sendNibble@RSbit 0014                                       _pad 13AE  
                 __size_of_PMD_Initialize 001C                       ??_SPI1_ExchangeByte 0007  
                         _TMR2_Initialize 1DDA                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
       __end_of_TMR2_UserInterruptHandler 20C2                                      ?_abs 0019  
                                    l3101 1D84                                      l3111 1B6E  
                                    l3113 1B72                                      l3201 0F3E  
                                    l3121 19FA                                      l3115 2184  
                                    l3107 1B54                                      l3211 0F92  
                                    l3123 19FE                                      l3131 1CCC  
                                    l3109 1B60                                      l3061 14E8  
                                    l3053 1472                                      l3141 1D4C  
                                    l3301 2146                                      l3221 0FEA  
                                    l3213 0F96                                      l3205 0F60  
                                    l3117 19DC                                      l3125 1CA4  
                                    l1621 06D2                                      l2501 207A  
                                    l1630 0770                                      l3303 1E3A  
                                    l3063 151C                                      l3055 1480  
                                    l3151 1D6E                                      l3143 1D4E  
                                    l1711 0DD6                                      l3231 106C  
                                    l3223 0FFE                                      l3215 0FA4  
                                    l3207 0F64                                      l3119 19E8  
                                    l3127 1CB0                                      l3311 03DE  
                                    l3135 1BC6                                      l1623 06DA  
                                    l2503 20D8                                      l1720 1C6C  
                                    l1616 069A                                      l3305 1E3E  
                                    l3065 151E                                      l3057 14C0  
                                    l3073 2170                                      l3153 1D70  
                                    l3145 1D52                                      l3161 0DD8  
                                    l3225 100C                                      l3233 1072  
                                    l3217 0FC4                                      l3209 0F72  
                                    l3081 12F6                                      l3129 1CB4  
                                    l3241 13AE                                      l3321 0450  
                                    l3313 0406                                      l3401 07B6  
                                    l4201 099C                                      l1714 1B18  
                                    l3307 1E4E                                      l3059 14C4  
                                    l3147 1D56                                      l3139 1D46  
                                    l3155 1F68                                      l3171 0E1C  
                                    l3163 0DDC                                      l3235 1082  
                                    l3227 103A                                      l3219 0FE2  
                                    l3083 1308                                      l3251 13FE  
                                    l3243 13BC                                      l3331 049A  
                                    l3323 046C                                      l3315 0426  
                                    l3411 0826                                      l4211 09DA  
                                    l4203 09A8                                      l2531 1E98  
                                    l2515 1FD2                                      l1708 0DCE  
                                    l1644 090C                                      l1548 18F8  
                                    l3077 202C                                      l3069 1524  
                                    l3093 1D78                                      l3149 1D5A  
                                    l3157 1F84                                      l3181 0E72  
                                    l3173 0E3C                                      l3165 0DEA  
                                    l3237 10A2                                      l3229 105A  
                                    l3085 1312                                      l3253 1412  
                                    l3245 13D0                                      l3341 0538  
                                    l3333 04A4                                      l3325 047E  
                                    l3317 0434                                      l3309 03BE  
                                    l3421 08CA                                      l3413 082C  
                                    l3405 07F0                                      l3501 0036  
                                    l4221 0A1C                                      l4213 09DE  
                                    l4205 09B8                                      l2533 20C2  
                                    l2517 1FE6                                      l1590 146E  
                                    l1734 1C34                                      l1646 096E  
                                    l3095 1D7C                                      l3191 0EF4  
                                    l3183 0E86                                      l3175 0E40  
                                    l3167 0E0A                                      l3263 1A62  
                                    l3087 1330                                      l3079 12E4  
                                    l3255 1416                                      l3247 13DE  
                                    l3351 0608                                      l3335 04AA  
                                    l3343 059C                                      l3327 048C  
                                    l3319 0436                                      l3271 1ADE  
                                    l3431 0930                                      l3423 08E4  
                                    l3415 0832                                      l3407 0802  
                                    l1663 03BC                                      l3511 00B8  
                                    l3503 0048                                      l4151 179A  
                                    l4231 0A48                                      l4223 0A20  
                                    l4215 09EE                                      l4207 09BC  
                                    l4303 0BE6                                      l2471 1FAC  
                                    l4311 1AA6                                      l1728 194A  
                                    l1680 1AA0                                      l1760 218C  
                                    l1672 17EE                                      l3441 0C4C  
                                    l3193 0EF6                                      l3185 0E94  
                                    l3177 0E4C                                      l3169 0E0E  
                                    l3265 1A7C                                      l3089 1366  
                                    l3257 1442                                      l1585 13F2  
                                    l3249 13EA                                      l3361 064E  
                                    l3345 05B6                                      l3353 0616  
                                    l3337 052C                                      l3329 0492  
                                    l3281 1840                                      l3433 0946  
                                    l3425 08FE                                      l3409 0816  
                                    l3417 0890                                      l3521 0140  
                                    l3513 00C6                                      l3505 004C  
                                    l1673 17F6                                      l4153 17A8  
                                    l4161 18C2                                      l4241 0A92  
                                    l4233 0A58                                      l4225 0A24  
                                    l4217 09FE                                      l4209 09D0  
                                    l2529 1EC4                                      l2481 1544  
                                    l2473 1FAE                                      l4321 1AC2  
                                    l4313 1AA8                                      l3291 18FE  
                                    l3443 0C50                                      l3195 0F08  
                                    l3187 0EA6                                      l3179 0E6A  
                                    l3259 1456                                      l3363 065A  
                                    l3355 0628                                      l3347 05D4  
                                    l3339 0532                                      l3267 1BFE  
                                    l1771 184C                                      l3275 17F8  
                                    l3427 091A                                      l3419 08AC  
                                    l3371 069C                                      l3515 00E6  
                                    l3523 0152                                      l3507 0074  
                                    l4155 17CE                                      l4163 18CA  
                                    l4171 11FC                                      l4251 0AC0  
                                    l4243 0A94                                      l4235 0A5C  
                                    l4227 0A34                                      l4219 0A08  
                                    l3611 1E7C                                      l3603 1E6C  
                                    l2475 2178                                      l2491 1590  
                                    l2483 1558                                      l4323 1AD2  
                                    l4315 1AAA                                      l1588 1434  
                                    l1596 045C                                      l3285 1C36  
                                    l3293 1912                                      l3461 0D12  
                                    l3453 0CB4                                      l3445 0C70  
                                    l3437 0C34                                      l3189 0ED4  
                                    l3197 0F0E                                      l1677 1A98  
                                    l1749 13AC                                      l1757 1A1E  
                                    l3365 0662                                      l3357 0636  
                                    l3349 05EE                                      l3429 0920  
                                    l3381 06F8                                      l3373 06AA  
                                    l3541 029A                                      l3533 0222  
                                    l3525 017A                                      l3517 00F4  
                                    l3509 00AA                                      l4149 1792  
                                    l4165 18E6                                      l4157 18A8  
                                    l4181 1266                                      l4173 1202  
                                    l4261 0AF0                                      l4245 0AA4  
                                    l4237 0A72                                      l3613 1E90  
                                    l3605 1E72                                      l2493 1596  
                                    l2485 158A                                      l2477 200E  
                                    l2469 1F8E                                      l3621 19B4  
                                    l4317 1AAE                                      l4309 1AA2  
                                    l1766 1CD8                                      l1598 0464  
                                    l1782 1BFC                                      l3295 1940  
                                    l3471 0DA0                                      l3455 0CCA  
                                    l3447 0CAA                                      l3439 0C48  
                                    l3199 0F1E                                      l3359 063C  
                                    l3367 0672                                      l3279 182E  
                                    l3391 0738                                      l3383 0718  
                                    l3375 06AC                                      l3551 0348  
                                    l3543 02D6                                      l3535 024A  
                                    l3527 01A2                                      l4159 18BA  
                                    l4183 1282                                      l4175 1230  
                                    l4271 0B2C                                      l4263 0B00  
                                    l4239 0A8A                                      l4247 0AAC  
                                    l4255 0AD4                                      l4191 0970  
                                    l3615 1E92                                      l3607 1E74  
                                    l2495 1598                                      l2487 158C  
                                    l2479 1528                                      l3631 206C  
                                    l3623 19BC                                      l3711 15E2  
                                    l4319 1AB2                                      l1776 1854  
                                    l3481 1744                                      l3633 1678  
                                    l3297 1944                                      l3289 18FA  
                                    l3473 0DB2                                      l3465 0D4C  
                                    l3457 0CD2                                      l3449 0CAE  
                                    l3393 0754                                      l3385 0720  
                                    l3377 06C6                                      l3553 035C  
                                    l3537 0272                                      l3529 01EA  
                                    l4185 1292                                      l4177 1240  
                                    l4169 11F6                                      l4281 0B86  
                                    l4257 0AE8                                      l4249 0AB0  
                                    l4193 0974                                      l3609 1E78  
                                    l3705 2160                                      l2497 159A  
                                    l2489 158E                                      l3625 19C8  
                                    l3617 199A                                      l3721 1630  
                                    l3713 15EE                                      l3491 1770  
                                    l3483 174A                                      l3571 2092  
                                    l3651 1708                                      l3643 1686  
                                    l3635 1682                                      l3459 0CDA  
                                    l3395 0764                                      l3387 072A  
                                    l3379 06F0                                      l3539 028C  
                                    l3547 0312                                      l3563 0382  
                                    l4187 12AE                                      l4179 1256  
                                    l3811 112C                                      l4291 0BCE  
                                    l4283 0B98                                      l4275 0B50  
                                    l4267 0B14                                      l4259 0AEC  
                                    l4195 0988                                      l2499 159C  
                                    l3627 19CE                                      l3619 19AE  
                                    l3731 166E                                      l3723 163A  
                                    l3715 1604                                      l3707 15D2  
                                    l3493 177C                                      l3485 1756  
                                    l3573 209C                                      l3645 16C4  
                                    l3637 1682                                      l3469 0D8E  
                                    l3389 0730                                      l3565 03AA  
                                    l3549 033A                                      l3557 0368  
                                    l4189 12C2                                      l3821 1190  
                                    l3813 1152                                      l3805 10D0  
                                    l3581 1F18                                      l4277 0B62  
                                    l4269 0B1C                                      l4197 0994  
                                    l3741 1E32                                      l3653 2152  
                                    l3629 2062                                      l3733 1672  
                                    l3725 1644                                      l3717 160E  
                                    l3709 15D8                                      l3901 1B3A  
                                    ?_pad 0017                                      l3655 1D10  
                                    l3495 1784                                      l3487 175E  
                                    l3479 1710                                      l3575 2106  
                                    l3647 16F6                                      l3399 07A4  
                                    l3559 0376                                      l3831 11D6  
                                    l3823 11A0                                      l3815 1178  
                                    l3807 10F6                                      l3583 1F26  
                                    l3591 1F36                                      l3671 1F06  
                                    l3663 1EF0                                      l4295 0BD8  
                                    l4287 0BBC                                      l4199 0998  
                                    l3743 1E36                                      l3735 1E0A  
                                    l3751 1DF4                                      l3727 164E  
                                    l3719 1624                                      l3911 1B4E  
                                    l3903 1B3E                                      l3489 176A  
                                    l3577 2138                                      l3649 16F8  
                                    l3497 0000                                      l3673 1858  
                                    l3833 11EA                                      l3825 11AA  
                                    l3817 118A                                      l3809 111C  
                                    l3593 1F3A                                      l3585 1F28  
                                    l3665 1EF4                                      l4385 0BFC  
                                    l4297 0BDC                                      l4289 0BC4  
                                    l3913 1B8E                                      l3657 2128  
                                    l3737 1E1A                                      l3761 1C9E  
                                    l3753 1E04                                      l3745 1DDA  
                                    l3729 1658                                      l3905 1B42  
                                    l4387 0CFC                                      l3499 0028  
                                    l3675 18A4                                      l3827 11C0  
                                    l3819 118E                                      l3771 2000  
                                    l3579 2180                                      l3587 1F2C  
                                    l3667 1F00                                      l3763 217C  
                                    l3915 1B94                                      l3739 1E2A  
                                    l3755 1C6E                                      l3659 211A  
                                    l3747 1DEE                                      l3907 1B46  
                                    l4389 1D98                                      l3829 11D2  
                                    l3773 2004                                      l3589 1F30  
                                    l3669 1F04                                      l3861 216C  
                                    l3765 20EE                                      l3917 1BA4  
                                    l3757 1C82                                      l3749 1DF2  
                                    l3909 1B4A                                      l3783 1A20  
                                    l3919 1BB4                                      l3759 1C86  
                                    l3769 1FF0                                      l3785 1A38  
                                    l3779 200A                                      l3859 2168  
                                    l3787 1A4C                                      l3795 1A5E  
                                    l3891 1B26                                      l3789 1A58  
                                    l3893 1B2A                                      l3885 1B1A  
                                    l3799 10C4                                      l3895 1B2E  
                                    l3887 1B1E                                      l3897 1B32  
                                    l3889 1B22                                      l3899 1B36  
                                    STR_1 FF43                                      STR_2 FF87  
                                    STR_3 FFDC                                      STR_4 FF87  
                                    STR_5 FF54                                      STR_6 FF87  
                                    STR_7 FFED                                      STR_8 FF87  
                                    STR_9 FF65                                      u2000 064E  
                                    u2001 064A                                      u2010 06AA  
                                    u2011 06A6                                      u2100 0802  
                                    u2020 06C6                                      u2101 07FE  
                                    u2021 06C2                                      u2110 086A  
                                    u2030 06F0                                      u2031 06EC  
                                    u2200 0CC6                                      u2120 08AC  
                                    u2040 0754                                      u2201 0CC2  
                                    u2121 08A8                                      u2041 0750  
                                    u2210 0D88                                      u2130 08CA  
                                    u2050 079E                                      u2211 0D82  
                                    u2131 08C6                                      u2115 0858  
                                    u2051 0798                                      u2220 0D8A  
                                    u1500 1366                                      u2140 08E4  
                                    u2060 07A0                                      u2300 0152  
                                    u1501 1362                                      u2141 08E0  
                                    u2301 014E                                      _LATA 000F82  
                                    u1510 1B8C                                      u2230 0DA0  
                                    u2150 08FE                                      u2070 07B6  
                                    u2310 017A                                      _LATB 000F83  
                                    u1511 1B88                                      u2231 0D9C  
                                    u2151 08FA                                      u2071 07B2  
                                    u2311 0176                                      _LATC 000F84  
                                    u2400 16F2                                      u2240 0DB2  
                                    u1600 0E94                                      u1520 1A1E  
                                    u2160 090C                                      u2080 07EA  
                                    u2320 01A2                                      _LATD 000F85  
                                    u2241 0DAE                                      u1601 0E90  
                                    u1521 1A1A                                      u2161 0908  
                                    u2081 07E4                                      u2321 019E  
                                    _LATE 000F86                                      u1450 1480  
                                    u2410 1708                                      u1610 0ED4  
                                    u1530 1CCC                                      u2170 091A  
                                    u2090 07EC                                      u2330 024A  
                                    u2250 0028                                      u1451 147C  
                                    u2411 1704                                      u1611 0ED0  
                                    u1531 1CC8                                      u2171 0916  
                                    u2331 0246                                      u2251 0024  
                                    u1460 2040                                      u2180 0C70  
                                    u1620 0F1E                                      u1700 13DE  
                                    u1540 1BF6                                      u2340 0272  
                                    u2260 0074                                      u2500 1152  
                                    u1461 203C                                      u2181 0C6C  
                                    u1621 0F1A                                      u1701 13DA  
                                    u1541 1BF0                                      u2341 026E  
                                    u2261 0070                                      u2501 114E  
                                    u2190 0CAA                                      u1630 0F72  
                                    u1470 12F6                                      u1710 1434  
                                    u1550 1BF8                                      u2350 033A  
                                    u2270 00B8                                      u2510 1178  
                                    u2407 16E8                                      u2191 0CA6  
                                    u1631 0F6E                                      u1471 12F2  
                                    u1711 1430                                      u2351 0336  
                                    u2271 00B4                                      u2511 1174  
                                    u1560 0DEA                                      u1640 0FA4  
                                    u1480 1308                                      u1720 1442  
                                    u1800 1840                                      u2280 0138  
                                    u2520 11A0                                      u2360 1F26  
                                    u2440 2100                                      u2425 1D34  
                                    u1561 0DE6                                      u1641 0FA0  
                                    u1481 1304                                      u1721 143E  
                                    u1801 183C                                      u2281 0132  
                                    u2521 119C                                      u2361 1F22  
                                    u2441 20FA                                      u1810 1C66  
                                    u1570 0E1C                                      u1650 0FE2  
                                    u1730 1A7C                                      u1490 1330  
                                    u2290 013A                                      u2530 11C0  
                                    u2450 2000                                      _T2PR 000FBB  
                                    u1811 1C60                                      u1571 0E18  
                                    u1651 0FDE                                      u1731 1A78  
                                    u1491 132C                                      u2531 11BC  
                                    u2451 1FFC                                      u2380 16B4  
                                    u1820 1C68                                      u1660 100C  
                                    u1900 0450                                      u1740 1C2E  
                                    u2540 11D2                                      u2460 1A38  
                                    u1581 0E46                                      u1661 1008  
                                    u1901 044C                                      u1741 1C28  
                                    u2541 11CE                                      u2461 1A34  
                                    u2390 16C4                                      u1830 1912  
                                    u1590 0E6A                                      u1670 103A  
                                    u1910 047E                                      u1750 1C30  
                                    u2550 11EA                                      u2446 2102  
                                    u2470 1A4C                                      u2391 16C0  
                                    u1831 190E                                      u1591 0E66  
                                    u1671 1036                                      u1911 047A  
                                    u2551 11E6                                      u2471 1A48  
                                    u1840 1940                                      u1680 1082  
                                    u1920 048C                                      u1760 1B12  
                                    u2480 10F6                                      u1841 193C  
                                    u1681 107E                                      u1921 0488  
                                    u1761 1B0C                                      u2481 10F2  
                                    u1850 1E68                                      u1690 13BC  
                                    u1930 05B6                                      u1770 1B14  
                                    u2810 17EE                                      u2490 111C  
                                    _T4PR 000FB5                                      u1851 1E64  
                                    u2387 16AA                                      u1691 13B8  
                                    u1931 05B2                                      u2811 17EA  
                                    u2491 1118                                      u1940 05D4  
                                    u1860 03EE                                      u1780 1828  
                                    u2820 1240                                      u2900 0AA4  
                                    u1941 05D0                                      u1861 03E8  
                                    u1781 1822                                      u2821 123C  
                                    u2901 0AA0                                      u1950 05EE  
                                    u1870 03F0                                      u1790 182A  
                                    u2830 1256                                      u2910 0AE8  
                                    u1951 05EA                                      u2831 1252  
                                    u2911 0AE4                                      u1960 0608  
                                    u1880 0406                                      u2920 0B2C  
                                    u2840 0988                                      u1961 0604  
                                    u1881 0402                                      u2921 0B28  
                                    u2841 0984                                      u1970 0616  
                                    u1890 0434                                      u2930 0B62  
                                    u2850 09B8                                      u1971 0612  
                                    u1891 0430                                      u2931 0B5E  
                                    u2851 09B4                                      u1980 0628  
                                    u2940 0B98                                      u2860 09D0  
                                    _PMD0 000EDC                                      u1981 0624  
                                    u2941 0B94                                      u2861 09CC  
                                    _PMD1 000EDD                                      u1990 0636  
                                    u2870 0A1C                                      _PMD2 000EDE  
                                    u1991 0632                                      u2871 0A18  
                                    _PMD3 000EDF                                      u2880 0A58  
                                    _PMD4 000EE0                                      u2881 0A54  
                                    _PMD5 000EE1                                      u2890 0A72  
                                    u2891 0A6E                                      u2957 1E44  
                 _TMR1_HasOverflowOccured 20EE                                      _TMR2 000FBA  
                                    _TMR4 000FB4                                      _WPUA 000F0B  
                                    _WPUB 000F13                                      _WPUC 000F1B  
                                    _WPUD 000F20                                      _WPUE 000F28  
                 fp__CCP1_DefaultCallBack 0000                       _fallingEdgeDetected 0057  
                                    abs@a 0019                                      _dbuf 00B4  
                                    _atoi 0C34                                      _main 1AA2  
                                    _dtoa 03BE                           ?_lcd_returnHome 0001  
                                    _prec 0053                                      _nout 00AB  
                                    pad@i 001E                                      pad@p 001B  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 0020  
                                    fsr2l 000FD9                                      btemp 0058  
                                    _xtoa 069C                            ?_lcd_writeChar 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0076                           ?_Init4nextFrame 0001  
                __end_of_CCP1_SetCallBack 2136                 __end_of_SPI1_ExchangeByte 2046  
                       ??_CLC3_Initialize 0007                            ??_lcd_sendByte 0015  
                 __size_of_DisableCapture 0028                              ___param_bank 000000  
                        ?_CCP1_CaptureISR 0001                      lcd_sendNibble@packet 0017  
                    lcd_sendNibble@nibble 0016                                     ??_abs 001B  
                    __size_of_check4Start 0042                                     ??_pad 001D  
                 __end_of_PWM2_Initialize 20EE                           __end_of_Reverse 18A8  
          __size_of_OSCILLATOR_Initialize 0018                          _lcd_clearDisplay 2062  
           __end_of_OSCILLATOR_Initialize 2092                           _ccpCapturedFlag 00B3  
                 __end_of_ApplicationTask 0C34                     lcd_writeString@string 001D  
                        __end_of_LCD_open 2178                               ?_SPI1_Close 0001  
                         __end_of___aodiv 0F60                                     ?_atoi 000E  
                                   ?_main 0001                                     ?_dtoa 0022  
                         __end_of___aomod 10C4                                     _CCPR1 000FA9  
                                   STR_10 FF87                                     STR_11 FFCB  
                                   STR_12 FF87                                     STR_20 FF98  
                                   STR_21 FF87                                     STR_13 FFBA  
                                   STR_14 FF87                                     STR_15 FF31  
                                   STR_16 FF1F                                     STR_17 FFA9  
                                   STR_18 FF76                                     STR_19 FF98  
        SPI1_Open@spi1UniqueConfiguration 0008                           _TMR1_StartTimer 217C  
                                   _T1CLK 000FD1                                     ?_xtoa 0022  
                                   _T1CON 000FCE                                     _T2CON 000FBC  
                                   _T4CON 000FB6                                     _T2HLT 000FBD  
                                   _T4HLT 000FB7                                     _T2TMR 000FBA  
                                   _T2RST 000FBF                                     _T4TMR 000FB4  
                                   _T4RST 000FB9                                     i2l405 1F66  
                                   i2l192 0046                                     i2l193 006A  
                                   i2l444 1DD8                                     i2l613 1D0E  
                                   i2l197 006A                                     i2l438 2190  
                                   i2l619 218E                                     i2l588 218A  
                                   i2l864 20C0                                     i2l867 2060  
                                   _OSCEN 000ED7                              vfpfcnvrt@fmt 004B  
                            vfpfcnvrt@llu 0068                                     _TMR1H 000FCD  
                                   _TMR1L 000FCC                                     _TRISA 000F87  
                                   _TRISB 000F88                                     _TRISC 000F89  
                                   _TRISD 000F8A                                     _TRISE 000F8B  
                        lcd_writeString@i 0022                        __size_of_SPI1_Open 00B8  
                         _TMR4_Initialize 1FD2                             ?_Init_display 0001  
                       _expander_sendByte 1D44                   __end_of_lcd_writeString 170E  
                        __end_of_TMR2_ISR 1D10                          _digipot_setWiper 1E6A  
                                   _flags 0055                        __size_of_TMR2_Stop 0004  
                                   _index 00B2                                     _fputc 12E4  
                         __end_of_isalpha 1B1A                                     _fputs 19DC  
                         __end_of_isdigit 1C6E                        ?_expander_sendByte 000E  
                                   atoi@n 001B                                     pad@fp 0017  
                                   atoi@s 000E                                     _width 00AD  
                                   _putch 218C                                     dtoa@d 0024  
                                   dtoa@i 0044                                     dtoa@n 003C  
                                   dtoa@p 0036                                     dtoa@s 003A  
                                   dtoa@w 0038                           __end_of_islower 1BFE  
                         __end_of_isspace 194C                   __end_of_PWM3_Initialize 20D8  
                 __end_of_TMR1_Initialize 1CA4                           __end_of_isupper 1C36  
                                   pclath 000FFA                           ??_ControlAction 008B  
                                   tablat 000FF5        __size_of_CCP1_UserInterruptHandler 001C  
                                   ttemp5 0059                                     ttemp6 005C  
                                   ttemp7 0060                ?_CCP1_UserInterruptHandler 0001  
                                   status 000FD8                                     wtemp8 0059  
                         __end_of_sprintf 18FA                                     xtoa@c 0047  
                                   xtoa@d 0024                                     xtoa@i 0045  
                                   xtoa@n 003D                                     xtoa@p 0039  
                                   xtoa@w 003B                                     xtoa@x 002C  
                         __end_of_toupper 1856                       ??_expander_sendByte 000F  
                         _TMR1_WriteTimer 1F18                  __size_of_SPI1_Initialize 0024  
                   spi_master_open@config 000B                          __end_of_GetEvent 200E  
                            _toupper$2764 0013                           __initialization 194C  
                            __end_of_atoi 0DD8                              __end_of_main 1ADE  
                            __end_of_dtoa 069C                        __size_of_DecodeCmd 012E  
                            __end_of_xtoa 0970                          ??_expander_setup 0013  
                 __end_of_TMR2_Initialize 1E0A               ?_INTERRUPT_InterruptManager 0001  
                                  ??_atoi 0010                  _TMR2_SetInterruptHandler 211A  
                                  ??_main 0053                                    ??_dtoa 002C  
                        ?_CCP1_Initialize 0001                                    ??_xtoa 002D  
                           __activetblptr 000003                 __end_of_expander_sendByte 1D76  
                          ??_Init_display 0023                      expander_sendByte@cmd 0010  
               ??_TMR1_HasOverflowOccured 0007                                    ?_fputc 0007  
                                  ?_fputs 0010                                    _CCPR1H 000FAA  
                                  _CCPR2H 000FA6                                    _CCPR1L 000FA9  
                                  _CCPR2L 000FA5                                    _ANSELA 000F0C  
                                  ?_putch 0001                                    _ANSELB 000F14  
                                  _ANSELC 000F1C                                    _ANSELD 000F21  
                                  _ANSELE 000F29                                    _T1GATE 000FD0  
                                  _T1GCON 000FCF                                    _RA3PPS 000EE5  
                                  _RC0PPS 000EF2             __size_of_CCP1_DefaultCallBack 0002  
                                  _RC2PPS 000EF4                                    _RD1PPS 000EFB  
                 TMR1_WriteTimer@timerVal 0007                                    _RC4PPS 000EF6  
                                  _ODCONA 000F0A                                    _ODCONB 000F12  
                                  _ODCONC 000F1A                                    _RC6PPS 000EF8  
                                  _ODCOND 000F1F                                    _ODCONE 000F27  
                                  i2l4051 0030                                    i2l4053 003E  
                                  i2l4055 0054                                    i2l4047 0012  
                                  i2l4057 0062                                    i2l4049 0020  
                                  i2l3701 1F5E                                    i2l3703 1F62  
                                  i2l3661 2188                                    _INLVLA 000F08  
                                  _INLVLB 000F10                                    i2l3691 1F40  
                                  _INLVLC 000F18                                    _INLVLD 000F1D  
                                  i2l3693 1F4E                                    _INLVLE 000F25  
                                  i2l3695 1F50                                    i2l3871 2052  
                                  i2l3863 20AA                                    i2l3697 1F54  
                                  i2l3873 205A                                    i2l3881 1DA8  
                                  i2l3865 20B8                                    i2l3699 1F58  
                                  i2l3883 1DB4                                    i2l3867 20BC  
                                  i2l3875 1CDA                                    i2l3869 2046  
                                  i2l3877 1CDE                                    i2l3879 1CF4  
                         ??_lcd_writeChar 001B                                    _OSCFRQ 000ED9  
                     __size_of_SPI1_Close 0004         __end_of_CCP1_UserInterruptHandler 2062  
                           _CCP1_CallBack 00F7                __size_of_SPI1_ExchangeByte 001C  
                       __end_of_SPI1_Open 1528                                 ??_Reverse 0007  
                            vfprintf@cfmt 0079               __size_of_PWM3_LoadDutyValue 0034  
                 __end_of_TMR1_StartTimer 2180                                 ??___aodiv 0017  
                               ??___aomod 0017                                    ___wmul 1F68  
                       __end_of_TMR2_Stop 218C                        _expander_setOutput 2144  
                    __size_of_lcd_setAddr 0016                          ?_PWM2_Initialize 0001  
                 __end_of_TMR4_Initialize 1FF0                                    clear_0 1972  
                                  clear_1 197E                                    pad@buf 0019  
                        ?_ApplicationTask 0001                                    dtoa@fp 0022  
                                  _strlen 1CA4                       ?_expander_setOutput 0001  
                                  fputc@c 0007                            _PMD_Initialize 200E  
                                  fputs@c 0014                                    fputs@i 0015  
                                  fputs@s 0010                                 ??_isalpha 0009  
                               ??_isdigit 0009                                 ??_islower 0009  
                          lcd_example@F50 00E4                            lcd_example@F52 00D4  
                            __mediumconst FEF0                                 ??_isspace 0009  
                                  tblptrh 000FF7                                 ??_isupper 0009  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                        ?_lcd_writeString 001D                      __end_of_lcd_sendByte 1792  
                                  putch@c 0001                          __end_of_vfprintf 17F8  
             ??_TMR2_UserInterruptHandler 0001  TMR2_SetInterruptHandler@InterruptHandler 0007  
                 ApplicationTask@appState 00B1                           _CLC1_Initialize 1EC4  
                               ??_sprintf 0053                         __end_of_DecodeCmd 11F2  
                 __end_of_TMR1_WriteTimer 1F40                                    xtoa@fp 0022  
                               ??_toupper 000F             __size_of_INTERRUPT_Initialize 0004  
                        ?_TMR1_Initialize 0001                          ?_PWM3_Initialize 0001  
                       _SYSTEM_Initialize 1B1A                          lcd_sendByte@byte 0018  
                              __accesstop 0060                   __end_of__initialization 198E  
                __size_of_SPI1_WriteBlock 003A                        fp__SPI1_WriteBlock 0000  
                          _SPI1_ReadBlock 000000                        ?_SYSTEM_Initialize 0001  
                    ??_expander_setOutput 0013                                 ?_LCD_open 0001  
                           ___rparam_used 000001                          ??_lcd_sendNibble 0015  
                    lcd_setAddr@character 001B                            _DisableCapture 1EF0  
                          __pcstackCOMRAM 0001                              __pidataBANK0 1FB2  
                     ??_SYSTEM_Initialize 001B                                 ?_TMR2_ISR 0001  
                           __end_of_fputc 13AE                             __end_of_fputs 1A20  
                       ??_SPI1_Initialize 0007                             __end_of_putch 218E  
                        ?_TMR2_Initialize 0001                    __end_of_PMD_Initialize 202A  
                   SPI1_ExchangeByte@data 0007                            lcd_setAddr@row 001C  
                      _spi1_configuration FF17                __size_of_expander_sendByte 0032  
                               ?_GetEvent 0001                        __size_of_lcd_setup 00A6  
                        ??_lcd_returnHome 001B                                   ??_fputc 000B  
               __end_of_SYSTEM_Initialize 1B54                                   ??_fputs 0014  
                         _CLC3_Initialize 1E98                                   ??_putch 0007  
          ControlAction@dutyCycleValIndex 00A0                                __pbssBANK0 00A7  
                              __pbssBANK1 0100                          ??_Init4nextFrame 0009  
                __end_of_lcd_clearDisplay 207A                        _DELAY_milliseconds 1E3A  
                              ??_LCD_open 0009                            _SPI1_WriteByte 000000  
                __size_of_spi_master_open 0032                    __end_of_DisableCapture 1F18  
                    __end_of_Init_display 1BC6                       ?_DELAY_milliseconds 0007  
                       ?_CCP1_SetCallBack 0007                     expander_sendByte@addr 000F  
               _TMR2_UserInterruptHandler 20AA                  __end_of_digipot_setWiper 1E98  
                   expander_sendByte@byte 000E                                   ?___wmul 0007  
                        ?_TMR1_StartTimer 0001                                ??_TMR2_ISR 0001  
                      ??_CCP1_SetCallBack 000A                                   _CCP1CAP 000FAC  
                                 _CCP1CON 000FAB                                   _CCP2CON 000FA7  
                                 _CCP1PPS 000EAA                                   _CLC1CON 000E27  
                                 _CLC3CON 000E3B                                   _CLC1POL 000E28  
                                 _CLC3POL 000E3C                           _dutyCycleValArr FF0F  
                        ?_TMR4_Initialize 0001                              ??_SPI1_Close 0007  
                         ?_PMD_Initialize 0001                                   ?_strlen 0007  
                 __size_of_TMR1_StopTimer 0004                   __end_of_CLC1_Initialize 1EF0  
                                 _T2INPPS 000EA6                      ??_DELAY_milliseconds 0009  
                                 _OSCCON1 000ED3                                   _OSCCON3 000ED5  
                     _ccpCapturedValueBuf 0100                        __size_of_vfpfcnvrt 03BE  
                              ??_GetEvent 0007                                   _OSCTUNE 000ED8  
                                 _PWM3DCH 000FA3                                   _PWM3DCL 000FA2  
                                 _PWM3CON 000FA4                                   _SSP1ADD 000F92  
                                 _SLRCONA 000F09                                   _SLRCONB 000F11  
                                 _SLRCONC 000F19                                   _SLRCOND 000F1E  
                                 _SLRCONE 000F26                                   _SSP1BUF 000F91  
                                 _IR_data 00A7                          ?_TMR1_WriteTimer 0007  
       CCP1_DefaultCallBack@capturedValue 0001                  __size_of_lcd_setContrast 000A  
                      lcd_writeString@row 001F               ??_CCP1_UserInterruptHandler 0003  
                         ?_DisableCapture 0001                        __end_of_SPI1_Close 2188  
                               _CLCIN0PPS 000E1F                                   __Hparam 0000  
                           ??_check4Start 0007                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 000A                                   _Reverse 1856  
             ControlAction@displayString1 008F                         ??_SPI1_WriteBlock 000C  
                                 ___aodiv 0DD8                         __end_of_lcd_setup 1678  
                                 ___aomod 0F60                           __size_of___wmul 0026  
                               ?_vfprintf 0073                                   __pcinit 194C  
                                 __ramtop 0F00                    lcd_writeChar@character 001B  
                                 __ptext0 1AA2                                   __ptext1 1B1A  
                                 __ptext2 15D2                                   __ptext3 1998  
                                 __ptext4 2062                                   __ptext5 2152  
                                 __ptext6 1FD2                                   __ptext7 1DDA  
                                 __ptext8 211A                                   __ptext9 1C6E  
                SPI1_WriteBlock@blockSize 000A                  __size_of_CCP1_CaptureISR 0032  
                   __size_of_lcd_sendByte 0084                           __size_of_strlen 0036  
                               _T1CONbits 000FCE                   __end_of_CLC3_Initialize 1EC4  
                   _OSCILLATOR_Initialize 207A                                 _T2CONbits 000FBC  
                            __size_of_abs 0040                              __size_of_pad 00C2  
                                 _isalpha 1ADE                                   _isdigit 1C36  
                               _T4CONbits 000FB6                      fp__SPI1_ExchangeByte 0000  
                                 _islower 1BC6                  ??_PIN_MANAGER_Initialize 0007  
                                 _isspace 18FA                                 _T2HLTbits 000FBD  
                                 _isupper 1BFE                                 _T4HLTbits 000FB7  
                                 atoi@neg 0014                __size_of_SYSTEM_Initialize 003A  
                                 _sprintf 18A8                                   _toupper 17F8  
                    end_of_initialization 198E                                 _T2RSTbits 000FBF  
                               _T4RSTbits 000FB9                                   fputc@fp 0009  
                                 fputs@fp 0012                     __end_of_ControlAction 12E4  
                       __end_of_spiMaster FF0F                   __end_of_dutyCycleValArr FF17  
                       __end_of_vfpfcnvrt 03BE                                   postdec1 000FE5  
                                 postdec2 000FDD                              _lcd_sendByte 170E  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE              __end_of_CCP1_DefaultCallBack 2192  
                       ??_spi_master_open 0009                                ??_vfprintf 0053  
                               _SPI1_Open 1470                                   strlen@a 0009  
                                 strlen@s 0007                       __end_of_check4Start 1A62  
               _CCP1_UserInterruptHandler 2046                                 _PORTAbits 000F8C  
                               _TMR2_Stop 2188                         lcd_sendByte@RSbit 0014  
                        ?_CLC1_Initialize 0001                                 _TRISCbits 000F89  
                __size_of_CCP1_Initialize 0030                     __size_of_Init_display 0038  
                               _DecodeCmd 10C4                               _CCP1CONbits 000FAB  
                         _SPI1_Initialize 1F8E                     __end_of_lcd_writeChar 2144  
                             _CCP2CONbits 000FA7                __end_of_PWM3_LoadDutyValue 1D44  
                       ??_lcd_setContrast 0011                             ??_lcd_setAddr 001C  
                       __size_of_LCD_open 0008                  ApplicationTask@rxCommand 00A5  
            __end_of_INTERRUPT_Initialize 217C                               _CLC1CONbits 000E27  
    __end_of_TMR2_DefaultInterruptHandler 2190     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 218E                            _ccpCapturedVal 00AF  
               ApplicationTask@cmd_status 00A6                                ?_SPI1_Open 0001  
               i2TMR1_WriteTimer@timerVal 0001                               _CLC3CONbits 000E3B  
                             vfpfcnvrt@ap 004D                               vfpfcnvrt@fp 0049  
                             vfpfcnvrt@ll 0060                            __end_of___wmul 1F8E  
                       __size_of_TMR2_ISR 0036                            _TMR1_StopTimer 2180  
                              ?_TMR2_Stop 0001                    ?_OSCILLATOR_Initialize 0001  
                ?_TMR1_HasOverflowOccured 0001                          ?_CLC3_Initialize 0001  
                          __end_of_strlen 1CDA                       start_initialization 194C  
                           fp__SPI1_Close 0000                  __size_of_PWM2_Initialize 0016  
                 __size_of_expander_setup 000C                              _Init_display 1B8E  
         __size_of_PIN_MANAGER_Initialize 00AA                               __end_of_abs 1AA2  
                             __end_of_pad 1470                  __size_of_ApplicationTask 02C4  
                       ??_CCP1_CaptureISR 0003                         __size_of_GetEvent 001E  
                       ?_lcd_clearDisplay 0001                                ?_DecodeCmd 0001  
                __size_of_lcd_writeString 0096               __size_of_expander_setOutput 000E  
                      ??_lcd_clearDisplay 001B                  __size_of_PWM3_Initialize 0016  
                __size_of_TMR1_Initialize 0036                               _check4Start 1A20  
                             vfprintf@fmt 0075                          ??_PMD_Initialize 0007  
                       ?_digipot_setWiper 0001                                  ??___wmul 000B  
                             _CCPTMRSbits 000FAD                    __end_of_TMR1_StopTimer 2184  
                             __pdataBANK0 00D4                        ??_digipot_setWiper 000E  
         fp__TMR2_DefaultInterruptHandler 0000             ?_TMR2_DefaultInterruptHandler 0001  
                     __end_of_lcd_setAddr 211A                                  ??_strlen 0009  
                   CCP1_CaptureISR@module 0003                             _SPI1_ReadByte 000000  
                         DecodeCmd@rxAddr 000C                               __pbssCOMRAM 0053  
                         DecodeCmd@retVal 000D                 __size_of_CCP1_SetCallBack 000E  
                           __pcstackBANK0 0060                          ___aodiv@dividend 0007  
                __size_of_TMR2_Initialize 0030                   __end_of_SPI1_Initialize 1FB2  
                        ??_DisableCapture 0009                      _CCP1_DefaultCallBack 2190  
                         _SPI1_WriteBlock 1B54                                 _atoi$2683 0016  
                               _atoi$2684 001A                                 _atoi$2685 0018  
                       ??_CCP1_Initialize 000A                                 __pnvBANK0 00F4  
                  _PIN_MANAGER_Initialize 1528                                 _dtoa$2636 0034  
                                ?_Reverse 0001                                 __pintcode 0008  
                           __pmediumconst FEF0                                  ?___aodiv 0007  
                                ?___aomod 0007                          ___aodiv@quotient 0019  
                             ??_SPI1_Open 0007           __end_of_TMR1_HasOverflowOccured 2104  
                         ?_TMR1_StopTimer 0001              ??_INTERRUPT_InterruptManager 0005  
                               _lcd_setup 15D2                               ??_TMR2_Stop 0001  
                       __size_of_vfprintf 0066                   __size_of_lcd_sendNibble 0044  
                                _CLC1GLS0 000E2D                                  _CLC1GLS1 000E2E  
                                _CLC1GLS2 000E2F                                  _CLC1GLS3 000E30  
                                _CLC3GLS0 000E41                                  _CLC3GLS1 000E42  
                                _CLC3GLS2 000E43                                  _CLC3GLS3 000E44  
                                _CLC1SEL0 000E29                                  _CLC1SEL1 000E2A  
                                _CLC1SEL2 000E2B                                  _CLC1SEL3 000E2C  
                __size_of_TMR1_StartTimer 0004                                  ?_isalpha 0007  
                                _CLC3SEL0 000E3D                                  _CLC3SEL1 000E3E  
                                _CLC3SEL2 000E3F                                  _CLC3SEL3 000E40  
                                ?_isdigit 0007                                  ?_islower 0007  
                                ?_isspace 0007                   lcd_setContrast@contrast 0011  
                                ?_isupper 0007               __size_of_DELAY_milliseconds 0030  
                __size_of_TMR4_Initialize 001E                                  ?_sprintf 007B  
                          __size_of_fputc 00CA                                  _T2CLKCON 000FBE  
                          __size_of_fputs 0044                                  ?_toupper 000D  
                   ?_CCP1_DefaultCallBack 0001                                  _T4CLKCON 000FB8  
                          __size_of_putch 0002                      _INTERRUPT_Initialize 2178  
                       ??_PWM2_Initialize 0007                           _spi_master_open 1D76  
                             ??_DecodeCmd 000A                            ___wmul@product 000B  
                                _LATAbits 000F82                                  _LATDbits 000F85  
                       ??_ApplicationTask 00A3                                  _LCD_open 2170  
                                _PIE4bits 000EC1                                  _PIE6bits 000EC3  
                 __size_of_lcd_returnHome 0018                  __size_of_TMR1_WriteTimer 0028  
     __size_of_INTERRUPT_InterruptManager 006E                                  i2u243_40 1F4E  
                                i2u243_41 1F4A                                  i2u260_48 1CFA  
                                i2u260_49 1D0E                                  i2u261_48 1DC2  
                                i2u261_49 1DD8                                  i2u258_40 20B8  
                                i2u274_40 0020                                  i2u258_41 20B4  
                                i2u274_41 001C                                  i2u259_40 1CF4  
                                i2u275_40 0030                                  i2u259_41 1CF0  
                                i2u275_41 002C                                  i2u276_40 003E  
                                i2u276_41 003A                                  i2u277_40 0054  
                                i2u277_41 0050                                  _PIR3bits 000EC8  
                                i2u278_40 0062                                  i2u278_41 005E  
                                _PIR4bits 000EC9                                  _PIR6bits 000ECB  
                             _lcd_setAddr 2104                                 _spiMaster FEF1  
          DELAY_milliseconds@milliseconds 0007                   __size_of_Init4nextFrame 0008  
                                _SSP1CON1 000F95                                  _SSP1CON2 000F96  
                       ??_lcd_writeString 0020                                  _TMR2_ISR 1CDA  
                                _SSP1STAT 000F94                                 _vfpfcnvrt 0000  
            fp__TMR2_UserInterruptHandler 0000                                 _xtoa$2647 0035  
                               _xtoa$2648 0037                         ??_TMR1_Initialize 0007  
                       ??_PWM3_Initialize 0007                                ?_lcd_setup 0001  
                       ___wmul@multiplier 0007                   __end_of_SPI1_WriteBlock 1B8E  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000E  
                          _expander_setup 2152                 ?_TMR2_SetInterruptHandler 0007  
                                _GetEvent 1FF0                              _isspace$2710 000D  
                              vfpfcnvrt@c 0072                          ?_SPI1_Initialize 0001  
                         _lcd_setContrast 215E                                 copy_data0 1960  
                   ?_INTERRUPT_Initialize 0001                         ??_TMR2_Initialize 000A  
                                __Hrparam 0000                         i2_TMR1_WriteTimer 1F40  
                              vfprintf@ap 0077                                  __Lrparam 0000  
                              vfprintf@fp 0073                          __size_of_Reverse 0052  
                      ?i2_TMR1_WriteTimer 0001                   ??_OSCILLATOR_Initialize 0007  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                          DecodeCmd@count 000E                                ?_vfpfcnvrt 0049  
                         _CCP1_CaptureISR 1DA8                           ___aodiv@divisor 000F  
                         ___aodiv@counter 0017                        _PWM3_LoadDutyValue 1D10  
                  __end_of_expander_setup 215E                       ??i2_TMR1_WriteTimer 0003  
                expander_setOutput@output 0013                    __size_of_ControlAction 00F2  
                              sprintf@fmt 007D                          _CCP1_SetCallBack 2128  
                        __size_of_isalpha 003C                          __size_of_isdigit 0038  
          CCP1_SetCallBack@customCallBack 0007                          __size_of_islower 0038  
                        __size_of_isspace 0052                   __end_of_spi_master_open 1DA8  
                                __ptext10 1F8E                                  __ptext11 20C2  
                                __ptext20 2128                                  __ptext12 20D8  
                                __ptext21 1B8E                                  __ptext13 200E  
                              _T1GCONbits 000FCF                                  __ptext30 1F18  
                                __ptext22 215E                                  __ptext14 1528  
                                __ptext31 2180                                  __ptext23 1E6A  
                                __ptext15 207A                                  __ptext40 17F8  
                                __ptext32 1FF0                                  __ptext24 0970  
                                __ptext16 2178                                  __ptext41 1BC6  
                                __ptext33 10C4                                  __ptext25 1A20  
                                __ptext17 1E98                                  __ptext50 1A62  
                                __ptext42 1BFE                                  __ptext34 1856  
                                __ptext26 217C                                  __ptext18 1EC4  
                                __ptext51 0F60                                  __ptext43 1ADE  
                                __ptext35 11F2                                  __ptext27 20EE  
                                __ptext19 1E0A                                  __ptext60 2092  
                                __ptext52 0DD8                                  __ptext44 03BE  
                                __ptext36 18A8                                  __ptext28 2168  
                                __ptext61 170E                                  __ptext53 0C34  
                                __ptext45 13AE                                  __ptext37 1792  
                                __ptext29 1EF0                                  __ptext70 1E3A  
                                __ptext62 2144                                  __ptext54 18FA  
                                __ptext46 1CA4                                  __ptext38 0000  
                                __ptext71 1D10                                  __ptext63 1D44  
                                __ptext55 1C36                                  __ptext47 19DC  
                                __ptext39 069C                                  __ptext80 2190  
                                __ptext64 1D76                                  __ptext56 1F68  
                                __ptext48 12E4                                  __ptext81 0000  
                                __ptext73 1CDA                                  __ptext65 2170  
                                __ptext57 1678                                  __ptext49 218C  
                                __ptext74 218E                                  __ptext66 1470  
                                __ptext58 2136                       ?_PWM3_LoadDutyValue 0007  
                                __ptext75 20AA                                  __ptext67 1B54  
                                __ptext59 2104                                  __ptext76 2188  
                                __ptext68 202A                                  __ptext77 1DA8  
                                __ptext69 2184                                  __ptext78 2046  
                                __ptext79 1F40                    ??_CCP1_DefaultCallBack 0003  
                        __size_of_isupper 0038                              _SSP1CON1bits 000F95  
                       ??_TMR1_StartTimer 0007                  __size_of_CLC1_Initialize 002C  
                        __size_of_sprintf 0052                          __size_of_toupper 005E  
        __size_of_TMR1_HasOverflowOccured 0016                         ??_TMR4_Initialize 0007  
                           __size_of_atoi 01A4                             __size_of_main 003C  
                           __size_of_dtoa 02DE                             __size_of_xtoa 02D4  
               __end_ofi2_TMR1_WriteTimer 1F68                              ?_check4Start 0001  
                    ??_PWM3_LoadDutyValue 0009                                  int$flags 0058  
                             fp__LCD_open 0000                                  _vfprintf 1792  
      __end_of_INTERRUPT_InterruptManager 0076                _INTERRUPT_InterruptManager 0008  
                       ??_TMR1_WriteTimer 0009                 __size_of_lcd_clearDisplay 0018  
                             ??_lcd_setup 001B                            _lcd_sendNibble 1998  
                        ___aomod@dividend 0007                           ?_expander_setup 0001  
                 __end_of_lcd_setContrast 2168                            _vfpfcnvrt$2662 0070  
                  __size_of_lcd_writeChar 000E                                _INTCONbits 000FF2  
            fp__CCP1_UserInterruptHandler 0000                          ?_SPI1_WriteBlock 0008  
                         _CCP1_Initialize 1E0A                      SPI1_WriteBlock@block 0008  
               __size_of_digipot_setWiper 002E                                  isalpha@c 0007  
                                isdigit@c 0007                    ??_INTERRUPT_Initialize 0007  
                     digipot_setWiper@cmd 000F                       digipot_setWiper@val 000E  
                       ControlAction@duty 00A1                                  intlevel2 0000  
                __size_of_CLC3_Initialize 002C                                 sprintf@ap 0083  
              __end_of_expander_setOutput 2152                                  islower@c 0007  
                                isspace@c 0007                   ?_PIN_MANAGER_Initialize 0001  
                           _ControlAction 11F2                                  isupper@c 0007  
                          _lcd_returnHome 2092                          ??_TMR1_StopTimer 0007  
                 __end_of_CCP1_CaptureISR 1DDA                            _Init4nextFrame 2168  
             PWM3_LoadDutyValue@dutyValue 0007                           ___aomod@divisor 000F  
                  __end_of_lcd_sendNibble 19DC                               ??_vfpfcnvrt 004F  
                         ___aomod@counter 0017                       SPI1_WriteBlock@data 000C  
                              _SPI1_Close 2184                          ControlAction@cmd 00A2  
                                sprintf@f 0085                                  sprintf@s 007B  
                              _SSP1DATPPS 000EB3                                _SSP1CLKPPS 000EB2  
                         _PWM2_Initialize 20D8                                  toupper@c 000D  
      __size_of_TMR2_UserInterruptHandler 0018                           _ApplicationTask 0970  
              ?_TMR2_UserInterruptHandler 0001                          ?_spi_master_open 0001  
                            ___aodiv@sign 0018            __end_of_PIN_MANAGER_Initialize 15D2  
                         _lcd_writeString 1678                    __end_of_lcd_returnHome 20AA  
                          Reverse@byteVar 0009                            ?_ControlAction 0001  
                   _TMR2_InterruptHandler 00F4                __size_ofi2_TMR1_WriteTimer 0028  
                           _lcd_writeChar 2136                    lcd_sendByte@packetHigh 0019  
                            ___aomod@sign 0018                           _TMR1_Initialize 1C6E  
                         _PWM3_Initialize 20C2                    __end_of_Init4nextFrame 2170  
                       ??_CLC1_Initialize 0007                     lcd_sendByte@packetLow 001A  
              __end_of_spi1_configuration FF1F                    lcd_sendByte@nibbleHigh 0016  
                            ?_lcd_setAddr 001B                     lcd_sendByte@nibbleLow 0017  
